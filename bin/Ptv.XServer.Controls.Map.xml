<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ptv.XServer.Controls.Map</name>
    </assembly>
    <members>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget">
            <summary> Interaction logic for NavigationGadget. </summary>
            <summary>
            NavigationGadget
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.UpButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a click on the up button. Scrolls the map in upwards direction. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.DownButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Handler for a click on the down button. Scrolls the map in downwards direction. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.RightButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Handler for a click on the right button. Scrolls the map in right direction. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.LeftButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Handler for a click on the left button. Scrolls the map in left direction. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.Navigation_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Handler for entering the navigation gadget with the mouse. The navigation gadget is faded in
            and shown in opaque colors. </summary>
            <param name="sender"> Sender of the MouseEnter event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.Navigation_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Handler for leaving the navigation gadget with the mouse. The navigation gadget is faded out
            and shown in transparent colors. </summary>
            <param name="sender"> Sender of the MouseLeave event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.NavigationGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.WatermarkControl">
            <summary> Control showing a watermark text over the map. </summary>
            <summary>
            WatermarkControl
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.WatermarkControl.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.WatermarkControl"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.WatermarkControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget">
            <summary> Gadget with a dimmer slider to change the dim state of the map. </summary>
            <summary>
            DimmerGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.dimmerCanvas">
            <summary> Canvas which dims the map by showing some transparent white or black colored layer over the map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.dimmSlider_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary> Event handler for a change of the dim slider value. Adapts the dimmer canvas opacity due to the
            given dim value. </summary>
            <param name="sender"> Sender of the ValueChanged event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.dimmSlider_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Event handler for a click on the dim slider with the right mouse button. A right click on the dim
            slider resets its value to zero which means that the layer is no more dimmed. </summary>
            <param name="sender"> Sender of the MouseRightButtonDown event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.DimmerGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView">
            <summary> Map displayed in the magnifier. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.parentMapView">
            <summary> Parent map of the magnifier. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView"/> class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.ZoomDelta">
            <summary> Gets or sets the zoom delta of the magnifier in reference to the map. </summary>
            <value> Zoom delta of the magnifier. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.ParentMapView">
            <summary> Gets or sets the parent map which is magnified. </summary>
            <value> Parent map. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.UseAnimation">
            <summary> Gets a value indicating whether animation is used for map actions. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.SetPosition(System.Windows.Point)">
            <summary> Sets the position of the magnifier and calculates the zoom in order to display the magnified map. </summary>
            <param name="mousePosition"> Current position of the mouse indicating where the magnifier is positioned. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.MagnifierMap_MouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary> Event handler for changing the mouse wheel when the map is active. Scrolling the mouse wheel in
            forward direction zooms in the map, scrolling back zooms out of the map. </summary>
            <param name="sender"> Sender of the MouseWheel event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMapView.parentMapView_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Event handler for moving the mouse over the map. Moves the magnifier over the map and shows the
            corresponding map part magnified. </summary>
            <param name="sender"> Sender of the MouseMove event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView">
            <summary> Map showing a small overview of the parent map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.parentMapView">
            <summary> The parent map of the overview map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.selfNotify">
            <summary> Flag showing if a change in the map should lead to an update or not. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.dragRectangle">
            <summary> Rectangle showing the currently visible part of the parent map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView"/> class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.ZoomDelta">
            <summary> Gets or sets the zoom delta of the overview map in reference to the parent map. The default zoom delta is 4. </summary>
            <value> Zoom delta of the overview map. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.ParentMapView">
            <summary> Gets or sets the parent map for which the overview map shows the overview. </summary>
            <value> Parent map of the overview map. </value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.UpdateRect">
            <summary> Updates the rectangle showing the currently visible part of the parent map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.UseAnimation">
            <summary> Gets a value indicating whether animation is used for map actions. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.UpdateOverviewMap(System.Boolean)">
            <summary> Updates the overview map. </summary>
            <param name="animate"> Flag showing if the update is to be animated or not. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.SetZoom(System.Boolean)">
            <summary> Sets the zoom of the overview map. </summary>
            <param name="animatePan"> Flag showing if zooming is animated or not. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.UpdateParentMap">
            <summary> Updates the parent map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMapView.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary> Receives events from the centralized event manager. </summary>
            <param name="managerType"> The type of the System.Windows.WeakEventManager calling this method. </param>
            <param name="sender"> Object that originated the event. </param>
            <param name="e"> Event data. </param>
            <returns> True if the listener handled the event. It is considered an error by the
                      System.Windows.WeakEventManager handling in WPF to register a listener for an event that the
                      listener does not handle. Regardless, the method should return false if it receives an event that
                      it does not recognize or handle. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget">
            <summary> Gadget showing a zoom slider on the map. </summary>
            <summary>
            ZoomSliderGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.selfNotify">
            <summary> Flag showing if a change of the map should lead to an update or not. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.orientation">
            <summary> Orientation of the zoom slider. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.Orientation">
            <summary> Gets or sets the orientation (horizontal or vertical) of the zoom slider. </summary>
            <value> Orientation of the zoom slider. </value>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.MapZoomProperty">
            <summary> Zoom factor of the map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.MapZoom">
            <summary> Gets or sets current map zoom. </summary>
            <value> Zoom factor of the map. </value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.zoomSlider_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary> Event handler for changing the zoom slider. On a change, the map is zoomed in or out due to the
            change direction ad amount of the zoom slider value. </summary>
            <param name="sender"> Sender of the ValueChanged event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.mapView_MapChangedEvent(System.Object,System.EventArgs)">
            <summary> Event handler for a change of the map. Updates the value of the zoom slider. </summary>
            <param name="sender"> Sender of the MapChangedEvent. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.UpButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Handles a click on the up button which zooms in the map. Updates the zoom slider value. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.DownButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Handler for a click on the down button which zooms out of the map. Updates the zoom slider value. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ZoomSliderGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.NearestSearchResult">
            <summary> Struct containing all relevant data needed for each result of a nearest search. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.NearestSearchResult.Id">
            <summary> Gets or sets the identifier of a resulting object. </summary>
            <value> Identifier of a resulting object. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.NearestSearchResult.Distance">
            <summary>
            Gets or sets the distance of the object to the point from which the search is started. This field allows
            sorting multiple results according their (ascending) distance order.
            </summary>
            <value> Distance of the object to the search point. </value>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch">
            <summary> Collection of geographical search methods for layer objects. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.NearestSearch(System.Windows.Point,System.Int32,System.Boolean,System.Double)">
            <summary> Search for layer objects which reside nearest to a point specified in <paramref name="point"/>. </summary>
            <param name="point"> Point used as 'kick-off' of this search. </param>
            <param name="maxNumElements"> Maximal number of results to look for. </param>
            <param name="includeAllOfSameDistance"> Flag indicating that the sorted list can exceed the maximal number
            of elements, when one or more objects exist having the same distance as the element at the
            <paramref name="maxNumElements"/> position. Especially when only the nearest object should be returned
            (<paramref name="maxNumElements"/> equals 1), all objects at the same location should be returned too. </param>
            <param name="maxDistance"> Delimiter for reducing the search area, commonly used to improve performance. </param>
            <returns> Collection of nearest layer objects, provided with additional distance information. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.NearestSearch(System.Windows.Point,System.Int32,System.Int32,System.Boolean)">
            <summary> Search for layer objects nearest to a point specified in <paramref name="point"/>. </summary>
            <param name="point"> Point used as 'kick-off' of this search. </param>
            <param name="minNumElements"> Minimal number of results to look for. This parameter acts as a delimiter for
            terminating the search. </param>
            <param name="maxNumElements"> Maximal number of results to look for. </param>
            <param name="includeAllOfSameDistance"> Flag indicating that the sorted list can exceed the maximal number 
            of elements, when one or more objects exist having the same distance as the element at the
            <paramref name="maxNumElements"/> position. Especially when only the nearest object should be returned
            (<paramref name="maxNumElements"/> equals 1), all objects at the same location should be returned too. </param>
            <returns> Collection of nearest layer objects, provided with additional distance information. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.RectangleSearch(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> Search for layer objects contained inside the rectangle specified in the <paramref name="rectangle"/>
            parameter. </summary>
            <param name="rectangle"> Rectangle used to search for all layer objects contained in it. </param>
            <returns> Collection of layer objects, located inside the specified rectangle. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.EllipseSearch(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> Search for layer objects contained inside the ellipse specified in the
            <paramref name="boundingRectangle"/> parameter. </summary>
            <param name="boundingRectangle"> Bounding rectangle of an ellipse used to search for all layer objects contained
            in it. </param>
            <returns> Collection of layer objects, located inside the specified ellipse. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.PolygonSearch(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary> Search for layer objects contained inside the polygon specified in the <paramref name="points"/>
            parameter. </summary>
            <param name="points"> Collection of points defining a polygon, which is used to search for all layer
            objects contained in it. </param>
            <returns> Collection of layer objects, located inside the specified polygon. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ILayerGeoSearch.IntersectionSearch(System.Windows.Point,System.Windows.Point)">
            <summary> Search for layer objects cut by the line defined by the points <paramref name="p1"/> and 
            <paramref name="p2"/>. Especially for point objects, its part of the layer specification, when an object is
            regarded as 'cut' by a line. </summary>
            <param name="p1"> First point of 'cutting' line. </param>
            <param name="p2"> Second point of 'cutting' line. </param>
            <returns> Collection of layer objects, which are cut by the specified line. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget">
            <summary> Gadget showing the map coordinates of the current mouse position in logical format (GeoMinSec). </summary>
            <summary>
            CoordinatesGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.isActive">
            <summary> Boolean flag showing whether the mouse is on the map or not. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.INVALID_COORD_TEXT">
            <summary> Constant holding the text which is shown if the mouse is not currently on the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.EXTENT_CALC_DUMMY">
            <summary> Constant holding the text which is used to calculate the width of the coordinates gadget text box. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.UpdateText">
            <summary> Updates the text which is showing the current coordinates. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.Map_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Event handler for entering the map with the mouse. If the mouse enters the map, the coordinates
            text is updated. </summary>
            <param name="sender"> Sender of the MouseEnter event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.Map_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Event handler for moving the mouse over the map. At each new position, the coordinates text is
            updated. </summary>
            <param name="sender"> Sender of the MouseMove event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.CoordinatesText_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for having finished loading the coordinates text. Calculates the appropriate width
            for this gadget by respecting the current font family and the font size. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.Visible">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.CoordinatesText">
            <summary>
            CoordinatesText Name Field
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CoordinatesGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget">
            <summary> Gadget showing the copyright text of the map. </summary>
            <summary>
            CopyrightGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.layers">
            <summary> Collection of all layers. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.CopyrightGadget_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for having loaded the gadget successfully. Initializes the layer collection and updates the copyright text. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.Visible">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.UpdateCopyrightText">
            <summary> Updates the copyright text which is shown in this gadget. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.CopyrightGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.LayersGadget">
            <summary> Gadget listing the different layers of the map. </summary>
            <summary>
            LayersGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.selectionColumn">
            <summary> Grid column in which the selection check box resides. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.layers">
            <summary> Layer collection which knows all layers of the map control that should be listed. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.layerIndices">
            <summary> List of layer indices. The indices specify the row in which the layer is displayed. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.updateByExclusiveSelection">
            <summary> Flag showing that the next check operation on the selection checkbox is triggered by an exclusively selected layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.inactiveLayersExpanderHeader">
            <summary> Stores the inactive LayersExpander header element. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.referenceSlider">
            <summary> Stores randomly a slider which is used to calculate the layout. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.referenceOffset">
            <summary> Stores the reference offset used for layout calculation. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.headerSizeSet">
            <summary> Flag indicating whether a correction of the layout regarding the header text has been processed. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.ShowContentLayersOnly">
            <summary> Gets or sets a value indicating whether only layers of category "content" are to be shown. </summary>
            <value> Flag indicating whether only content layers are to be shown. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayerListReverted">
            <summary> Gets or sets a value indicating whether the layer list is shown reverted. By default, the value
            is false and the layers are shown bottom up in the list. The layer which is painted on the bottom of the
            map is also shown at the last position in the map. If this parameter is true, the bottom layer is shown at
            the first position in the list. </summary>
            <value> Flag indicating whether the layer list should be displayed reverted. </value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.LayersGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.Layers_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary> Event handler for a change of the layers collection. Updates the layer list. </summary>
            <param name="sender"> Sender of the CollectionChanged event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.textBlock_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Event handler for clicking with the left button on the text block showing the layer name. Shows
            the settings dialog on mouse up. </summary>
            <param name="sender"> Sender of the MouseLeftButtonUp event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.selection_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for checking the selection checkbox. Updates the selection checkboxes. </summary>
            <param name="sender"> Sender of the Checked event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.selection_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for un-checking the selection checkbox. Updates the selection checkboxes. </summary>
            <param name="sender"> Sender of the Unchecked event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.selection_Exclusive(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a click with the right mouse button on the selection checkbox. This makes the
            layer exclusive selectable. </summary>
            <param name="sender"> Sender of the right mouse button click event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.visibility_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for un-checking the visibility toggle button of the layer. Makes the layer invisible. </summary>
            <param name="sender"> Sender of the Unchecked event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.visibility_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for checking the visibility toggle button of the layer. Makes the layer visible. </summary>
            <param name="sender"> Sender of the Checked event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.slider_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary> Event handler for a change of the dim slider. Sets a new opacity for the layer depending on the
            dim value. </summary>
            <param name="sender"> Sender of the ValueChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.UpdateLayerList">
            <summary> Updates the list of layers to be shown in the gadget. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.selection_Common(System.Object,System.Boolean)">
            <summary> Helper method for checking a selection checkbox of one of the layers. Updates the selection checkboxes. </summary>
            <param name="sender"> Sender of the Checked event. </param>
            <param name="selectable"> Shows if the layer is marked to be selectable or not. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.UpdateSelection">
            <summary> Updates the selection checkboxes. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayersExpander_Expanded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for expanding the layer dialog expander. Fades in the layers of the layer dialog. </summary>
            <param name="sender"> Sender of the Expanded event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayersExpander_Collapsed(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for collapsing the layer dialog expander. Fades out the layers of the layer dialog. </summary>
            <param name="sender"> Sender of the Collapsed event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.ExchangeLayersExpanderHeader">
            <summary> Exchanges the expander header depending on if the gadget is expanded or not. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayersExpander_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Sets the appropriate header on app startup. This helps at development time since the gadget is
            then shown like when it is active. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayersExpanderLayoutUpdated(System.Object,System.EventArgs)">
            <summary> Retrieves the layout of the layers gadget. The algorithm was developed by trial and error. </summary>
            <param name="sender"> Sender of the LayoutUpdated event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.LayersExpander_LayoutUpdated(System.Object,System.EventArgs)">
            <summary> Event handler for an update of the layers expander. Adapts font size, margin and height to the
            currently contained text. </summary>
            <param name="sender"> Sender of the LayoutUpdated event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.LayersGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap">
            <summary> Gadget showing a magnifier on the map. The magnifier offers you to get a deeper look into the map without zooming in. </summary>
            <summary>
            MagnifierMap
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.DefaultMagnifierSize">
            <summary>The default size of the magnifier.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MinMagnifierSize">
            <summary> Minimum magnifier size. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.m_CurrentMousePosition">
            <summary> Current pixel position of the mouse. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.m_CurrentMapPosition">
            <summary> Current position of the mouse in geo coordinates. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap"/> class. Initializes the base size
            with the default of 500 pixels. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.BaseSize">
            <summary> Gets or sets the base value used to calculate the sizes of the magnifier. The value of this
            property is the overall diameter of the magnifier. This property can be altered manually so that a size
            change of the magnifier at runtime is possible. </summary>
            <value> Magnifier size. </value>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.BaseSizeProperty">
            <summary> The base size of the magnifier. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierRadius">
            <summary> Gets or sets the magnifier radius.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierRadiusProperty">
            <summary> The radius of the magnifier. This property is calculated on the basis of the BaseSize property.
            Do not alter it manually. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.ContentSize">
            <summary> Gets or sets the content size (height and width of the magnifier).</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.ContentSizeProperty">
            <summary> The content height and width of the magnifier. This property is calculated on the basis of the
            BaseSize property. Do not alter it manually. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierCenter">
            <summary> Gets or sets the magnifier center point. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierCenterProperty">
            <summary> The center point of the magnifier. This property is calculated on the basis of the BaseSize
            property. Do not alter it manually. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierMargin">
            <summary> Gets or sets the magnifier margin.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.MagnifierMarginProperty">
            <summary> The margin of the magnifier. This property is calculated on the basis of the BaseSize property.
            Do not alter it manually. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.BackgroundPathSize">
            <summary> Gets or sets the background path size.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.BackgroundPathSizeProperty">
            <summary> The size of the background paths. This property is calculated on the basis of the BaseSize
            property. Do not alter it manually. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.map_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary> Event handler for pressing a key while the map is active. If you press "m", the magnifier is
            shown on the map. </summary>
            <param name="sender"> Sender of the KeyDown event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.parentMap_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary> Event handler for releasing a key while the map is active. If you release the "m" key, the
            magnifier is no more shown on the map. </summary>
            <param name="sender"> Sender of the KeyUp event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.parentMap_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Event handler for moving the mouse over the map. Moves the magnifier on the map. </summary>
            <param name="sender"> Sender of the MouseMove event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.visible">
            <summary> Flag showing if the coordinates gadget is to be shown or hidden. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.Visible">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.CalculateSizes(Ptv.XServer.Controls.Map.Gadgets.MagnifierMap,System.Double)">
            <summary> Helper method to calculate the sizes of the magnifier properties like radius, center, margin and
            size. </summary>
            <param name="magnifier"> The magnifier to be altered. </param>
            <param name="baseSize"> The new base size. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.ApplySizes(Ptv.XServer.Controls.Map.Gadgets.MagnifierMap,System.Double)">
            <summary> Helper method to set the size of the magnifier UIElements. </summary>
            <param name="magnifier"> The magnifier to alter. </param>
            <param name="baseSize"> The new base size. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.HideMagnifier(System.Object,System.Object)">
            <summary> Helper method to hide the magnifier. </summary>
            <param name="sender"> Sender of the LostFocus event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MagnifierMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.NamespaceDoc">
            <summary> To interact with the map visualization, there is a collection of
            <see cref="N:Ptv.XServer.Controls.Map.Gadgets"/>. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.FocusBehaviorMode">
            <summary> Defines the mode of the focus behavior. By default the MapGadget hands over the focus if an event is
            received (same as HandoverToMap mode). In the 'Retain' mode the focus is not handed over. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.FocusBehaviorMode.HandoverToMap">
            <summary> Default. Hands over the focus to the map if an event is received. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.FocusBehaviorMode.Retain">
            <summary> Do not hand over the focus just leave it where it is. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.GadgetType">
            <summary> Different types of gadgets which can be added to the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Scale">
            <summary> Scale gadget showing the current map scale in km or miles. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.ZoomSlider">
            <summary> Zoom slider gadget for zooming in the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Coordinates">
            <summary> Coordinates gadget showing the current mouse positions coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Overview">
            <summary> Overview map gadget showing a map overview additional to the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Layers">
            <summary> Layers gadget showing all layers which are contained in the map and its properties. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Magnifier">
            <summary> Magnifier gadget showing more details of the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Navigation">
            <summary> Navigation gadget for scrolling in the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.GadgetType.Copyright">
            <summary> Copyright gadget showing the map copyrights in the map. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.IGadget">
            <summary> Interface containing all properties of the gadget which are client configurable. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.IGadget.Visible">
            <summary> Gets or sets a value indicating whether the gadget is to be displayed or hidden. </summary>
            <value> Flag showing whether the gadget is visible. </value>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.MapGadget">
            <summary> Parent class of all map gadgets. A map gadget is an add-on to the map like a coordinates gadget, a scale gadget etc... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.MapGadget"/> class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.MapView">
            <summary> Gets or sets the map content object which can be used to edit the layers and all map properties. </summary>
            <value> Map content object. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.Map">
            <summary> Gets or sets the map core object holding the gadgets collection for example. </summary>
            <value> Map core object. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.IsInDesignMode">
            <summary> Gets a value indicating whether the gadget is used in design mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.MouseFocusBehavior">
            <summary> Gets or sets a property which controls if Mouse.PreviewMouseUpEvents forward the focus to the map
            or not. If set to <see cref="F:Ptv.XServer.Controls.Map.Gadgets.FocusBehaviorMode.HandoverToMap"/>, every mouse click on the gadget or one of
            its children sets the focus to the map. The focus can still be retained if it is set e.g. by using the
            'tab' key if 'KeyboardFocusBehavior' is set to 'Retain'. </summary>
            <value> FocusBehaviorMode which defines whether PreviewMouseUpEvents forward the focus to the map. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.KeyboardFocusBehavior">
            <summary> Gets or sets a value which controls if Keyboard.PreviewKeyDownEvents forward the focus to the map
            or not. If set to <see cref="F:Ptv.XServer.Controls.Map.Gadgets.FocusBehaviorMode.HandoverToMap"/> every key press on the gadget or one of its
            children sets the focus to the map. As a result the gadget and all of its children is not able to gain the
            focus any more. </summary>
            <value> FocusBehaviorMode which defines whether PreviewKeyDownEvents forward the focus to the map. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.MapGadget.Visible">
            <summary> Gets or sets a value indicating whether the gadget is to be displayed or hidden. By default, the
            gadget is visible. </summary>
            <value> Flag showing whether the gadget is visible.</value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.MapGadget_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a successful loading of the map gadget. Retrieves the corresponding map core
            and map content object. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.MapGadget_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for having unloaded the map gadget. </summary>
            <param name="sender"> Sender of the Unloaded event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.source_PreviewMouseUp(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a mouse up event. Forwards the focus in case of a PreviewMouseUpEvent. This
            method is used to implement that the children of the MapGadget do not grab the focus if they were clicked. </summary>
            <param name="sender"> Sender of the PreviewMouseUp event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.source_PreviewKeyDown(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a key down event. Forwards the focus in case of a PreviewMouseUpEvent. This
            method is used to implement that the children of the MapGadget do not grab the focus any more. </summary>
            <param name="sender"> Sender of the PreviewKeyDown event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.Initialize">
            <summary> Initializes the map gadget. The mouse events are connected and the gadget is added to the map
            gadgets list of the parent map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.UnInitialize">
            <summary> Uninitializes the map gadget. The mouse events are disconnected and the gadget is removed from
            the parent map gadget list. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.MapGadget.UpdateContent">
            <summary> Updates the inner content of the map gadget according to the currently set colors. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.OverviewMap">
            <summary> Gadget for showing the overview map. An overview map shows the whole map in small. A rectangle on
            the overview map shows the borders of the currently displayed map section. </summary>
            <summary>
            OverviewMap
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMap.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.OverviewMap"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMap.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMap.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMap.Button_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for clicking the overview map button. Expands or collapses the overview map
            depending on its current state. </summary>
            <param name="sender"> Sender of the Click event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.OverviewMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget">
            <summary> Gadget showing the current scale of the map. </summary>
            <summary>
            ScaleGadget
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.maxLength">
            <summary> Maximum length of the scale gadget. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.scalesKm">
            <summary> Possible km-scales of the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.scalesMiles">
            <summary> Possible mile-scales of the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.showMiles">
            <summary> Flag to choose whether the scale is to be shown in km or in miles. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.UnInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.FindBestScale(System.Double)">
            <summary> Retrieves the best fitting scale for the currently displayed map. </summary>
            <param name="metersPerPixel"> Meters in reality which you can find per pixel on screen. </param>
            <returns> The best fitting scale information. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.UpdateScale">
            <summary> Updates the scale information. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.Map_ViewportWhileChanged(System.Object,System.EventArgs)">
            <summary> Event handler for a change of the map viewport. Updates the scale. </summary>
            <param name="sender"> Sender of the ViewportWhileChanged event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.Map_UseMilesChanged(System.Object,System.EventArgs)">
            <summary> Event handler for a change of the showMiles property. Updates the scale. </summary>
            <param name="sender"> Sender of the UseMilesChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.ScaleGadget.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.ScaleInfo">
            <summary> Scale information object. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.ScaleInfo.Text">
            <summary> Gets or sets the text describing the scale. </summary>
            <value> Description text of the scale. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.ScaleInfo.Dimension">
            <summary> Gets or sets the dimension of the scale. </summary>
            <value> Dimension of the scale. </value>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.DragMode">
            <summary> Mode describing what is to be done when clicking in the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.DragMode.None">
            <summary> No special action. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.DragMode.Pan">
            <summary> Clicking in the map starts a panning. If the mouse button is clicked and the mouse is moved, the
            map is panned. This means that the map is moved by the amount of the mouse move. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.DragMode.Select">
            <summary> Clicking in the map starts a zoom selection. If the mouse button is clicked and the mouse is
            moved, a rectangle is shown. When releasing the mouse, the map is zoomed to this rectangle. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.DragMode.SelectOnShift">
            <summary>
            The same as Select, but the Shift button has to be pressed for select, otherwise the map is panned.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom">
            <summary> User control for the <see cref="T:Ptv.XServer.Controls.Map.MapView"/>-object, translating user interactions into modification of the visible map section. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.WorldStartPoint">
            <summary> Start point of the interaction in world coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.ScreenStartPoint">
            <summary> Start point of the interaction in screen coordinates (pixel). </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.mapView">
            <summary> Map on which the interaction is to be executed. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.dragMode">
            <summary> Interaction mode defining whether a panning or a zoom selection is to be executed. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.dragRectangle">
            <summary> Rectangle used for zoom selection. The map will be zoomed to this section. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.wasPanned">
            <summary> Flag showing if the map has lately been panned. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.IsActive">
            <summary> Gets or sets a value indicating whether a zooming or panning action is in progress. </summary>
            <value> Flag indicating whether a zooming or panning action is active. </value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.Setup">
            <summary> Initializes the handlers for key and mouse events. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.map_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary> Event handler for pressing a key. Scrolls or zooms the map depending on the pressed key. </summary>
            <param name="sender"> Sender of the KeyDown event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.source_MouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary> Event handler for scrolling the mouse wheel. Zooms in or out the map depending on the scroll
            direction of the mouse wheel. </summary>
            <param name="sender"> Sender of the MouseWheel event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.source_MouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Event handler for releasing the mouse button. The map is zoomed to the selected section. </summary>
            <param name="sender"> Sender of the MouseUp event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.source_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Event handler for pressing the mouse button. A double click with the left mouse button results in
            zooming in the map. A double click with the right mouse button results in zooming out the map. Pressing the
            left button and the shift key, the zooming rectangle is shown on the map. </summary>
            <param name="sender"> Sender of the MouseDown event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.control_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Event handler for moving the mouse. If you are currently panning, the map is moved together with
            the mouse. If you are currently in zoom mode, the Drag rectangle is shown and changed when moving the mouse. </summary>
            <param name="sender"> Sender of the MouseMove event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Gadgets.PanAndZoom.Initialize">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor">
            <summary>
            <para> A MapIcon can be located with a certain anchor on the map. The anchor defines how the MapIcon should be
            situated in relation to its location. Set one of the values of this enumeration to the Anchor property of
            this class to define the behavior. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para>
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor.Center">
            <summary> The MapIcon is centered over the location. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor.LeftTop">
            <summary> The MapIcon´s left upper corner is centered over the location. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor.RightTop">
            <summary> The MapIcon´s right upper corner is centered over the location. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor.RightBottom">
            <summary> The MapIcon´s right lower corner is centered over the location. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor.LeftBottom">
            <summary> The MapIcon´s left lower corner is centered over the location. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon">
            <summary>
            <para>
            This class represents a symbol on the map. Since a symbol cannot adapt its size and position according
            to the map scale by default, this class acts as a wrapper which extends this functionality. So it is 
            responsible for placing the symbol at the appropriate coordinates and change its size according to the current
            map scale.
            </para>
            <para>
            DO NOT SET DIRECTLY THE WIDTH AND THE HEIGHT OF THE MapIcon!!! SET THESE PROPERTIES DIRECTLY ON THE WRAPPED
            UserControl INSTEAD!!!
            </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para>
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon.Location">
            <summary> Gets or sets the location of the MapIcon. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon.Anchor">
            <summary> Gets or sets the anchor of the MapIcon. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon.ScaleFactor">
            <summary> Gets or sets the  scale factor. See <see cref="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.ScaleFactorProperty"/>. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon.#ctor(System.Windows.FrameworkElement)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapIcon"/> class for the given UserControl. </summary>
            <param name="content"> The UserControl to be wrapped. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase">
            <summary><para> This class represents shape objects which are displayed on a map. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para></summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.Data">
            <summary>Contains the geometry provided by property <see cref="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.DefiningGeometry"/>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.DefiningGeometry">
            <summary> Gets a value that represents the geometry of the shape. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.Points">
            <summary> Gets or sets the points of the polyline. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.TransformedPoints">
            <summary> Gets or sets the transformed points. The transformed points are a collection of points which have
            been transformed to the currently applied spatial reference system. This property helps to improve
            performance since the point transformation is only done once. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.PointsProperty">
            <summary> Backing store for Points. This enables animation, styling, binding, etc.. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolylineBase.OnPointCollectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the point collection. The polyline is updated in this case. </summary>
            <param name="obj"> Element for which the point collection has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline">
            <summary><para> This class represents a polyline on the map. The MapPolyline is responsible for adapting the visual
            to the current map viewport in terms of scaling and clipping. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para></summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline.TransformShape(Ptv.XServer.Controls.Map.MapView)">
            <summary> Transforms the polyline object according the transformation provided by
            <see cref="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.GeoTransform"/>. </summary>
            <param name="mapView">Not used.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline.ClipShape(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode,System.Boolean)">
            <summary>Clip the Polyline object. </summary>
            <param name="mapView">Mapview object in which the clipping takes place.</param>
            <param name="updateMode"> The update mode tells which kind of change is to be processed by the update call. </param>
            <param name="lazyUpdate"> Flag indicating if lazy updating is activated. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline.UpdateShape(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolyline.BuildGeometry(System.Collections.Generic.ICollection{System.Windows.Media.PointCollection})">
            <summary> Builds the geometry of the polyline. </summary>
            <param name="lines"> A collection of point collections to build the geometry for (multiple polylines). </param>
            <returns> The geometry corresponding to the given point collections. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon">
            <summary><para> This class represents a polygon on the map. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para></summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon"/> class. Initializes the
            <see cref="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.ScaleFactor"/> to 0.0. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon.ClipShape(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode,System.Boolean)">
            <summary>Clip the Polygon object. </summary>
            <param name="mapView"> Mapview object in which the clipping takes place.</param>
            <param name="updateMode"> The update mode tells which kind of change is to be processed by the update call. </param>
            <param name="lazyUpdate"> Flag indicating if lazy updating is activated. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon.UpdateShape(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapPolygon.BuildGeometry(System.Collections.Generic.ICollection{System.Windows.Media.PointCollection})">
            <summary> Creates a new <see cref="T:System.Windows.Media.Geometry"/> object by means of a set of <see cref="T:System.Windows.Media.PointCollection"/>s. </summary>
            <param name="lines">Set of <see cref="T:System.Windows.Media.PointCollection"/>s. </param>
            <returns>Geometry consisting of the input parameters.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape">
            <summary> Extends class <see cref="T:System.Windows.Shapes.Shape"/> to add functionality for geographical objects which change their presentation
            according the currently used scale of the map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.GeoTransform">
            <summary> Gets or sets a method which transforms a point from one coordinate system to another. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.ScaleFactor">
            <summary> Gets or sets the scale factor. See <see cref="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.ScaleFactorProperty"/>. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.MapStrokeThicknessProperty">
            <summary> Stroke thickness of the map shape. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.CurrentThickness(System.Double)">
            <summary> Retrieves the thickness for lines depending on the current scale. </summary>
            <param name="scale"> Current scale of the map shape. </param>
            <returns> Calculates stroke thickness. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.MapStrokeThickness">
            <summary> Gets or sets the map stroke thickness. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.OnMapStrokeThicknessChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the stroke thickness. </summary>
            <param name="obj"> Element for which the stroke thickness has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.NeedsUpdate(System.Boolean,Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary> Indicates if the update process should be started or not. </summary>
            <param name="lazyUpdate"> Flag indicating if lazy updating is activated. </param>
            <param name="updateMode"> The update mode tells which kind of change is to be processed by the corresponding update call. </param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.MapShape.UpdateShape(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode,System.Boolean)">
            <summary> Update the properties of the shape, according the current scale of the MapView object. </summary>
            <param name="mapView"> MapView object, to which this object belongs to. </param>
            <param name="mode"> The update mode tells which kind of change is to be processed by the corresponding update call. </param>
            <param name="lazyUpdate"> Flag indicating if lazy updating is activated. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer">
            <summary><para> This class represents a layer containing shape objects. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para></summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer.SpatialReferenceId">
            <summary> Gets or sets the spatial reference number as a string. The spatial reference number defines the
            coordinate system to which the coordinates of the shapes belong. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer.Shapes">
            <summary> Gets the collection of shapes to be displayed by this layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer.LazyUpdate">
            <summary> Gets or sets the update strategy for shapes when the map viewport changes. If lazy update is activated,
            the shapes are only updated at the end of the viewport transition. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer.#ctor(System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer"/> class. By default, the spatial reference system is set to "EPSG:4326". </summary>
            <param name="name"> Name of the layer. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas">
            <summary><para> Canvas displaying shape elements on a map. </para>
            <para> See the <conceptualLink target="06a654f3-afbd-4f00-9c8e-36997e2a3951"/> topic for an example. </para></summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.shapes">
            <summary> Collection of shapes to be painted on this canvas. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.mapView">
            <summary> The map to which this canvas is added. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.lazyUpdate">
            <summary> Gets or sets if the shapes should updated after viewport end only. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.transform">
            <summary> Transformation method which transforms the shape points from one coordinate format to another
            depending on the given spatial reference system. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.LocationProperty">
            <summary> Location of a shape element. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.GetLocation(System.Windows.UIElement)">
            <summary> Retrieves the location of a certain shape element. </summary>
            <param name="element"> The element of which the location should be retrieved. </param>
            <returns> The shape element location as a point. Returns a Point with zeroed coordinates if none was set.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.SetLocation(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary> Sets the location of a certain shape element. </summary>
            <param name="element"> Shape element for which a location should be set. </param>
            <param name="location"> New location of the shape element. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.AnchorProperty">
            <summary> Anchor of a shape element. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.GetAnchor(System.Windows.UIElement)">
            <summary> Retrieves the Anchor of a certain shape element. </summary>
            <param name="element"> The element of which the anchor should be retrieved. </param>
            <returns> The shape element anchor as a point. Returns a Point with zeroed coordinates if none was set.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.SetAnchor(System.Windows.FrameworkElement,Ptv.XServer.Controls.Map.Layers.Shapes.LocationAnchor)">
            <summary> Sets the anchor of a certain shape element. </summary>
            <param name="element"> Shape element for which a anchor should be set. </param>
            <param name="anchor"> New anchor of the shape element. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.ScaleFactorProperty">
            <summary>
            The ScaleFactor element defines the dependency between map scale and
            the size of map objects. A scale factor of 0 indicates a constant object size. The size of
            the map object is the size in pixel, without regarding the zoom factor. A scale factor of 1
            indicates an object size in coordinate units. The object will be enlarged if the map is
            zoomed. It is also possible to choose a value between 0 and 1. According to that
            value, a nonlinear enlargement will be used.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.GetScaleFactor(System.Windows.UIElement)">
            <summary> Retrieves the scale factor of a certain shape element. </summary>
            <param name="element"> Shape element of which the scale factor should be retrieved. </param>
            <returns> Shape element scale factor. Returns 0 if none was set.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.SetScaleFactor(System.Windows.FrameworkElement,System.Double)">
            <summary> Sets the scale factor of a certain shape element. </summary>
            <param name="element"> Shape element for which the scale factor is to be set. </param>
            <param name="scaleFactor"> New scale factor of the shape element. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.ScaleProperty">
            <summary>
            The Scale element defines the dependency between map scale and
            the size of map objects. An LSF of 0 indicates a constant object size. The size of
            the map object is the size in pixel, without regarding the zoom factor. An LSF of 1
            indicates an object size in  units. The object will be enlarged if the map is
            zoomed. It’s also possible to choose a value between 0 and 1. According to that
            value, a nonlinear enlargement will be used.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.GetScale(System.Windows.UIElement)">
            <summary> Retrieves the scale factor of a certain shape element. </summary>
            <param name="element"> Shape element of which the scale factor should be retrieved. </param>
            <returns> Shape element scale factor. Returns 0 if none was set.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.SetScale(System.Windows.FrameworkElement,System.Double)">
            <summary> Sets the scale factor of a certain shape element. </summary>
            <param name="element"> Shape element for which the scale factor is to be set. </param>
            <param name="scale"> New scale factor of the shape element. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,System.Collections.ObjectModel.ObservableCollection{System.Windows.FrameworkElement},System.String,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas"/> class. Adds all shape elements to the canvas. </summary>
            <param name="mapView"> Map on which the canvas is to be displayed. </param>
            <param name="shapes"> The shape elements which are to be painted on the canvas. </param>
            <param name="spatialReferenceId"> Spatial reference system to which the point of the shapes refer. </param>
            <param name="lazyUpdate">The shapes should be updated after viewport end only.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.OnScaleFactorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the scale factor of a certain shape element. Updates the scale of
            the element in the shape canvas. </summary>
            <param name="obj"> Element for which the scale has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.OnScaleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the scale factor of a certain shape element. Updates the scale of
            the element in the shape canvas. </summary>
            <param name="obj"> Element for which the scale has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.OnLocationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a location change of a certain shape element. Updates the location of the
            element on the shape canvas. </summary>
            <param name="obj"> Element for which the location has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.OnAnchorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a location change of a certain shape element. Updates the location of the
            element on the shape canvas. </summary>
            <param name="obj"> Element for which the location has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.SetProj4Transform(System.String)">
            <summary> Sets a new coordinate transformation method. </summary>
            <param name="spatialReferenceId"> The new spatial reference id to be used. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.Add(System.Windows.FrameworkElement)">
            <summary> Adds a shape element to the shape canvas. </summary>
            <param name="shape"> Shape element to be added. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.Update(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.NeedsUpdate(System.Boolean,Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary>
            Check if an update of a shape object is necessary, according to 
            the lazy mode or update mode.
            </summary>
            <param name="isLazyUpdate">Indicates if object should be updated only at the end of a transition.</param>
            <param name="updateMode">At which part the current transition is.</param>
            <returns>True if an update is necessary, otherwise false.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.UpdateScale(System.Windows.FrameworkElement,Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary> Updates the scale of a certain shape element. </summary>
            <param name="shape"> Shape element for which the scale is to be updated. </param>
            <param name="inputMapView"> MapView object, which contains the corresponding shape layer. It is needed for obtaining its currently used scale.</param>
            <param name="updateMode">At which part the current transition is.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.UpdateScales(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary> Updates the scale of a whole set of shape elements. All shape elements which are currently
            visible on the displayed map section are updated. </summary>
            <param name="updateMode"> Mode specifying in which context the update method has been called.. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.shapes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary> Event handler for a change of the shape elements collection. New shapes are added to the canvas,
            for a reset all shapes are deleted from the canvas and all persisting elements are updated. </summary>
            <param name="sender"> Sender of the CollectionChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeCanvas.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer">
            <summary>
            A layer which renders maps by using tiled bitmaps.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.IsBaseMapLayer">
            <summary>
            Gets or sets a value indicating whether the layer is a base map layer, which means it is part of the
            basic map and not additional content.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.IsTransparentLayer">
            <summary>
            Gets or sets a value indicating whether layer tiles use an alpha channel.
            If false the layer uses some internal optimizations to reduce rendering artifacts.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.IsLabelLayer">
            <summary>
            Gets or sets a value indicating whether layer tiles are transparent labels.
            If true the layer uses some internal optimizations to reduce rendering artifacts.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.TiledProvider">
            <summary>
            Gets or sets the provider for the tiles.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.TransitionUpdates">
            <summary>
            Gets or sets a value indicating whether dynamic update is enabled.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer"/> class.
            </summary>
            <param name="name">The unique name of the layer.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas">
            <summary> Canvas which renders tile-based content. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.tiledProvider">
            <summary> Reference to the tile provider. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.tileCache">
            <summary> Reference to the tile cache. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.worker">
            <summary> The worker thread for fetching the tiles. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.shownImages">
            <summary> The dictionary for holding the displayed imaged by tile key. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.threadPool">
            <summary> The thread pool used for fetching the tiles for a viewport. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.lastZoom">
            <summary> Stores the last zoom factor. Used to detect if a zoom change takes place. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas"/> class. By default, the instance is
            using threading (<see cref="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.UseThreading"/> = true). </summary>
            <param name="mapView"> Parent map object associated to this tile canvas. </param>
            <param name="tiledProvider"> Object providing the tiles. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.IsLabelLayer">
            <summary> Gets or sets a value indicating whether tiles are labels. </summary>
            <value> Flag showing whether tiles are labels. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.IsTransparentLayer">
            <summary> Gets or sets a value indicating whether the tiles of this layer are a transparent overlay of the
            map. </summary>
            <value> Flag showing whether tiles are transparent overlay. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.UseThreading">
            <summary> Gets or sets a value indicating whether threading is used for tile loading. </summary>
            <value> Flag indicating whether threading is used for tile loading. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.GetTransitionUpdates">
            <summary> Gets or sets an function that returns a value indicating whether dynamic update is used for tile loading. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.UseAnimation">
            <summary> Gets a value indicating whether animation is used for map actions. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.Dispose">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.InitializeTransform">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.Update(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.GetTiles">
            <summary> Start worker thread for retrieving the tiles from the tile provider. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.RemoveInvisibleTiles">
            <summary> Just as the name says: Remove all visible tiles. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.WhileMapSectionChange">
            <summary> Adopt the opacity of tiles whiled the map section is changing. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.OnMapSectionStartChange(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary>
            Refreshes the tiles which are shown on the canvas. This method is designed to be called at the start of a map section change.
            </summary>
            <param name="updateMode"> The update mode. This mode tells which kind of change is to be processed by the update call. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.OnAnimationFinished">
            <summary>
            Removes all tiles from the canvas. This method is designed to be called when an animation has finished.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.GetTileZoom">
            <summary>
            Retrieves the current zoom level. The values reside between <see cref="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.MinZoom"/> and <see cref="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.MaxZoom"/> of the tiled provider.
            </summary>
            <returns> The current zoom level. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.GetVisibleTiles(Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam)">
            <summary>
            Retrieves a list of currently visible tiles on the canvas.
            </summary>
            <param name="mapParam"> The map on which the canvas is painted. </param>
            <returns> The currently visible tiles. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.Worker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Event handler which is called when the worker starts its work. Loads the tile images.
            </summary>
            <param name="sender"> Sender of the DoWork event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.DisplayImage(System.Byte[],Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam,System.Boolean,System.Boolean)">
            <summary>
            Displays the image of a certain tile on the canvas.
            </summary>
            <param name="buffer"> The bytes for holding the image. </param>
            <param name="tile"> The tile parameters object. </param>
            <param name="useAnimation"> Flag indicating if the bitmap is to be shown with an animation or without. </param>
            <param name="force"> Flag indicating the tile is displayed even it is not part of the current zoom level. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.Animation_Completed(System.Object,System.EventArgs)">
            <summary>
            Event handler which is called when an animation has completed. Shows the images on the canvas and removes invisible tiles.
            </summary>
            <param name="sender"> Sender of the completed event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.GetImage(Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam,System.Byte[]@)">
            <summary> Reads an image from the provider. </summary>
            <param name="tileKey"> Tile which is to be read out as an image. </param>
            <param name="buffer"> The buffer containing the image data or null if the image was not found. </param>
            <returns> True if the image was found in the cache, false otherwise. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.LoadImage(Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam,System.Boolean)">
            <summary>
            Loads an image of a certain tile and shows it on the canvas.
            </summary>
            <param name="tileParam"> Tile to be shown on the image. </param>
            <param name="forceTile"> Flag indicating that the image has to be reloaded even if the content might be the same. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.LoadImage(System.Object)">
            <summary>
            Loads the image of a certain tile and shows it on the canvas. The tile is entered of type object.
            </summary>
            <param name="stateInfo"> Tile of type object. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam">
            <summary> Class containing all import parameters concerning the WPF-positioning of a map object. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.WpfWidth">
            <summary> Gets or sets the width in WPF units.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.WpfHeight">
            <summary> Gets or sets the height in WPF units.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.MapX">
            <summary> Gets or sets the x-coordinate in WPF units.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.MapY">
            <summary> Gets or sets the y-coordinate in WPF units.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.MapZoom">
            <summary> Gets or sets the zoom level in the map.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.MapParam.TileZoom">
            <summary> Gets or sets the zoom level for tiles.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam">
            <summary> Class containing all information needed for addressing a concrete tile. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam"/> class. Constructor, receiving all
            needed information for addressing a concrete tile. </summary>
            <param name="tileX"> Tile position for according x-coordinate. </param>
            <param name="tileY"> Tile position for according y-coordinate. </param>
            <param name="zoom"> Zoom level. </param>
            <param name="cacheKey"> Cache Key. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam.TileX">
            <summary> Gets or sets the unique id of the provider.</summary>
            <summary> Gets or sets the x-coordinate of the tile position.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam.TileY">
            <summary> Gets or sets the y-coordinate of the tile position.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam.Zoom">
            <summary> Gets or sets the zoom level.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TiledCanvas.TileParam.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider">
            <summary> Returns a bitmap cache for a tile index at a specific zoom level. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <summary> Returns a serialized bitmapCache. </summary>
            <param name="x"> X tile. </param>
            <param name="y"> Y tile. </param>
            <param name="zoom"> Zoom level. </param>
            <returns> The stream containing the map image. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.CacheId">
            <summary> Gets the cache id used to cache the tiled map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.MinZoom">
            <summary> Gets the minimum level where tiles are available. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider.MaxZoom">
            <summary> Gets the maximum level where tiles are available. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.ITilingOptions">
            <summary> Indicates whether the tile sources use a tiling system which differs by a scale factor from the
            standard tiling scheme. This interface is used for xServer tile-sources to avoid rounding errors at deep zoom
            levels. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITilingOptions.Factor">
            <summary> Gets or sets the factor relative to the standard tiling scheme. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.ITilingOptions.OverlapFactor">
            <summary> Gets or sets the amount of overlapping area for neighboring tiles. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Tiled.TileDoubleAnimation">
            <summary> A helper class which holds the associated image for an animation.  </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Tiled.TileDoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Tiled.TileDoubleAnimation.Image">
            <summary>
            The associated image for the animation.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProvider">
            <summary> Returns a bitmap for a PTV_Mercator rectangle. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProvider.GetImageStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary> Returns a bitmap for a map section specified in PTV-internal Mercator format. </summary>
            <param name="left"> Left coordinate of the requested map section. </param>
            <param name="top"> Top coordinate of the requested map section. </param>
            <param name="right"> Right coordinate of the requested map section. </param>
            <param name="bottom"> Bottom coordinate of the requested map section. </param>
            <param name="width"> Width in pixel of the bitmap. </param>
            <param name="height"> Height in pixel of the bitmap. </param>
            <returns> Stream containing the bitmap. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProviderWithMapObjects">
            <summary> Returns a bitmap for a PTV_Mercator rectangle. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProviderWithMapObjects.GetImageStreamAndMapObjects(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary> Returns a bitmap for a map section specified in PTV-internal Mercator format. </summary>
            <param name="left"> Left coordinate of the requested map section. </param>
            <param name="top"> Top coordinate of the requested map section. </param>
            <param name="right"> Right coordinate of the requested map section. </param>
            <param name="bottom"> Bottom coordinate of the requested map section. </param>
            <param name="width"> Width in pixel of the bitmap. </param>
            <param name="height"> Height in pixel of the bitmap. </param>
            <param name="mapObjects"> Set of map objects. </param>
            <returns> Stream containing the bitmap. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer">
             <summary> A layer which draws a bitmap overlay on the current map section. </summary>
            
             UntiledLayer uses some basic hit testing for finding tool tips and it displays the descriptions returned from xMap 
             Server, sometimes in a slightly modified way. When using UntiledLayer, you may want to look at:
             <remarks>
             - <see cref="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.ToolTipHitTest(System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject},System.Windows.Point,System.Double)"/> implements the basic hit test on <see cref="T:xserver.LayerObject"/> information 
               objects. Elements within a range of 10 pixels (measured taking either the reference point or the full response 
               geometry into account - depending on what actually is available) qualify for tool tip display. Depending on the 
               xMap content requested you may want to change this behavior. <see cref="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.ToolTipHitTest(System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject},System.Windows.Point,System.Double)"/> can be overridden in 
               derived classes.
             </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.UntiledProvider">
            <summary> Gets or sets the provider which delivers map images as bitmaps, not in diverse tiles. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.MaxRequestSize">
            <summary> Gets or sets the maximum size of the bitmaps in pixels. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.MinLevel">
            <summary> Gets or sets the maximum level up to which images are requested. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.mapView">
            <summary>The reference to the containing MapView, required for ToolTip hit testing.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.mapObjects">
            <summary>xServer object information</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.imageSize">
            <summary>xMap image size</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.#ctor(System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer"/> class. </summary>
            <param name="name"> The unique name of the layer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.UpdateMapObjects(System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject},System.Windows.Size)">
            <summary>Takes all parameters into members, commonly provided by the corresponding provider. </summary>
            <param name="newMapObjects">Set of map objects which can be used for showing tool tips.</param>
            <param name="requestedSize">The size of the map image.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.AddToMapView(Ptv.XServer.Controls.Map.MapView)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.Get(System.Windows.Point,System.Double)">
            <summary> Determines the tool tip texts for a given position </summary>
            <param name="center">Position to get the tool tips for.</param>
            <param name="maxPixelDistance">Maximal distance from the specified position to get the tool tips for.</param>
            <returns>Tool tip texts.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer.ToolTipHitTest(System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject},System.Windows.Point,System.Double)">
            <summary> Hit tests the given layer features.  </summary>
            <param name="mapObjectsForHitTest">Object information to hit test.</param>
            <param name="center">Point to test</param>
            <param name="maxPixelDistance">Maximal distance from the specified position to get the tool tips for.</param>
            <returns>Matching layer objects.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas">
            <summary> A canvas which renders a non-tiled bitmap. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.EnvMinX">
            <summary> Maximum bounding box (left bound) for PTV_Mercator. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.EnvMaxX">
            <summary> Maximum bounding box (right bound) for PTV_Mercator. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.EnvMinY">
            <summary> Maximum bounding box (bottom bound) for PTV_Mercator. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.EnvMaxY">
            <summary> Maximum bounding box (top bound) for PTV_Mercator. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.untiledProvider">
            <summary> Provider which delivers the requested map images by an untiled bitmap. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.worker">
            <summary> The background worker instance for fetching the tiles. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.lastParam">
            <summary> The last map parameters used. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.lastZoom">
            <summary> The last zoom level used. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.mapImage">
            <summary> Image containing the complete map content. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.timer">
            <summary> The timer for the update delay. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.updateDelay">
            <summary> Delay for updating the overlay. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProvider)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas"/> class. This method
            initializes the maximum request size for map bitmaps to 2048 x 2048 pixels. </summary>
            <param name="mapView"> The parent map instance. </param>
            <param name="untiledProvider"> The instance of the provider, which delivers untiled bitmaps. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,Ptv.XServer.Controls.Map.Layers.Untiled.IUntiledProvider,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas"/> class. If the parameter
            <paramref name="addToMap"/> is set to true, the new canvas instance is added to the parent map. </summary>
            <param name="mapView"> The parent map instance. </param>
            <param name="untiledProvider"> The instance of the provider delivering bitmaps of a map. </param>
            <param name="addToMap"> Indicates that the map should be inserted to the parent map initially. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MaxRequestSize">
            <summary> Gets or sets the maximum map bitmap request size in pixels. Default is 2048x2048. </summary>
            <value>  Maximum map request size in pixels. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MinLevel">
            <summary> Gets or sets the maximum level up to which images are requested. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.InitializeTransform">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.Update(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.GetMapParam">
            <summary> Get the map parameters object for the current viewport. </summary>
            <returns> The map parameters instance. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.GetImageBytes(Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary>
            Loads an map image for the specified map parameters.
            </summary>
            <param name="mapParam">Map parameters (map section and image size)</param>
            <param name="mapObjects"> Set of map objects. </param>
            <returns>The bytes of the encoded map image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.Worker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary> Event handler which is called when the worker starts its work. Loads and displays the map image. </summary>
            <param name="sender"> Sender of the DoWork event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.DisplayImage(System.Byte[],System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject},Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam)">
            <summary> Display the loaded image. </summary>
            <param name="buffer"> The byte array containing the image data. </param>
            <param name="mapObjects"> Set of map objects. </param>
            <param name="mapParam"> The corresponding map parameters object. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.UpdateMapObjects">
            <summary>Callback for a provider object to set the map objects which belong to a requested map image. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.UpdateOverlay(System.Boolean)">
            <summary> Updates the overlay image. </summary>
            <param name="forceUpdate"> True, if the update should be forced even if the viewport didn't change. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.InvokeUpdate(System.Object)">
            <summary> This method call the update message using an invoke. </summary>
            <param name="stateInfo"> The object containing the corresponding stateInfo object. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam">
            <summary> Map parameters. The parameters describe the dimensions of the displayed map image. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Left">
            <summary> Left border of the map display region. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Top">
            <summary> Top border of the map display region. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Right">
            <summary> Right border of the map display region. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Bottom">
            <summary> Bottom border of the map display region. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Width">
            <summary> Width of the map display region. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Height">
            <summary> Height of the map display region. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam"/> struct. </summary>
            <param name="left"> Left border of the map display region. </param>
            <param name="top"> Top border of the map display region. </param>
            <param name="right"> Right border of the map display region. </param>
            <param name="bottom"> Bottom border of the map display region. </param>
            <param name="width"> Width of the map display region. </param>
            <param name="height"> Height of the map display region. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.op_Equality(Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam,Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam)">
            <summary> Compares two map parameters and returns a boolean value showing if the map parameters are
            equal. </summary>
            <param name="a"> First map parameter to compare. </param>
            <param name="b"> Second map parameter to compare. </param>
            <returns> Boolean value showing if the map parameters are equal. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.op_Inequality(Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam,Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam)">
            <summary> Compares two map parameters and returns a boolean value showing if the map parameters are not
            equal. </summary>
            <param name="a"> First map parameter to compare. </param>
            <param name="b"> Second map parameter to compare. </param>
            <returns> Boolean value showing if the map parameters are not equal. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Equals(Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam)">
            <summary> Compares the current map parameter to another map parameter and returns a boolean value
            showing if the map parameters are equal. </summary>
            <param name="other"> Map parameter to compare with the current map parameter. </param>
            <returns> A boolean value showing if the map parameters are equal. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.Scale(Ptv.XServer.Controls.Map.Layers.Tiled.ITiledProvider)">
            <summary>
            Scales width and height to conform with the minimum and maximum zoom value specified by the given provider.
            </summary>
            <param name="provider">Provider specifying the minimum and maximum zoom value.</param>
            <returns>New MapParam instance with scaled width and height.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledCanvas.MapParam.IsSizeInRange(System.Windows.Size,System.Windows.Size)">
            <summary>
            Checks if Width and Height are in the specified range.
            </summary>
            <param name="minSize">Specifies the minimum size.</param>
            <param name="maxSize">Specifies the maximum size.</param>
            <returns>True, if Width and Height are in range. False otherwise.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Untiled.XMap1MapObject">
            <summary>
            Represents an xServer-1 map object.
            </summary><remarks>
            The implementation of XServer1MapObject re-uses the implementation previously provided by UntiledLayer. 
            Especially the tool tip hook UntiledLayer.GetToolTipFromLayerObject along with its default implementation 
            has been moved to XServer1MapObject to provide backward compatibility. UntiledLayer itself has been 
            generalized to support multiple xServer versions.
            </remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.XMap1MapObject.#ctor(xserver.ObjectInfos,xserver.LayerObject)">
            <summary> Creates an xMap-1 map object. </summary>
            <param name="objectInfos">Set of object infos returned by xMap-1.</param>
            <param name="layerObject">XServer layer object.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Untiled.XMap1MapObject.FormatToolTip(System.String,System.String,System.Int32)">
            <summary>
            Used by the default function returned by GetToolTipFromLayerObject to format a message string.
            Breaks a given message into several lines, each line having a specific maximum length.
            </summary>
            <param name="title">String to start the first line with.</param>
            <param name="message">The text to format.</param>
            <param name="maxLength">Maximum length of a single line. Defaults to 50.</param>
            <returns></returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager">
            <summary>
            The weak event manager for the <see cref="E:Ptv.XServer.Controls.Map.MapView.ViewportBeginChanged"/> event.
            An event manager administrates different event listeners for a certain event source. The listeners
            can be connected to the viewport end changed event and can be disconnected again if they are no more used. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager.CurrentManager">
            <summary> Gets the current viewport end changed weak event manager. Manages the different event listeners
            of one event source. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager.StartListening(System.Object)">
            <summary>
            Starts listening for the event being managed. After this method is first called,
            the manager should be in the state of calling DeliverEvent(Object, EventArgs)
            or DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList) whenever the relevant event from the provided source is handled.
            </summary>
            <param name="source">The source to begin listening on.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager.StopListening(System.Object)">
            <summary>Stops listening for the event on the specified object. </summary>
            <param name="source">The object to that raises the event.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager.AddListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Connects the listener to the event queue. </summary>
            <param name="mapView"> Map from which the viewport end changed events are delivered. </param>
            <param name="listener"> Event listener to be connected. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportBeginChangedWeakEventManager.RemoveListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Disconnects the listener from the event queue. </summary>
            <param name="mapView"> Map from which the viewport end changed events are delivered. </param>
            <param name="listener"> Event listener to be disconnected. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager">
            <summary>
            The weak event manager for the <see cref="E:Ptv.XServer.Controls.Map.MapView.ViewportEndChanged"/> event.
            An event manager administrates different event listeners for a certain event source. The listeners
            can be connected to the viewport end changed event and can be disconnected again if they are no more used. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager.CurrentManager">
            <summary> Gets the current viewport end changed weak event manager. Manages the different event listeners
            of one event source. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager.StartListening(System.Object)">
            <summary>
            Starts listening for the event being managed. After this method is first called,
            the manager should be in the state of calling DeliverEvent(Object, EventArgs)
            or DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList) whenever the relevant event from the provided source is handled.
            </summary>
            <param name="source">The source to begin listening on.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager.StopListening(System.Object)">
            <summary>Stops listening for the event on the specified object. </summary>
            <param name="source">The object to that raises the event.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager.AddListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Connects the listener to the event queue. </summary>
            <param name="mapView"> Map from which the viewport end changed events are delivered. </param>
            <param name="listener"> Event listener to be connected. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportEndChangedWeakEventManager.RemoveListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Disconnects the listener from the event queue. </summary>
            <param name="mapView"> Map from which the viewport end changed events are delivered. </param>
            <param name="listener"> Event listener to be disconnected. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager">
            <summary>
            The weak event manager for the <see cref="E:Ptv.XServer.Controls.Map.MapView.ViewportWhileChanged"/> event.
            An event manager administrates different event listeners for a certain event source. The listeners
            can be connected to the viewport end changed event and can be disconnected again if they are no more used. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager.CurrentManager">
            <summary> Gets the current viewport while changed weak event manager. Manages the different event listeners
            of one event source. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager.StartListening(System.Object)">
            <summary>
            Starts listening for the event being managed. After this method is first called,
            the manager should be in the state of calling DeliverEvent(Object, EventArgs)
            or DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList) whenever the relevant event from the provided source is handled.
            </summary>
            <param name="source">The source to begin listening on.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager.StopListening(System.Object)">
            <summary>Stops listening for the event on the specified object. </summary>
            <param name="source">The object to that raises the event.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager.AddListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Connects the listener to the event queue. </summary>
            <param name="mapView"> Map from which the viewport while changed events are delivered. </param>
            <param name="listener"> Event listener to be connected. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ViewportWhileChangedWeakEventManager.RemoveListener(Ptv.XServer.Controls.Map.MapView,System.Windows.IWeakEventListener)">
            <summary> Removes the listener from the event queue. </summary>
            <param name="mapView"> Map from which the viewport while changed events are delivered. </param>
            <param name="listener"> Event listener to be disconnected. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmsLayer">
            <summary> Customized layer type, which is capable of integrating Web Map Services (WMS) into the map control. </summary>
            <remarks> Coordinate reference systems different from the PTV Mercator format can be integrated, because a reprojection
            is transformed to map these reference systems to the internally used format.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmsLayer.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.String,System.Int32)">
            <summary> Creates and initializes a new layer which integrates the images provided by Web Map Services into the map control.  </summary>
            <param name="urlTemplate">URL needed for retrieving images from the corresponding Web Map Service. The layout of this URL must
            achieve the requirements according the OpenGIS Specification, details can be found in http://www.opengeospatial.org/standards/wms .
            <br />
            Because the visible region of a map control changes during a user session, and the size in pixel may vary, some parameters in the URL
            query string have to be parameterized. I.e. the parameters 'BBOX', 'WIDTH' and 'HEIGHT' must be used in a parameterized way: They have to
            look like: ..&amp;BBOX=${boundingbox}&amp;WIDTH=${width}&amp;HEIGHT=${height}.."
            </param>
            <param name="isTiled"> Indicating if a tiled variant is used for filling the map control with content, or not. </param>
            <param name="isBaseMap"> Indicating if the content represents a background information which completely fills the drawing area of the map control
            (= true), or only punctual information is shown (= false). This value influences the sequence order when the different layers are drawn. </param>
            <param name="name"> Name of the layer in the internal layer management. </param>
            <param name="copyRight">Copyright text visible in the lower right corner of the map control. </param>
            <param name="timeout">Longest time waiting for WMS request.</param>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Layers.WmsLayer.PropertyChanged">
            <summary> Occurs when a property value changes. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Priority">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Caption">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Icon">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Opacity">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmsLayer.AddToMapView(Ptv.XServer.Controls.Map.MapView)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmsLayer.RemoveFromMapView(Ptv.XServer.Controls.Map.MapView)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.Copyright">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.HasSettingsDialog">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmsLayer.CanvasCategories">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmsLayer.ReprojectionProvider">
            <summary> Provider used for retrieving images from the specified URL and re-projecting it if necessary. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider">
            <summary> Provider, which is capable of matching coordinate reference systems, which 
            commonly do not match, because of different used projections. For example, Mercator
            projection does not match Gauss-Krueger-Format. 
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.#ctor(System.String,System.Int32)">
            <summary>
            Constructor of the reprojection provider, which performs an image processing
            to match coordinate reference systems, which commonly differ in their projections.
            </summary>
            <param name="urlTemplate">URL needed for retrieving images from the corresponding Web Map Service. The layout of this URL must
            achieve the requirements according the OpenGIS Specification, details can be found in http://www.opengeospatial.org/standards/wms .
            <br />
            Because the visible region of a map controls changes during a user session, and the size in pixel may vary, some parameters in the URL
            query string have to be parameterized. I.e. the parameters 'BBOX', 'WIDTH' and 'HEIGHT' must used in a parameterized way: They have to
            look like: ..&amp;BBOX=${boundingbox}&amp;WIDTH=${width}&amp;HEIGHT=${height}.."
            </param>
            <param name="timeout">Longest time waiting for WMS request.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.CacheId">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.MaxZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.MinZoom">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.TileToSphereMercator(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Calculate the Mercator bounds for a tile key
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.GetImageStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.UserAgent">
            <summary> Gets or sets the value of the user agent HTTP header. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ReprojectionProvider.Proxy">
            <summary> Gets or sets the proxy used for a web request. Especially for setting the proxy URI
            and/or credentials, a new WebProxy object can be created assigned to this property. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions">
            <summary>
            Provides extension methods for WmtsMapService.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.Reset(System.IO.Stream)">
            <summary>
            Sets the position of a stream to the beginning and returns the stream.
            </summary>
            <param name="stm">Stream to re-position.</param>
            <returns>Stream</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.MinX(Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix)">
            <summary>
            Determines the minimum value for the x-coordinate of a tile.
            </summary>
            <param name="tileMatrix">The tile matrix to determine the value for.</param>
            <returns>Minimum value.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.MaxX(Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix)">
            <summary>
            Determines the maximum value for the x-coordinate of a tile.
            </summary>
            <param name="tileMatrix">The tile matrix to determine the value for.</param>
            <returns>Maximum value.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.MinY(Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix)">
            <summary>
            Determines the minimum value for the y-coordinate of a tile.
            </summary>
            <param name="tileMatrix">The tile matrix to determine the value for.</param>
            <returns>Minimum value.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.MaxY(Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix)">
            <summary>
            Determines the maximum value for the y-coordinate of a tile.
            </summary>
            <param name="tileMatrix">The tile matrix to determine the value for.</param>
            <returns>Maximum value.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.Stream(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox)">
            <summary>
            Streams the logical extents of a bounding box. 
            This can be used check all values with a single Linq expression.
            </summary>
            <param name="bounds">The bounding box whose extents are to be streamed.</param>
            <returns>The bounding boxes' extents in enumerable form and in the order MinX, MinY, MaxX, MaxY.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapServiceExtensions.ApproximateBoundingBox(System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix},System.String,System.String,System.Int32,System.Double)">
            <summary>
            Utility extension that determines the bounding box for a tile matrix set based on MapServiceExtensions.ApproximateBoundingBox.
            </summary>
            <param name="matrixSet">Tile matrix set to calculate the bounding box for.</param>
            <param name="sourceCrs">The CRS of the tile matrix set.</param>
            <param name="targetCrs">The CRS of the bounding box to return.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <param name="resizeFactor">An additional factor for resizing the resulting bounding box to be on the safe side.</param>
            <returns>Bounding box.</returns>
            <remarks>Refer to MapServiceExtensions.ApproximateBoundingBox for further documentation.</remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2">
            <summary>Implements a very simple, size-restricted and thread safe LRU cache for caching arbitrary elements. </summary>
            <typeparam name="TK">Type of the key that identifies elements.</typeparam>
            <typeparam name="T">Type of the elements store in the LRU cache.</typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.dict">
            <summary>
            Dictionary that stores our elements and maps keys to elements.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.list">
            <summary>
            Linked list that reflects the LRU order of our elements.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.itemSize">
            <summary>
            A function that calculates the size of an element. See constructor.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.limit">
            <summary>
            The size limit of the LRU cache.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.size">
            <summary>
            The current size of the LRU cache.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.#ctor(System.Int32,System.Func{`1,System.Int32})">
            <summary>
            Creates and initializes an instance of the LRU cache.
            </summary>
            <param name="limit">Size limit of the LRU cache.</param>
            <param name="size">
            Optionally provides the function to calculate the size of an element.
            If the size of the LRU cache is to be restricted simply by the number of elements, the size function
            should return a constant value of "1". This is also the default that is used in case the size parameter 
            is set to null. If you want to limit the LRU cache by a real size, use the size function to return the 
            byte size of an element.
            </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.LruCache`2.Item(`0)">
            <summary>
            Reads and writes elements using the key of an element. 
            </summary>
            <param name="key">Element key. Trying to read not existing elements results in a null value being returned - no 
            exception will be thrown in that case. Writing elements with an existing key will 
            update the value in the cache. Every element access will make this element the 
            "least recently used" one. The implementation is thread safe using a synchronization 
            lock on the inner dictionary.
            </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider">
            <summary>
            Provider that is capable to produce tiles given a MapService that in turn is capable to render map sections
            in a specific CRS that differs from EPSG:76131. The ReprojectionTileProvider will internally use a ReprojectionService to 
            wrap MapService. This ReprojectionService is used to "map" the MapService's CRS to PTV Mercator using 
            image reprojection.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.#ctor(Ptv.XServer.Controls.Map.Tools.Reprojection.MapService,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions)">
            <summary>
            Creates and initializes an instance of ReprojectionTileProvider. The given map service will internally be wrapped in a ReprojectionService which is capable
            to map any source CRS to our EPSG:76131 using image reprojection.
            </summary>
            <param name="mapService">A map service that is capable to render map images, given the bounding box and the pixel size of the map section to render.</param>
            <param name="reprojectionServiceOptions">Additional options that are passed to the ReprojectionService. Optional, defaults to null.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.CacheId">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.MaxZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.MinZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.ReprojectionService">
            <summary>
            Gets the ReprojectionService that wraps the outer MapService and is used to render our tiles.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ReprojectionTileProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>  
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix">
            <summary>
            Defines a tile matrix as it is basically part of the WMTS service specification, modified to provide 
            all necessary parameters for the WmtsMapService implementation to work properly. 
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.Identifier">
            <summary>
            Tile matrix identifier; value of the {z} URL template parameter.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixWidth">
            <summary>
            Number of horizontal tiles.
            </summary>
            <remarks>
            Limits the value of the {x} URL template parameter; 0 ... (MatrixWidth-1) tiles can be requested from the WMTS services
            if no further limits have been specified by MatrixMinX and MatrixMaxX.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixHeight">
            <summary>
            Number of vertical tiles.
            </summary>
            <remarks>
            Limits the value of the {y} URL template parameter; 0 ... (MatrixHeight-1) tiles can be requested from the WMTS services 
            if no further limits have been specified by MatrixMinY and MatrixMaxY.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.TileWidth">
            <summary>
            Pixel width of a tile returned by the WMTS service.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.TileHeight">
            <summary>
            Pixel height of a tile returned by the WMTS service.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.TopLeftCorner">
            <summary>
            The top left coordinate of the area covered by the tiles of the matrix set (with top &gt; bottom).
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.BottomRightCorner">
            <summary>
            The bottom right coordinate of the area covered by the tiles of the matrix set (with bottom &lt; top).
            </summary>
            <remarks>
            The WMTS specification does not include the bottom right corner but suggests to calculate it like this:
            <code>
               var pixelSpan = ScaleDenominator * 0.28 * 1e-3 / metersPerUnit(CRS);
               var tileSpanX = TileWidth * pixelSpan;
               var tileSpanY = TileHeight * pixelSpan;
            
               return new Point(
                  TopLeftCorner.X + tileSpanX* MatrixWidth,
                  TopLeftCorner.Y - tileSpanY* MatrixHeight
               );
            </code>
            For the bottom right corner to be correct, it is crucial to have a proper pixel span. However,
            the formula above incorporates additional resolution parameters (both device and CRS) that are not 
            entirely clear or seem to provide fixed values in any circumstances. We therefore decided to 
            explicitly include the BottomRightCorner as a property in the interface in order to make 
            implementations robust against misinterpretations. As the ScaleDenominator within a single matrix 
            set is solely used to calculate the bottom right corner, we also decided to drop that property.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixMinX">
            <summary>
            Optionally limits the number of tiles by specifying a minimum value for the {x} URL template parameter.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixMaxX">
            <summary>
            Optionally limits the number of tiles by specifying a maximum value for the {x} URL template parameter.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixMinY">
            <summary>
            Optionally limits the number of tiles by specifying a minimum value for the {y} URL template parameter.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix.MatrixMaxY">
            <summary>
            Optionally limits the number of tiles by specifying a maximum value for the {y} URL template parameter.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix">
            <summary>
            Provides an ITileMatrix implementation that does not limit the tile coordinates and works with a fixed 256x256 image size.
            It calculates BottomRightCorner based on the ScaleDenominator that is part of the WMTS service capabilities.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.#ctor(System.String,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Creates and initializes an instance of TileMatrix.
            </summary>
            <param name="identifier">The identifier of the matrix set.</param>
            <param name="scaleDenominator">The scale denominator of the matrix set.</param>
            <param name="topLeftCornerX">The x-coordinate of the top left corner.</param>
            <param name="topLeftCornerY">The y-coordinate of the top left corner.</param>
            <param name="matrixWidth">The matrix width.</param>
            <param name="matrixHeight">The matrix height.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.ScaleDenominator">
            <summary>
            Scale denominator as it it part of the WMTS service capabilities.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixWidth">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixHeight">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixMaxX">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixMaxY">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixMinX">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.MatrixMinY">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.TileHeight">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.TileWidth">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.TopLeftCorner">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrix.BottomRightCorner">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet">
            <summary>
            Basically defines a tile matrix set as a CRS-bound list of tile matrices. Provides additional methods for 
            selecting a tile matrix based on a map request (see SelectTileMatrixDelegate).
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.#ctor(System.String)">
            <summary>
            Creates and initializes an instance of TileMatrixSet.
            </summary>
            <param name="crs">The CRS of the tile matrix set.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.CRS">
            <summary>
            The CRS of this tile matrix set.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.CalculateZoom(Ptv.XServer.Controls.Map.Layers.WmtsLayer.ITileMatrix)">
            <summary>
            Calculates a zoom factor of a tile matrix.
            </summary>
            <param name="tileMatrix">Tile matrix to calculate the zoom for.</param>
            <returns>Zoom factor</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.CalculateZoom(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Calculates a zoom factor given the logical bounds and the pixel size of a map section.
            </summary>
            <param name="boundingBox">Logical bounds of the map section.</param>
            <param name="pixelSize">Pixel size of the map section.</param>
            <returns>Zoom factor</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.CalculateZoom(System.Drawing.SizeF,System.Drawing.Size)">
            <summary>
            Calculates a zoom factor given the logical bounds and the pixel size of a map section.
            </summary>
            <param name="logicalSize">Logical bounds of the map section.</param>
            <param name="pixelSize">Pixel size of the map section.</param>
            <returns>Zoom factor</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.SelectTileMatrix(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Provides an implementation of the SelectTileMatrixDelegate, 
            selecting the best matching tile matrix for the requested map section.
            </summary>
            <param name="boundingBox">Requested logical bounds of the map section.</param>
            <param name="size">Requested pixel size.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.ApproximateBoundingBox(System.String,System.Int32,System.Double)">
            <summary>
            Determines the bounding box covering the tile matrix set.
            </summary>
            <param name="targetCRS">Target CRS</param>
            <param name="nSupportingPoints">Number of supporting points; see ApproximateBoundingBox extension</param>
            <param name="resizeFactor">ResizeFactor; see ApproximateBoundingBox extension</param>
            <returns>Approximated bounding box</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet.ApproximateBoundingBox(System.String,System.String,System.Int32,System.Double)">
            <summary>
            Utility extension that determines the bounding box for a tile matrix set based on MapServiceExtensions.ApproximateBoundingBox.
            </summary>
            <param name="sourceCrs">The CRS of the tile matrix set.</param>
            <param name="targetCrs">The CRS of the bounding box to return.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <param name="resizeFactor">An additional factor for resizing the resulting bounding box to be on the safe side.</param>
            <returns>Bounding box.</returns>
            <remarks>Refer to MapServiceExtensions.ApproximateBoundingBox for further documentation.</remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsLayer">
            <summary>A layer which draws geographic content based on Web Map Tile Services (WMTS)
            by means of pre-rendered or run-time computed geo-referenced map tiles. For its major object
            only two resources are needed: An URL template for addressing each individual tile and a
            customized classification of the different zoom levels for which tiles have to be generated for.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsLayer.#ctor(System.String,System.String,Ptv.XServer.Controls.Map.Layers.WmtsLayer.TileMatrixSet)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsLayer"/> class. </summary>
            <param name="name"> The unique name of the layer. </param>
            <param name="urlTemplate">Template of an URL which is needed for addressing individual tiles
            by means of placeholders for x, y and z (zooming level) parameters. As a typical representative
            the following template can be used:
            <c>http://laermkartierung1.eisenbahn-bundesamt.de/mapproxy/wmts/ballungsraum_wmts/wmtsgrid/{z}/{x}/{y}.png</c></param>
            <param name="tileMatrixSet">WMTS uses a tile matrix set to split the map into equal sized squares at different zoom levels. 
            Such a square (so-called <em>tile</em>) is a matrix image which contains geographic data.
            So a map is cut into multiple tiles according to a fixed scale, which is called a tile matrix.
            Multiple matrices can be defined for different resolutions, resulting in a <em>tile matrix set</em> composed of one or more tile matrices. 
            Each tile matrix uses a tile matrix identifier, commonly the position of the matrix in the set, 
            the layer with the lowest resolution to be Layer 0. Further details can be seen 
            <a href="https://www.supermap.com/EN/online/iServer%20Java%206R/API/WMTS/wmts_introduce.htm">here</a>.
            The used tile matrix set by a service can be determined via the WMTS capabilities request. In the example shown for URL
            template the following tile matrix set was extracted from the capabilities 
            <c>http://laermkartierung1.eisenbahn-bundesamt.de/mb3/WMTSCapabilities.xml</c>:
            <code>
            new TileMatrixSet("EPSG:25832")
            {
                new TileMatrix("00", 12980398.9955000000, 204485.0, 6134557.0,      1,      1),
                new TileMatrix("01",  6490199.4977700000, 204485.0, 6134557.0,      2,      2),
                new TileMatrix("02",  3245099.7488800000, 204485.0, 6134557.0,      4,      4),
                new TileMatrix("03",  1622549.8744400000, 204485.0, 6134557.0,      7,      8),
                new TileMatrix("04",   811274.9372210000, 204485.0, 6134557.0,     14,     16),
                new TileMatrix("05",   405637.4686100000, 204485.0, 6134557.0,     28,     32),
                new TileMatrix("06",   202818.7343050000, 204485.0, 6134557.0,     56,     64),
                new TileMatrix("07",   101409.3671530000, 204485.0, 6134557.0,    111,    128),
                new TileMatrix("08",    50704.6835763000, 204485.0, 6134557.0,    222,    256),
                new TileMatrix("09",    25352.3417882000, 204485.0, 6134557.0,    443,    512),
                new TileMatrix("10",    12676.1708941000, 204485.0, 6134557.0,    885,   1024),
                new TileMatrix("11",     6338.0854470400, 204485.0, 6134557.0,   1770,   2048),
                new TileMatrix("12",     3169.0427235200, 204485.0, 6134557.0,   3540,   4096),
                new TileMatrix("13",     1584.5213617600, 204485.0, 6134557.0,   7080,   8192),
                new TileMatrix("14",      792.2606808800, 204485.0, 6134557.0,  14160,  16384),
                new TileMatrix("15",      396.1303404400, 204485.0, 6134557.0,  28320,  32768),
                new TileMatrix("16",      198.0651702200, 204485.0, 6134557.0,  56639,  65536),
                new TileMatrix("17",       99.0325851100, 204485.0, 6134557.0, 113278, 131072),
                new TileMatrix("18",       49.5162925550, 204485.0, 6134557.0, 226555, 262144),
                new TileMatrix("19",       24.7581462775, 204485.0, 6134557.0, 453109, 524288)
            };
            </code></param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsLayer.UrlTemplate">
            <summary>Template of an URL which is needed for addressing individual tiles
            by means of placeholders for x, y and z (zooming level) parameters. As a typical representative
            the following template can be used:
            <c>http://laermkartierung1.eisenbahn-bundesamt.de/mapproxy/wmts/ballungsraum_wmts/wmtsgrid/{z}/{x}/{y}.png</c>
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsLayer.TileMatrixSet">
            <summary>WMTS uses a tile matrix set to split the map into equal sized squares at different zoom levels. 
            Such a square (so-called <em>tile</em>) is a matrix image which contains geographic data.
            So a map is cut into multiple tiles according to a fixed scale, which is called a tile matrix.
            Multiple matrices can be defined for different resolutions, resulting in a <em>tile matrix set</em> composed of one or more tile matrices. 
            Each tile matrix uses a tile matrix identifier, commonly the position of the matrix in the set, 
            the layer with the lowest resolution to be Layer 0. Further details can be seen 
            <a href="https://www.supermap.com/EN/online/iServer%20Java%206R/API/WMTS/wmts_introduce.htm">here</a>.
            The used tile matrix set by a service can be determined via the WMTS capabilities request. In the example shown for URL
            template the following tile matrix set was extracted from the capabilities 
            <c>http://laermkartierung1.eisenbahn-bundesamt.de/mb3/WMTSCapabilities.xml</c>:
            <code>
            new TileMatrixSet("EPSG:25832")
            {
                new TileMatrix("00", 12980398.9955000000, 204485.0, 6134557.0,      1,      1),
                new TileMatrix("01",  6490199.4977700000, 204485.0, 6134557.0,      2,      2),
                new TileMatrix("02",  3245099.7488800000, 204485.0, 6134557.0,      4,      4),
                new TileMatrix("03",  1622549.8744400000, 204485.0, 6134557.0,      7,      8),
                new TileMatrix("04",   811274.9372210000, 204485.0, 6134557.0,     14,     16),
                new TileMatrix("05",   405637.4686100000, 204485.0, 6134557.0,     28,     32),
                new TileMatrix("06",   202818.7343050000, 204485.0, 6134557.0,     56,     64),
                new TileMatrix("07",   101409.3671530000, 204485.0, 6134557.0,    111,    128),
                new TileMatrix("08",    50704.6835763000, 204485.0, 6134557.0,    222,    256),
                new TileMatrix("09",    25352.3417882000, 204485.0, 6134557.0,    443,    512),
                new TileMatrix("10",    12676.1708941000, 204485.0, 6134557.0,    885,   1024),
                new TileMatrix("11",     6338.0854470400, 204485.0, 6134557.0,   1770,   2048),
                new TileMatrix("12",     3169.0427235200, 204485.0, 6134557.0,   3540,   4096),
                new TileMatrix("13",     1584.5213617600, 204485.0, 6134557.0,   7080,   8192),
                new TileMatrix("14",      792.2606808800, 204485.0, 6134557.0,  14160,  16384),
                new TileMatrix("15",      396.1303404400, 204485.0, 6134557.0,  28320,  32768),
                new TileMatrix("16",      198.0651702200, 204485.0, 6134557.0,  56639,  65536),
                new TileMatrix("17",       99.0325851100, 204485.0, 6134557.0, 113278, 131072),
                new TileMatrix("18",       49.5162925550, 204485.0, 6134557.0, 226555, 262144),
                new TileMatrix("19",       24.7581462775, 204485.0, 6134557.0, 453109, 524288)
            };
            </code>
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.SelectTileMatrixDelegate">
            <summary>
            Defines a function that determines the best matching tile matrix for rendering a map image 
            with the given logical bounds and image size.
            This delegate is used by WmtsMapService to decouple the service from the full tile matrix set. Being 
            used by WmtsMapService, the CRS of the bounding box passed in is the very same as the CRS that has 
            been passed to the WmtsMapService during initialization. To be quite clear in the logic to implement, 
            the CRS will not be repeated as a parameter in the call to the delegate.
            </summary>
            <param name="boundingBox">The logical bounds of the map image to be rendered.</param>
            <param name="size">The image size of the map to be rendered.</param>
            <returns>The best matching tile matrix represented by an implementation of ITileMatrix.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService">
            <summary>
            MapService implementation that turns a WMTS service into a WMS-like service 
            allowing arbitrary map sections and zoom levels to be requested.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.SizeLimit">
            <summary>
            Both size and bounding box passed to GetImageStream below have been determined by multiple transformations. With some 
            CRSes being restricted geographically, the actual values of size a/o bounding box may be invalid. As a simple check 
            for that, we use the value of SizeLimit to check if pixels sizes are in a valid range. 
            
            TODO: Improve the size check and move it to the caller of GetImageStream.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.tileCache">
            <summary>
            Setup a tile cache to cache up to 16MiB of WMTS tile data. This cache is used by LoadImage below.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.#ctor(System.String,System.String,Ptv.XServer.Controls.Map.Layers.WmtsLayer.SelectTileMatrixDelegate,Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox)">
            <summary>
            Creates and initializes an instance of WmtsMapService.
            </summary>
            <param name="urlTemplate">The template for settings up the URLs for requesting tiles. See remarks below.</param>
            <param name="crs">The CRS of the WMTS service we're calling.</param>
            <param name="selectTileMatrix">A function determining the best matching tile matrix for a given rendering request.</param>
            <param name="limits">Optionally defines the limits of the MapService in EPSG:76131.</param>
            <remarks>
            The url template is expected to contain the placeholders "{x}", "{y}" and "{z}", e.g. 
            "http://mywmts.service.de/wmts/mylayer/mymatrixset/{z}/{x}/{y}.png". The placeholders will be 
            replaced when requesting tiles; the value of "{z}" will be taken from the identifier of the tile 
            matrix actually returned by the given SelectTileMatrixDelegate. Each web request created will be
            passed to a delegate that allows additional modifications.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.Limits">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.OnRequestCreated">
            <summary> 
            Additional event that will be triggered after the request has been created. Used for request customization. 
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.SelectTileMatrix">
            <summary>
            Gets the function that determines the best matching tile matrix for a given rendering request.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.Template">
            <summary>
            Gets the URL template.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.BlockBuilder">
            <summary>
            Helper class based on ImageReprojector that is used to divide an image into 
            blocks of a certain size. Used internally for coloring our test image.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.BlockBuilder.#ctor(System.Int32)">
            <summary>
            Creates and initializes an instance of BlockBuilder.
            </summary>
            <param name="blockSize">Target block size.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.BlockBuilder.GetBlocks(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the image blocks
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.RenderTestImage(System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Renders a test image.
            </summary>
            <param name="width">Width of the test image.</param>
            <param name="height">Height of the test image.</param>
            <param name="blockSize">Block size used for coloring the test image.</param>
            <param name="tileX">The x-coordinate of the tile being requested; used for dynamically coloring the image.</param>
            <param name="tileY">The y-coordinate of the tile being requested; used for dynamically coloring the image.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.LoadImage(System.String,System.Int32,System.Int32)">
            <summary>
            Loads tile images from the WMTS service.
            </summary>
            <param name="identifier">Identifier of the tile matrix; Value for the {z} template parameter.</param>
            <param name="x">Value for the {x} template parameter.</param>
            <param name="y">Value for the {y} template parameter.</param>
            <returns>Tile image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.CreateBitmap(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Internal helper that creates and optionally initializes a bitmap image, 
            validating the dimensions of the image to be created.
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="initialize">If set to true, initializes the image by filling it with a transparent white color.</param>
            <returns>Image or null, if either width of height is invalid.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.ParamsValid(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Due to limitations of certain CRS the given bounding box a/o size may be invalid. 
            This happens when transforming Mercator tile bounds to the CRS. This helper checks 
            the bounds and size.
            </summary>
            <param name="boundingBox"></param>
            <param name="size"></param>
            <returns>True, if bounds and size are valid.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.WmtsLayer.WmtsMapService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size,System.Drawing.Size@)">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Xmap2.ContentSnapshotDescription">
            <summary>Relevant information concerning a content snapshot. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.ContentSnapshotDescription.id">
            <summary>Unique ID for addressing the corresponding snapshot. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.ContentSnapshotDescription.label">
            <summary>Human readable description of a snapshot.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers">
            <summary>Concentrates functionality around Feature Layers in XMap2 environment, especially the installed
            <a href="https://xserver2-dashboard.cloud.ptvgroup.com/dashboard/Default.htm#TechnicalConcepts/FeatureLayer/DSC_About_FeatureLayer.htm%3FTocPath%3DTechnical%2520Concepts%7CFeature%2520Layer%7C_____2">Feature Layer themes</a>
            and all parameters related to
            <a href="https://xserver2-dashboard.cloud.ptvgroup.com/dashboard/Default.htm#API-Documentation/timeconsideration.html%3FTocPath%3DAPI%2520Documentation%7Ccommon%7Ctimeconsideration%7C_____0">time consideration</a>.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.#ctor(Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory)">
            <summary>Initializes the new instance with a reference to the possessing layer factory.</summary>
            <param name="owner">Owner of the new object.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.AvailableThemes">
            <summary>Provides all available Feature Layer themes installed on the server defined by the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BaseUrl"/> property.</summary>
            <returns>String list of all available Feature Layer themes.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.TimeConsiderationScenario">
            <summary>Time consideration scenario which should be used when the map is rendered and
            map objects are retrieved. Currently supported scenarios are
            <em>OptimisticTimeConsideration</em>, <em>SnapshotTimeConsideration</em> and <em>TimeSpanConsideration</em>. 
            For all other return values (including null string), no scenario is used and all time dependent features are not relevant.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.ReferenceTime">
            <summary>For <em>SnapshotTimeConsideration</em> and <em>TimeSpanConsideration</em> it is necessary to define a reference
            time to determine which time dependent features should be active or not. The reference time
            including a time zone comes along in the following format:
            <c>yyyy-MM-ddTHH:mm:ss[+-]HH:mm</c>, for example <c>2018-08-05T04:00:00+02:00</c>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.TimeSpan">
            <summary>Time span (in seconds) which is added to the reference time 
            and needed for the <em>TimeSpanConsideration</em> scenario. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.ShowOnlyRelevantByTime">
            <summary>Function which indicates if the non-relevant Features should be shown or not.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.AvailableContentSnapshots">
            <summary>Provides all available content snapshots configured on the server defined by the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BaseUrl"/> property.</summary>
            <returns>Description list of all available content snapshots.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.FeatureLayers.ContentSnapshotId">
            <summary>ID of the content snapshot.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory">
            <summary>Generates layer objects based on xServer 2. </summary>
            <remarks>The provided layers have to be inserted into the <see cref="T:Ptv.XServer.Controls.Map.Map"/>'s layer management client-side.
            There exist two different layers to make it is possible to 'inject' additional layers between background and label layer.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.#ctor(Ptv.XServer.Controls.Map.IXServerVersion)">
            <summary>Initializes the background and foreground layer which can be configured client-side with different themes.</summary>
            <param name="xServerVersion">Version helper for URL specifying the root part of the URL from which a service like rendering a map can be composed.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BaseUrl">
            <summary>URL specifying the root part of the URL from which a service like rendering a map can be composed. For example, 
            https://xserver2-europe-eu-test.cloud.ptvgroup.com
            can be used as a base URL providing access to a Cloud based XServer2 system. The renderMap service is composed to:
            https://xserver2-europe-eu-test.cloud.ptvgroup.com/services/rs/XMap/{version}/renderMap
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.Token">
            <summary>For xServer internet, a token must be specified for authentication. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BackgroundLayer">
            <summary>An <see cref="T:Ptv.XServer.Controls.Map.Layers.ILayer"/> object providing a tile-based (i.e. more responsive) rendering. The geographical content is defined 
            by the list of background themes, see <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BackgroundThemes"/>. This layer object should be inserted in a <see cref="T:Ptv.XServer.Controls.Map.Map"/>
            before the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.LabelLayer"/>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BackgroundThemes">
            <summary>Collection of themes which determine the geographical content of the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BackgroundLayer"/>,
            for example themes like <c>background</c> or <c>transport</c>.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.LabelLayer">
            <summary>An <see cref="T:Ptv.XServer.Controls.Map.Layers.ILayer"/> object providing an untiled rendering, the whole map is comprised in a single bitmap. 
            The geographical content is defined by the list of foreground themes, see <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.LabelThemes"/>. 
            This layer object should be inserted in a <see cref="T:Ptv.XServer.Controls.Map.Map"/> after the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.BackgroundLayer"/>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.LabelThemes">
            <summary>Collection of themes which determine the geographical content for the <see cref="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.LabelLayer"/>,
            for example themes like <c>labels</c> or <c>PTV_TruckAttributes</c>. The major intention of this layer
            is to avoid blurred objects like texts or traffic signs when fractional rendering is applied. Fractional rendering
            is provided by the <see cref="T:Ptv.XServer.Controls.Map.Map"/> object allowing seamless zooming. In most mapping frameworks there are only
            zoom levels available according the classification of tile sizes. Only in such environments a tile-based rendering is
            recommended. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.MapLanguage">
            <summary>Function which returns the language, used for  geographical objects in the map like names for town and streets. 
            The language code is defined in BCP47, for example <em>en</em>, <em>fr</em> or <em>de</em>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.UserLanguage">
            <summary>The language used for textual messages, for example provided
            by the theme <em>traffic incidents</em>. The language code is defined in BCP47, 
            for example <em>en</em>, <em>fr</em> or <em>de</em>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.AvailableMapStyles">
            <summary>All available map styles configured on the corresponding xMap2 server.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.MapStyle">
            <summary>Style of a map.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.FeatureLayers">
            <summary> Provides functionality all around Feature Layers. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.ModifyRequest">
            <summary>Callback for a final adaptation of a WebRequest before it is sent to XMap2 server.</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.Xmap2.LayerFactory.ReportXServerError">
            <summary>Callback for a reporting of errors which may occur during xServer requests.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider">
            <summary> Loads untiled bitmaps from a given xServer 2 URL, like
            http://xserver-2:40000/services/rs/XMap/renderMap. 
            Its main purpose is to get labels from xServer 2, which shows a proper rendering of textual objects
            independent from the current scale.
            By means of tiled access some unpleasant artifacts may occur when fractional rendering is used. 
            With untiled rendering this issue can be avoided.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.RequestUriString">
            <summary>URL of the service which provides untiled access of a map image via JSON request. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.XToken">
            <summary> xToken needed for authentication in cloud based environments.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.ThemesForRendering">
            <summary>A set of themes for which a map should be rendered. Examples are <em>labels</em>,
            but also Feature Layer themes like <em>Truck Attributes</em>.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.ThemesWithMapObjects">
            <summary>A set of themes for which map object information should be calculated during
            the renderMap service request. Commonly, this set is restricted to Feature Layer themes like <em>Truck Attributes</em>.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.TimeConsiderationScenario">
            <summary>Time consideration scenario which should be used when the map is rendered and
            map objects are retrieved. Currently supported scenarios are
            <em>OptimisticTimeConsideration</em>, <em>SnapshotTimeConsideration</em> and <em>TimeSpanConsideration</em>. 
            For all other return values (including null string), no scenario is used and all time dependent features are not relevant.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.ReferenceTime">
            <summary>For <em>SnapshotTimeConsideration</em> and <em>TimeSpanConsideration</em> it is necessary to define a reference
            time to determine which time dependent features should be active or not. This reference time comes along with the following format:
            <c>yyyy-MM-ddTHH:mm:ss[+-]HH:mm</c>, for example <c>2018-08-05T04:00:00+02:00</c>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.TimeSpan">
            <summary>Time span (in seconds) which is added to the reference time 
            and needed for the <em>TimeSpanConsideration</em> scenario. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.ShowOnlyRelevantByTime">
            <summary>Indicator if the non-relevant features should be shown or not.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.UserLanguage">
            <summary>The language used for textual messages, for example provided
            by the theme <em>traffic incidents</em>. The language code is defined in BCP47, 
            for example <em>en</em>, <em>fr</em> or <em>de</em>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.MapLanguage">
            <summary>The language code used for geographical objects in the map like names
            for town and streets. The language code is defined in BCP47,
            for example <em>en</em>, <em>fr</em> or <em>de</em>. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.StoredProfile">
            <summary>Profile containing the styles of a map.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.ContentSnapshotId">
            <summary>ID of the content snapshot.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.GetImageStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.Xmap2.UntiledProvider.GetImageStreamAndMapObjects(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.ILayer">
            <summary> Interface for layer management and rendering relevant methods. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Name">
            <summary> Gets the name of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Priority">
            <summary> Gets or sets the priority (base z index) of all layer canvases. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Caption">
            <summary> Gets or sets the caption of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Icon">
            <summary> Gets or sets the icon of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Opacity">
            <summary> Gets or sets the opacity of the layer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ILayer.AddToMapView(Ptv.XServer.Controls.Map.MapView)">
            <summary> Adds the different layer canvases to the map. </summary>
            <param name="mapViewToAdd"> The map to which the canvases are to be added. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.ILayer.RemoveFromMapView(Ptv.XServer.Controls.Map.MapView)">
            <summary> Removes the different layer canvases from the map. </summary>
            <param name="mapView"> The map from which the canvases are to be removed. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.Copyright">
            <summary> Gets the copyright string of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.HasSettingsDialog">
            <summary> Gets a value indicating whether the layer has a settings dialog. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.ILayer.CanvasCategories">
            <summary> Gets the available canvas categories. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.IToolTips">
            <summary> Retrieves information around a certain geographical point.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.IToolTips.Get(System.Windows.Point,System.Double)">
            <summary> Retrieves information around a certain geographical point.</summary>
            <param name="center">Pixel coordinate of the point.</param>
            <param name="maxPixelDistance">Maximal number of pixels to search for.</param>
            <returns>A collection of strings describing the geographical objects.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.NamespaceDoc">
            <summary>
            <para>
            A map is built-up with different <see cref="N:Ptv.XServer.Controls.Map.Layers"/>. There are several types of
            layers. The main types are <see cref="T:Ptv.XServer.Controls.Map.Layers.Tiled.TiledLayer"/>, which renders map content split-up in bitmap tiles,
            <see cref="T:Ptv.XServer.Controls.Map.Layers.Untiled.UntiledLayer"/>, which renders a new image whenever the map viewport changes and
            <see cref="T:Ptv.XServer.Controls.Map.Layers.Shapes.ShapeLayer"/>, which can be used to display dynamic vector data. The map control has a
            <see cref="T:Ptv.XServer.Controls.Map.LayerCollection"/> to add, remove and manipulate the order and visibility of layers.
            </para>
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.BaseLayer">
            <summary> A layer which adds one or more canvases to the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.BaseLayer.opacity">
            <summary> Opacity of the layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.BaseLayer.priority">
            <summary> The priority (base zIndex) of the layer which defines if the layer is painted in front of or behind other layers. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.BaseLayer.caption">
            <summary> Caption of the layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.BaseLayer.canvasInstances">
            <summary> List of canvases which have been added to a map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.#ctor(System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Layers.BaseLayer"/> class. By default, opacity is set to 1. </summary>
            <param name="name"> Name of the base layer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.InitializeFactory(Ptv.XServer.Controls.Map.Canvases.CanvasCategory,Ptv.XServer.Controls.Map.Layers.BaseLayer.CanvasFactoryDelegate)">
            <summary> Initializes the base layer factory. A default category for the created canvases is set as well as a
            default factory method which creates the new canvas instances. </summary>
            <param name="category"> Default category of all base layers. </param>
            <param name="factory"> Default factory delegate. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Copyright">
            <summary> Gets or sets the copyright text of the layer. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.BaseLayer.CanvasFactoryDelegate">
            <summary> Canvas factory delegate. Takes a map as parameter, creates a canvas for this map and returns the
            newly created canvas. </summary>
            <param name="mapView"> Map for which a canvas should be created. </param>
            <returns> Newly created canvas. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.CanvasFactories">
            <summary> Gets or sets the array of factory delegates. There may be existing different factory methods for
            canvases of different categories. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.Refresh">
            <summary> Updates the layer instances. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Name">
            <summary> Gets or sets the name of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.CanvasCategories">
            <summary> Gets or sets the canvas categories for the layer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.AddToMapView(Ptv.XServer.Controls.Map.MapView)">
            <summary> Adds the layer to a map. </summary>
            <param name="mapViewToAdd"> The map to which the layer is to be added. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.RemoveFromMapView(Ptv.XServer.Controls.Map.MapView)">
            <summary> Removes the layer from a map. </summary>
            <param name="mapView"> The map from which the layer is to be removed. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.HasSettingsDialog">
            <summary> Gets a value indicating whether the layer has a settings dialog describing its properties. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Priority">
            <summary> Gets or sets the zIndex of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Caption">
            <summary> Gets or sets the caption of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Icon">
            <summary> Gets or sets the icon of the layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Layers.BaseLayer.Opacity">
            <summary> Gets or sets the opacity of the layer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.BaseLayer.UpdateZindex">
            <summary> Updates the zIndex of the layer. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Layers.BaseLayer.PropertyChanged">
            <summary> Occurs when a property value changes. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory">
            <summary>
            This helper class implements extension methods to initialize the map 
            with xMapServer base layers, RoadEditor and POI layers available from XMapServer.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.BaseLayerSuccessor">
            <summary> The name of the layer which successes the base layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.LabelLayerPredecessor">
            <summary> The name of the layer which precedes the base layer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.InsertXMapBaseLayers(Ptv.XServer.Controls.Map.LayerCollection,Ptv.XServer.Controls.Map.Tools.XMapMetaInfo)">
            <summary>
            Inserts the xMapServer base layers, i.e. the background layers for areas like forests, rivers, population areas, et al,
            and their corresponding labels.
            </summary>
            <param name="layers">The LayerCollection instance, used as an extension. </param>
            <param name="meta">Meta information for xMapServer, further details can be seen in the <see cref="T:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo"/> description. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.UpdateXMapCoprightText(Ptv.XServer.Controls.Map.LayerCollection,System.String)">
            <summary>
            Updates the copyright text for the XMapServer layers.
            </summary>
            <param name="layers"> The LayerCollection instance. </param>
            <param name="copyrightText"> The new copyright text</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.UpdateXMapMaxZoom(Ptv.XServer.Controls.Map.LayerCollection,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Updates the maximum zoom for the XMapServer layers.
            </summary>
            <param name="layers"> The LayerCollection instance. </param>
            <param name="maxZoom">Maximum zoom value to set. See remarks.</param>
            <param name="maxZoomLabels">Maximum zoom for the label layer. See remarks.</param>
            <remarks>Update the maximum zoom for the background and the label layer. If maxZoomLabels is unspecified, 
            maxZoom will be used for both layers. If maxZoomLabels is specified, maxZoom determines the value for
            the background and maxZoomLabels the value for the label layer.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.UpdateXMapMinZoom(Ptv.XServer.Controls.Map.LayerCollection,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Updates the minimum zoom for the XMapServer layers.
            </summary>
            <param name="layers"> The LayerCollection instance. </param>
            <param name="minZoom">Minimum zoom value to set. See remarks.</param>
            <param name="minZoomLabels">Minimum zoom for the label layer. See remarks.</param>
            <remarks>Update the minimum zoom for the background and the label layer. If minZoomLabels is unspecified, 
            minZoom will be used for both layers. If minZoomLabels is specified, minZoom determines the value for
            the background and minZoomLabels the value for the label layer.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.UpdateXMapProfiles(Ptv.XServer.Controls.Map.LayerCollection,System.String,System.String)">
            <summary>
            Updates the profiles to be used in xMap Server requests.
            </summary>
            <param name="layers"> The LayerCollection instance. </param>
            <param name="profileBackground">The profile to be used in the background layer.</param>
            <param name="profileLabels">The profile to be used in the label layer.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Layers.XMapLayerFactory.RemoveXMapBaseLayers(Ptv.XServer.Controls.Map.LayerCollection)">
            <summary>
            Removes all xMapServer base layers.
            </summary>
            <param name="layers"> The LayerCollection instance. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.GlobalOptions">
            <summary>
            This class manages the global options of the map
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.GlobalOptions.MemoryPressureMode">
            <summary>
            Enable the incrementation of memory pressure for bitmap images
            The default setting is automatic, which disables it for 64-Bit and enables it
            when running in a 32-Bit process.
            Must be called before the first initialization of the map control!
            Note: This property is now ignored by default and will be removed in later versions!
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.GlobalOptions.TileCacheSize">
            <summary>
            The number of tiles which are cached in memory.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.GlobalOptions.InfiniteZoom">
            <summary>
            Indicated that the "Infinite Zoom" feature should be activated.
            This allows zoom factors beyond level 19, but must be supported by all layers.
            Note: This property is now true by default and will be removed in later versions!
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.MemoryPressureMode">
            <summary>
            The memory pressure modes for internal bitmap images.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MemoryPressureMode.Enable">
            <summary>
            Increase memory pressure for bitmap images. This triggers the garbage collector
            very often and can cause stuttering when a large amount of managed memory is allocated.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MemoryPressureMode.Disable">
            <summary>
            Disable the incrementation of memory pressure for BitmapImages
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MemoryPressureMode.Automatic">
            <summary>
            Disable memory pressure when running as 64-bi and enable it when running in a 32-Bit process.        
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.IMap">
            <summary> This the root interface of the map control. It is implemented both for WpfMap and FormsMap. The
            interface has methods for setting and getting the current map viewport, configuring the gadgets and getting
            access to the layers collection. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.IMap.ViewportBeginChanged">
            <summary> Event indicating the beginning of a change of the visible map section. This event is intended for
            more longtime actions (for example reading DB-objects), when the map section will change. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.IMap.ViewportEndChanged">
            <summary> Event indicating the ending of a change of the visible map section. It is the counterpart of the
            <seealso cref="E:Ptv.XServer.Controls.Map.IMap.ViewportBeginChanged"/> event. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.IMap.ViewportWhileChanged">
            <summary> Event indicating an intermediate view, when animation mode is active. It can be used to adapt the
            size of WPF objects, or other actions, which are not time-consuming. This event may called multiple times,
            when animation mode is active. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.Layers">
            <summary> Gets the collection of map layers. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.XMapUrl">
            <summary> Gets or sets the url pointing to where the xMapServer is located (e.g. http://127.0.0.1:50010/xmap/ws/XMap). </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.XMapCopyright">
            <summary> Gets or sets the copyright text. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.XMapCredentials">
            <summary> Gets or sets the credentials for xMapServer basic HTTP authentication.
            The format of the credential string is "&lt;user&gt;:&lt;password&gt;".</summary>
            <remarks>It is possible to specify only the password. In this case the password is regarded as an XToken,
            and the 'user' <em>xtok</em> is applied automatically. </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.XMapStyle">
            <summary> Gets or sets the style profile of the xMapServer base map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.FitInWindow">
            <summary> Gets or sets a value indicating whether the map should be fitted in the window or not. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.IsAnimating">
            <summary> Gets a value indicating whether an animation is in progress. Returns true while the map performs
            a transition to a new map section. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MaxZoom">
            <summary> Gets or sets the maximal level of detail according to the standard tiling scheme. The current
            detail level (see <see cref="P:Ptv.XServer.Controls.Map.IMap.ZoomLevel"/> property) is corrected, if it is higher than the new maximum value. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MinZoom">
            <summary> Gets or sets the minimal level of detail according to the standard tiling scheme. The current
            detail level (see <see cref="P:Ptv.XServer.Controls.Map.IMap.ZoomLevel"/> property) is corrected, if it is lower than the new minimum value. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MetersPerPixel">
            <summary> Gets the number of meters spanned by one pixel. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.SetMapLocation(System.Windows.Point,System.Double)">
            <summary> Sets the center (specified in WGS84 units) and zoom level of the map. </summary>
            <param name="center"> The center in WGS84 units (X=Longitude, Y=Latitude). </param>
            <param name="zoomLevel"> Zoom level of the map. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.SetMapLocation(System.Windows.Point,System.Double,System.String)">
            <summary> Sets the center (coordinate format specified in parameter <paramref name="spatialReferenceId"/>) and zoom level of the map. </summary>
            <param name="center"> The center point. </param>
            <param name="zoomLevel"> The zoom level. </param>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GetEnvelope">
            <summary> Gets the anticipated bounding box of the visible map section after the map was in animation mode / the
            current box while the map is in animation mode. </summary>
            <returns> The rectangle in WGS84 units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GetEnvelope(System.String)">
            <summary> Gets the anticipated bounding box of the visible map section after the map was in animation mode / the
            current box while the map is in animation mode. The bounding box coordinates are specified in a coordinate format
            according the parameter value of <paramref name="spatialReferenceId"/>. </summary>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
            <returns> The rectangle of the bounding box, specified in a coordinate format
            according the parameter value of <paramref name="spatialReferenceId"/>. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> Centers the map resulting in all elements within the specified rectangle are visible. </summary>
            <param name="rectangle"> The rectangle in WGS84 units. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle,System.String)">
            <summary> Centers the map, so all elements within the specified rectangle are visible. </summary>
            <param name="rectangle"> The rectangle containing coordinates specified in a coordinate format
            according the parameter value of <paramref name="spatialReferenceId"/>. </param>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GetCurrentEnvelope">
            <summary> Gets the bounding box of the visible map section while the map is in animation mode. </summary>
            <returns> The rectangle in WGS84 units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GetCurrentEnvelope(System.String)">
            <summary> Gets the bounding box of the visible map section while the map is in animation mode. </summary>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
            <returns> The rectangle of the bounding box, specified in a coordinate format
            according the parameter value of <paramref name="spatialReferenceId"/>. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.MouseToGeo(System.Windows.Input.MouseEventArgs,System.String)">
            <summary> Converts the click point of the mouse event to a geographic point corresponding to the given 
            spatial reference id. The click point of the mouse is determined relative to the map. </summary>
            <param name="e"> The mouse event args to convert. </param>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
            <returns> The point in geographical units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.MouseToGeo(System.Windows.Input.MouseEventArgs)">
            <summary> Converts the click point of the mouse event to a geographic point in WGS84 units. 
            The click point of the mouse is determined relative to the map. </summary>
            <param name="e"> The mouse event args to convert. </param>
            <returns> The point in WGS84 units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.RelToMapViewAsGeo(System.Windows.Point,System.String)">
            <summary> Converts a point from WPF coordinates to a geographic point. </summary>
            <param name="point"> The point in WPF units. </param>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
            <returns> The point in geographical units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.RelToMapViewAsGeo(System.Windows.Point)">
            <summary> Converts a point from WPF coordinates to a geographic point. </summary>
            <param name="point"> The point in WPF units. </param>
            <returns> The point in WGS84 units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GeoAsRelToMapView(System.Windows.Point,System.String)">
            <summary> Converts a geographic point to a point in WPF units. </summary>
            <param name="point"> The geographic point. </param>
            <param name="spatialReferenceId"> The spatial reference. </param>
            <returns> The point in WPF units. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.GeoAsRelToMapView(System.Windows.Point)">
            <summary> Converts a geographic point to a point in WPF units. </summary>
            <param name="point"> The geographic point. </param>
            <returns> The point in WPF units. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.UseMiles">
            <summary> Gets or sets a value indicating whether the scale unit is miles. The default value is false. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.UseAnimation">
            <summary> Gets or sets a value indicating whether the map uses transitions for panning, zooming and fade-in
            of tiles. The default value is true. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.InvertMouseWheel">
            <summary> Gets or sets a value indicating whether the orientation for mouse-wheel zoom is inverted. If so,
            zoom in and zoom out mouse wheel direction is exchanged. The default value is false. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MouseWheelSpeed">
            <summary> Gets or sets the speed for mouse-wheel zoom. The value defines the number of map zoom levels per
            wheel delta. The default value is 0.5. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MouseDoubleClickZoom">
            <summary> Gets or sets the activation for zoom on double-click. If true, the user can zoom-in be double left-click
            and zoom-out by double right-click. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.MouseDragMode">
            <summary> Gets or sets the behavior when dragging the mouse while holding the left button. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.CoordinateDiplayFormat">
            <summary> Gets or sets the display format for coordinates. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.ZoomLevel">
            <summary> Gets or sets the zoom level of the map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.Scale">
            <summary> Gets the scale of the map in meters per pixel. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.Center">
            <summary> Gets or sets the center of the map in WGS84 coordinates. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.CurrentZoomLevel">
            <summary> Gets the current zoom level of the map while it is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.CurrentScale">
            <summary> Gets the current scale of the map in meters per pixel while it is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.CurrentCenter">
            <summary> Gets the center of the map in WGS84 coordinates while it is in animation mode. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.IMap.PrintMap(System.Boolean,System.String)">
            <summary> Prints the currently displayed map. </summary>
            <param name="useScaling"> Flag indicating whether the map should be scaled to the paper size. </param>
            <param name="description"> Description text for the print document. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.ToolTipManagement">
            <summary> Gets the object providing all functionality relevant for tool tip management. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IMap.Xmap2LayerFactory">
            <summary>Gets the helper object for integration of XMap2 layers and Feature Layers of XServer 2.
            The reference is only set when property <see cref="P:Ptv.XServer.Controls.Map.IMap.XMapUrl"/> is set with an XMap2 conform URL.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.CoordinateDiplayFormat">
            <summary>
            The coordinate display format type.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.CoordinateDiplayFormat.Degree">
            <summary>
            Display Latitude/Longitude by degree, minutes, seconds.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.CoordinateDiplayFormat.Decimal">
            <summary>
            Display Latitude/Longitude with decimal values.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.ILayerSettings">
            <summary> Interface provided by the WPFClient to open an application specific dialog box to manipulate the
            properties/settings of a layer object. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.ILayerSettings.ShowSettingsDialog(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary> The corresponding object shows a dialog box with all the settings of the specified layer. </summary>
            <param name="layer"> Layer providing the settings, which should be shown in dialog. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.LayerCollection">
            <summary> Container class managing the set of all available <see cref="T:Ptv.XServer.Controls.Map.Layers.ILayer"/> objects. Especially the
            visibility and selection property is managed by this class. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.LayerCollection.visibilities">
            <summary> Dictionary of visibility settings for each layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.LayerCollection.selectabilities">
            <summary> Dictionary of selectability settings for each layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.LayerCollection.mapViews">
            <summary> List of maps in which the layers can be shown. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.LayerCollection.exclusiveSelectableLayer">
            <summary> The single layer which is exclusive selectable (if existent). </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.LayerCollection.selfNotify">
            <summary> Indicates the collection is changed from within the CollectionChanged. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.LayerCollection.LayerSettings">
            <summary> Gets or sets the interface, which is used when the settings of a layer have to be shown.
            Due to the fact, that this class does not know the styles of the GUI, the dialogs are deferred to the
            client application implementing such an <see cref="T:Ptv.XServer.Controls.Map.ILayerSettings"/>-interface. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.LayerCollection"/> class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.LayerCollection.Item(System.String)">
            <summary> Index operator for the set of layers, accepting the layer name for comparison. </summary>
            <param name="layerName"> Name of the layer to search for. The search is case-sensitive. </param>
            <returns> The layer with the specified name, if available, otherwise null. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.InsertBefore(Ptv.XServer.Controls.Map.Layers.ILayer,System.String)">
            <summary> Insert a layer before another layer. </summary>
            <param name="layer"> The layer. </param>
            <param name="name"> The name of the other layer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.ShowSettingsDialog(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary> Activates the settings dialog, if an <see cref="T:Ptv.XServer.Controls.Map.ILayerSettings"/>-interface is set by the client
            application. </summary>
            <param name="layer"> Layer object, for which the settings have to be shown. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.Register(Ptv.XServer.Controls.Map.MapView)">
            <summary> Connect a <see cref="T:Ptv.XServer.Controls.Map.MapView"/>-object to the called LayerCollection. In return, only visible
            layers are connected to the Map object. </summary>
            <param name="mapView"> Map to connect with the visible layers. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.Unregister(Ptv.XServer.Controls.Map.MapView)">
            <summary> Disconnect a <see cref="T:Ptv.XServer.Controls.Map.MapView"/>-object from the called LayerCollection. In return, all visible
            layers are disconnected from the Map object. </summary>
            <param name="mapView"> Map to disconnect from the visible layers. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.IsVisible(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary> Retrieves for a layer whether it is visible. </summary>
            <param name="layer"> Layer to look for its visibility. </param>
            <returns> True, if the layer exists and it is set to visible, otherwise false. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.SetVisible(Ptv.XServer.Controls.Map.Layers.ILayer,System.Boolean)">
            <summary> Set the visibility of the specified layer. </summary>
            <remarks> The visibility is set for all maps added to the LayerCollection via <see cref="M:Ptv.XServer.Controls.Map.LayerCollection.Register(Ptv.XServer.Controls.Map.MapView)"/>.
            A layer can not be hidden in one map and shown in another one. </remarks>
            <param name="layer"> Layer of which the visibility should be modified. </param>
            <param name="visible"> Flag indicating the (in-)visibility of the layer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.IsSelectableBase(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary> Retrieves if the layer is selectable without taking into account whether it is exclusively
            selectable. </summary>
            <param name="layer"> Layer, which is requested for its selection behavior. </param>
            <returns> True, if the selectable flag is set to true without taking the exclusive selectable flag into
            account.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.IsSelectable(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary> Retrieves if the layer is selectable taking into account whether it is exclusively selectable. </summary>
            <param name="layer"> Layer, which is requested for its selection behavior. </param>
            <returns> True, if the selectable flag is set to true, taking the exclusive selectable flag into account.
            It is false if another layer is marked as exclusive selectable. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.SetSelectable(Ptv.XServer.Controls.Map.Layers.ILayer,System.Boolean)">
            <summary> Sets the selectable flag of the layer, if the layer is not exclusive selectable. </summary>
            <param name="layer"> Layer, which should be modified in its selection behavior. </param>
            <param name="selectable"> If the selectable flag is set to true, the layer selects objects. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.LayerCollection.ExclusiveSelectableLayer">
            <summary> Gets or sets the layer which is the one-and-only selectable layer. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.LayerCollection.LayerAdded">
            <summary>Callback for indicating the insertion of a new layer to this collection.
            This is useful when layer specific callbacks have to be set, for example to indicate a layer's property change.
            </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.LayerCollection.LayerRemoved">
            <summary>Callback for indicating the removal of a layer from this collection.
            It becomes important when layer specific callbacks were set in <see cref="E:Ptv.XServer.Controls.Map.LayerCollection.LayerAdded"/>, 
            and have to be removed now.
            </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.LayerCollection.LayerVisibilityChanged">
            <summary>Callback for indicating the visibility changing. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.LayerCollection.LayerSelectabilityChanged">
            <summary>Callback for indicating the selectability changing. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.LayerCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary> Event handler for a change of the layer collection. Adds and removes the layers to/from the
            internal collections for selectability and visibility due to the change action. </summary>
            <param name="sender"> Sender of the CollectionChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.mapView_IsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the map visibility property. Adds or removes the layers of the map. </summary>
            <param name="sender"> Sender of the IsVisibleChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.LayerNameIsUnique(Ptv.XServer.Controls.Map.Layers.ILayer,System.Int32,System.Int32)">
            <summary> Checks if the layer name of the newly added layer already exists in this map. </summary>
            <param name="layer"> The layer for which we want to check the name. </param>
            <param name="newStartingIndex"> Starting index of the newly inserted elements. </param>
            <param name="newItemCount"> Number of newly inserted elements. </param>
            <returns> Flag which shows if the layer name already exists. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.Clone">
            <summary> Creates a new object that is a copy of the current instance. </summary>
            <returns> A new object that is a copy of this instance. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerCollection.Dispose">
            <summary> Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.LayerChangedEventArgs">
            <summary>Additional argument class for events concerning some changes in the context of an individual layer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerChangedEventArgs.#ctor(Ptv.XServer.Controls.Map.Layers.ILayer)">
            <summary>Constructor needed for defining which layer is addressed concerning its changes. </summary>
            <param name="layer">Layer which changes its properties or is added to/removed from the layer collection.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.LayerChangedEventArgs.#ctor(System.String)">
            <summary>Legacy constructor containing only the name of the layer. </summary>
            <remarks>The property <see cref="P:Ptv.XServer.Controls.Map.LayerChangedEventArgs.Layer"/> remains uninitialized.</remarks>
            <param name="layerName">Name of the layer which was changed one of its properties or is added to /removed from the
            collection list.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.LayerChangedEventArgs.LayerName">
            <summary>Name of the layer.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.LayerChangedEventArgs.Layer">
            <summary>Layer which was changed one of its properties or is added to /removed from the collection list.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.MapRectangle">
            <summary>
            <para>
            For geographical use cases, the type <see cref="T:System.Windows.Rect"/> is insufficient for different reasons.
            Especially the convention, the top value contains a lower coordinate value compared to the bottom
            value, often leads to implementing issues. Therefore, this class provides the compass directions
            as bounding properties directly.
            </para>
            <para>
            Another aspect is the paradigm of a center based reference point (compared to the edge-based format
            of type <see cref="T:System.Windows.Rect"/>).
            </para>
            </summary> 
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.SetValues(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Internal helper for setting all boundary values at once.
            </summary>
            <param name="west">Left boundary.</param>
            <param name="east">Right boundary.</param>
            <param name="south">Lower boundary.</param>
            <param name="north">Upper boundary.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class, by setting all boundaries to an empty state.
            This approach is helpful, when <see cref="T:System.Windows.Point"/> objects are inserted by the Union methods.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class, by copying the boundaries of parameter 
            <paramref name="originalRectangle"/>.
            </summary>
            <param name="originalRectangle">Original rectangle providing all values for the new instance.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Windows.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class, by transforming the location and size of parameter 
            <paramref name="rect"/> into boundaries of the new instance.
            </summary>
            <param name="rect">Rectangle providing the boundaries of the new instance.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Windows.Point)">
            <summary> 
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class, by setting the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.West"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.East"/> boundaries
            to <paramref name="point"/>.X, as well as the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.North"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.South"/> boundaries to <paramref name="point"/>.Y.
            Therefore, the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Width"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Height"/> properties have a value of 0.
            </summary> 
            <param name="point">This point is used for defining the boundaries of the new instance.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Windows.Point,System.Windows.Point)">
            <summary> 
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class. The resulting object represents the smallest rectangle
            containing both points, i.e. both points define the boundaries directly. The ordering of the parameters has no influence on the result.
            </summary> 
            <param name="point1">First point contained in the rectangle.</param>
            <param name="point2">Second point contained in the rectangle.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary> 
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class. The resulting object represents the smallest rectangle
            containing all points provided by the point enumeration, i.e. the new object represents the minimal bounding rectangle
            of the point collection. The ordering of the points inside the enumeration has no influence on the result.
            </summary> 
            <param name="points">Enumeration of points, which are included in the new instance in a minimal way. An enumeration with
            no points results in an empty rectangle.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Windows.Point,System.Windows.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class. The resulting object is defined by the <paramref name="center"/>
            and <paramref name="size"/>parameter. 
            </summary>
            <param name="center">Point defining the center of the rectangle.</param>
            <param name="size">Size defining the width and height of the rectangle.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapRectangle"/> class, by setting the boundaries directly. No checks are made
            for avoiding a lower <paramref name="east"/> value compared to the <paramref name="west"/> value. The same is true for the
            <paramref name="north"/>/<paramref name="south"/> pair.
            </summary>
            <remarks>
            The ordering of the parameters follows the scheme lower horizontal boundary - higher horizontal boundary -
            lower vertical boundary - higher vertical boundary. 
            </remarks>
            <param name="west">West boundary.</param>
            <param name="east">East boundary.</param>
            <param name="south">South boundary.</param>
            <param name="north">North boundary.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.IsEmpty">
            <summary> 
            Gets a value indicating whether the rectangle is empty. This is true,
            if the width or height value is lower 0.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.West">
            <summary>
            Gets or sets the West boundary of the rectangle. The rectangle is empty, if the value is higher than the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.East"/> boundary value.
            No checks are made to avoid a higher value compared to the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.East"/> boundary.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.East">
            <summary>
            Gets or sets the East boundary of the rectangle. The rectangle is empty, if the value is lower than the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.West"/> boundary value.
            No checks are made to avoid a lower value compared to the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.West"/> boundary.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.South">
            <summary>
            Gets or sets the South boundary of the rectangle. The rectangle is empty, if the value is higher than the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.North"/> boundary value.
            No checks are made to avoid a higher value compared to the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.North"/> boundary.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.North">
            <summary>
            Gets or sets the North boundary of the rectangle. The rectangle is empty, if the value is lower than the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.South"/> boundary value.
            No checks are made to avoid a higher value compared to the <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.South"/> boundary.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.SouthWest">
            <summary> 
            Gets the SouthWest point of the rectangle. 
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.SouthEast">
            <summary> 
            Gets the SouthEast point of the rectangle. 
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.NorthWest">
            <summary>
            Gets the NorthWest point of the rectangle. 
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.NorthEast">
            <summary> 
            Gets the NorthEast point of the rectangle. 
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.Width">
            <summary>
            Gets or sets the width of the rectangle. If the width is set, the rectangle's center remains the same.
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.Height">
            <summary>
            Gets or sets the height of the rectangle. If the height is set, the rectangle's center remains the same.
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapRectangle.Center">
            <summary>
            Gets or sets the center of the rectangle. If the rectangle is empty, the point (Double.NaN, Double.NaN) is returned.
            If the center is set to an empty rectangle, the value becomes the new center, the width and height of the rectangle are
            set to 0. If the rectangle was not empty, the center is changed, but the width and height remain unchanged.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Contains(System.Windows.Point)">
            <summary>
            Checks whether the <paramref name="point"/> parameter is within the rectangle, inclusive its edges. 
            </summary> 
            <param name="point">The point which is being tested for containment.</param> 
            <returns>
            If the rectangle is empty, the check always returns false.
            Otherwise it returns true, if the <paramref name="point"/> parameter is within the rectangle, false otherwise.
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Contains(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Checks whether the <paramref name="rect"/> parameter is located completely within the rectangle, inclusive its edges. 
            </summary> 
            <param name="rect">The rectangle which is being tested for containment.</param> 
            <returns>
            If the object is empty, the check always returns false.
            Otherwise, if parameter <paramref name="rect"/> is empty, the check returns true (an empty rectangle is always located in 
            a non-empty rectangle).
            Otherwise it returns true, if the <paramref name="rect"/> is located completely within the rectangle, false otherwise.
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.IntersectsWith(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Checks whether the parameter <paramref name="rect"/> intersects with this rectangle.
            If one edge is coincident, it is considered an intersection. 
            </summary>
            <param name="rect">The rectangle which is being tested for intersection.</param> 
            <returns>Returns true if the MapRect intersects with this rectangle, false otherwise. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Intersect(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> 
            Updates this rectangle to be the intersection of this and parameter <paramref name="rect"/>.
            If either this or <paramref name="rect"/> are empty, the result is empty as well. 
            </summary>
            <param name="rect"> The rect to intersect with this. </param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_BitwiseAnd(Ptv.XServer.Controls.Map.MapRectangle,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Calculates the result of the intersection of <paramref name="rect1"/> and <paramref name="rect2"/>. 
            If one of them is empty, the result is empty as well. 
            </summary>
            <param name="rect1">First rectangle to intersect.</param>
            <param name="rect2">Second rectangle to intersect.</param>
            <returns>The intersected rectangle is returned as a new instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Union(System.Windows.Point)">
            <summary> 
            Updates this rectangle to be the union of this and parameter <paramref name="point"/>. I.e. the rectangle boundaries and the point
            itself are included in the new boundaries.
            If <paramref name="point"/> has Double.IsNaN coordinates, the boundaries remain unchanged. 
            If this is empty, the boundaries are adapted to the point's coordinates (width and height will be 0).
            </summary>
            <param name="point">The point to 'incorporate' into this object. </param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_BitwiseOr(Ptv.XServer.Controls.Map.MapRectangle,System.Windows.Point)">
            <summary>
            Unifies the rectangle <paramref name="rect"/> and <paramref name="point"/>. 
            If <paramref name="point"/> has Double.IsNaN coordinates, the resulting rectangle has the same values as <paramref name="rect"/>. 
            If <paramref name="rect"/> is empty, the boundaries of the resulting rectangle are adapted to the point's coordinates (width and height will be 0).
            </summary>
            <param name="rect">Rectangle of the unification.</param>
            <param name="point">Point to unify.</param>
            <returns>Unified rectangle returned as a new instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Union(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> 
            Updates this rectangle to be the union of this and parameter <paramref name="rect"/>. I.e. the rectangle boundaries of this 
            and <paramref name="rect"/> are included in the new boundaries.
            If <paramref name="rect"/> is empty, the boundaries remain unchanged. 
            If this is empty, the new boundaries are adapted to the <paramref name="rect"/>'s boundaries.
            </summary>
            <param name="rect">The rectangle to 'incorporate' into this object. </param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_BitwiseOr(Ptv.XServer.Controls.Map.MapRectangle,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Unifies both rectangles <paramref name="rect1"/> and <paramref name="rect2"/>. 
            </summary>
            <param name="rect1">First rectangle for unification.</param>
            <param name="rect2">Second rectangle for unification.</param>
            <returns>The unified rectangle is returned as a new instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.TranslateHorizontally(System.Double)">
            <summary> 
            Translates the rectangle horizontally, if it is not empty. The properties <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.West"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.East"/> are changed.
            </summary>
            <param name="translate">Amount of translation, positive values shifts the rectangle eastwards, negative values westwards.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.TranslateVertically(System.Double)">
            <summary> 
            Translates the rectangle vertically, if it is not empty. The properties <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.South"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.North"/> are changed.
            </summary>
            <param name="translate">Amount of translation, positive values shifts the rectangle northwards, negative values southwards.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Translate(System.Double,System.Double)">
            <summary> 
            Translates the rectangle horizontally and vertically, if it is not empty. All boundaries are changed.
            </summary>
            <param name="horizontal">Amount of horizontal translation, positive values shifts the rectangle eastwards, negative values westwards.</param>
            <param name="vertical">Amount of vertical translation, positive values shifts the rectangle northwards, negative values southwards.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_Addition(Ptv.XServer.Controls.Map.MapRectangle,System.Windows.Point)">
            <summary> 
            Translates the rectangle parameter <paramref name="rect"/> horizontally and vertically, if it is not empty. All its boundaries are changed.
            </summary>
            <param name="rect">The rectangle which is the origin of the translate operation.</param>
            <param name="offset">The X-value specifies the amount of horizontal translation, positive values shifts the rectangle eastwards, negative values westwards.
            The Y-value specifies the amount of vertical translation, positive values shifts the rectangle northwards, negative values southwards.</param>
            <returns>The translated object is returned as a new instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.InflateHorizontally(System.Double)">
            <summary>
            Inflates the object horizontally by specifying a factor. The width of the rectangle is multiplied by this factor.
            </summary>
            <param name="inflate">Factor which specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Width"/>.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.InflateVertically(System.Double)">
            <summary>
            Inflates the object vertically by specifying a factor. The height of the rectangle is multiplied by this factor.
            </summary>
            <param name="inflate">Factor which specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Height"/>.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Inflate(System.Double,System.Double)">
            <summary>
            Inflates the object horizontally and vertically by specifying two different factors for each dimension. 
            The width and height of the rectangle is multiplied by these factors.
            </summary>
            <param name="horizontal">Factor which specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Width"/>.</param>
            <param name="vertical">Factor which specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Height"/>.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Inflate(System.Double)">
            <summary>
            Inflates the object horizontally and vertically by specifying one single factor, applied to both dimensions. 
            The width and height of the rectangle is multiplied by this factor.
            </summary>
            <param name="inflate">Factor which specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Width"/> and <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Height"/>.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_Multiply(Ptv.XServer.Controls.Map.MapRectangle,System.Windows.Point)">
            <summary>
            Inflates the object horizontally and vertically by specifying two different factors for each dimension. 
            The width and height of the rectangle is multiplied by these factors.
            </summary>
            <param name="rect">The rectangle which represents the origin the inflate operation.</param>
            <param name="inflate">The X-value specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Width"/>,
            whereas the Y-value specifies the new value of the property <see cref="P:Ptv.XServer.Controls.Map.MapRectangle.Height"/>.</param>
            <returns>The object itself is returned, so it can be reused in the same line of code.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Equals(Ptv.XServer.Controls.Map.MapRectangle,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Compares two MapRectangle instances for object equality.
            </summary>
            <param name='rect1'>The first rectangle to compare.</param> 
            <param name='rect2'>The second rectangle to compare.</param>
            <returns>
            Returns true if the two rectangle instances are exactly equal, false otherwise.
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_Equality(Ptv.XServer.Controls.Map.MapRectangle,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary>
            Compares two rectangle instances for exact equality. 
            </summary>
            <param name='rect1'>The first rectangle to compare.</param>
            <param name='rect2'>The second rectangle to compare.</param> 
            <returns>
            Returns true if the two rectangle instances are exactly equal, false otherwise.
            </returns> 
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.op_Inequality(Ptv.XServer.Controls.Map.MapRectangle,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> 
            Compares two rectangle instances for exact inequality. 
            </summary>
            <param name='rect1'>The first rectangle to compare.</param> 
            <param name='rect2'>The second rectangle to compare.</param> 
            <returns>
            Returns true if the two rectangle instances are exactly unequal, false otherwise.
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Equals(System.Object)">
            <summary>
            Compares this rectangle with the passed in object.
            </summary> 
            <param name='o'>The object to compare to "this".</param> 
            <returns>
            Returns true if the object is an instance of MapRectangle and if it's equal to "this".
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.Equals(Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> 
            Compares this Rect with the passed in object.
            </summary> 
            <param name='value'>The rectangle to compare to "this".</param>
            <returns>
            Returns true if <paramref name="value"/> is equal to "this".
            </returns> 
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapRectangle.GetHashCode">
            <summary> 
            Returns the HashCode for this object.
            </summary> 
            <returns> 
            Returns the HashCode for this object.
            </returns> 
        </member>
        <member name="T:Ptv.XServer.Controls.Map.IToolTipManagement">
            <summary>
            Separate interface of the map control, dedicated to the management of tool tips.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IToolTipManagement.IsEnabled">
            <summary> Enables/disables the management for tool tips. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IToolTipManagement.ToolTipDelay">
            <summary> Reads or writes the value (in [ms]) to delay tool tip display. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.IToolTipManagement.MaxPixelDistance">
            <summary>
            Distance (specified in Pixels) between the current mouse position and a layer object, for which tooltip information should be shown.
            Each layer has to interpolate to its own coordinate format, what is meant by the pixel sized distance.  
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.ToolTipManagement">
            <summary>Object concentrating all functionality relevant for tool tip management.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.IsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.ToolTipDelay">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.MaxPixelDistance">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.ToolTipManagement.#ctor(Ptv.XServer.Controls.Map.Map)">
            <summary>Constructor establishes the relationship to the parent map object. </summary>
            <param name="map">Parent map object</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.ToolTipManagement.StartToolTipTimer(Ptv.XServer.Controls.Map.Map,System.Windows.Input.MouseEventArgs)">
            <summary> Tests if the cursor position has changed. If so, stores the new position and triggers the tool tip timer. </summary>
            <param name="map">Map object needed for position.</param>
            <param name="mouseEventArgs">Mouse event arguments, a null value represents an invalid position.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.IsHitTestOKFunc">
            <summary>Callback for parent map object to indicate that a mouse position can be used for showing a tool tip. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.CreateCustomizedToolTipsFunc">
            <summary>Callback for indicating the rendering of a tool tip. When this callback is set, 
            the default rendering is avoided.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.DestroyCustomizedToolTipsFunc">
            <summary>Callback for indicating the removal of a tool tip. When this callback is set, 
            the default removal operation is avoided.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.ToolTipManagement.ClearToolTip">
            <summary> Removes the latest tool tip created by this layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.FillToolTipMapObjectsFunc">
            <summary>Callback for ordering the tool tip entries from the layers of a map. Commonly the
            map object implements this callback. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.ToolTipManagement.LatestPosition">
            <summary> 
            Stores the latest known position handled by method <see cref="M:Ptv.XServer.Controls.Map.ToolTipManagement.StartToolTipTimer(Ptv.XServer.Controls.Map.Map,System.Windows.Input.MouseEventArgs)"/>. If the mouse position is outside the bounds
             of the map control, its value is null. 
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension">
            <summary>
            Documentation in progress...
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.Lighten(System.Windows.Media.Color,System.Single)">
            <summary>
              This method applies lighting to a color including keeping the transparency.
              For instance, a color that has a lighting factor of 1 applies, appears at its original value.
              A color with a lighting factor of 0.5 appears only half as bright as it was before.
              A color with a lighting factor of 1.5 appears roughly twice as bright as before.
              A color with a lightning factor of 2 appears white.
            </summary>
            <param name="originalColor"> Base color. </param>
            <param name="lightFactor">
             Amount of light applied to the color.
            </param>
            <returns> Lit color. </returns>
            <remarks>
              This routine is very fast. Even when using it in tight loops, it is not possible to 
              measure a significant amount of time spent in this routine (always less than 1 millisecond). Originally
              concerned about the performance of this, a caching mechanism was added, but that slowed things down
              by 2 orders of magnitude.
            </remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.TransformationNotNeeded(System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="lightFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.RealBright(System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="lightFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.ShouldDarken(System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="lightFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.DarkenColor(System.Windows.Media.Color,System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="color"> Documentation in progress... </param>
            <param name="lightFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.LightenColor(System.Windows.Media.Color,System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="color"> Documentation in progress... </param>
            <param name="lightFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.LightenColorExtension.LightenColorComponent(System.Byte,System.Single)">
            <summary> Documentation in progress... </summary>
            <param name="colorComponent"> Documentation in progress... </param>
            <param name="fFactor"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Crosshair">
            <summary> Interaction logic for Crosshair.xaml. </summary>
            <summary>
            Crosshair
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Crosshair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Crosshair"/> class.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Crosshair.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Truck">
            <summary> Interaction logic for Truck.xaml </summary>
            <summary>
            Truck
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Truck.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Truck"/> class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Truck.Color">
            <summary> Gets or sets the color of this truck. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Truck.ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handling a change of the truck color. </summary>
            <param name="d"> Object to change. </param>
            <param name="e"> Event parameters containing the new color. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Truck.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color. This enables animation, styling, binding, etc. . </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Truck.DarkColorProperty">
            <summary> Using a DependencyProperty as the backing store for DarkColor. This enables animation, styling, binding, etc. .</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Truck.LightColorProperty">
            <summary> Using a DependencyProperty as the backing store for LightColor. This enables animation, styling, binding, etc. .</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Truck.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Ball">
            <summary> A ball symbol. </summary>
            <summary>
            Ball
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Ball.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Ball"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Ball.Color">
            <summary>
            Gets or sets the color of this ball.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Ball.Stroke">
            <summary>
            Gets or sets the stroke of this ball.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Ball.ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Documentation in progress... </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Ball.DarkColorProperty">
            <summary>Using a DependencyProperty as the backing store for DarkColor.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Ball.LightColorProperty">
            <summary>Using a DependencyProperty as the backing store for LightColor.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Ball.ColorProperty">
            <summary>Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Ball.StrokeProperty">
            <summary>Using a DependencyProperty as the backing store for Stroke.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Ball.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Cube">
            <summary> Interaction logic for Cube.xaml. </summary>
            <summary>
            Cube
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Cube.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Cube"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Cube.Color">
            <summary>
            Gets or sets the color of this cube.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Cube.Stroke">
            <summary>
            Gets or sets the stroke of this cube.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Cube.ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Documentation in progress... </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Cube.DarkColorProperty">
            <summary> Using a DependencyProperty as the backing store for DarkColorProperty.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Cube.LightColorProperty">
            <summary> Using a DependencyProperty as the backing store for LightColor.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Cube.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Cube.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Cube.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Diamond">
            <summary> Interaction logic for Diamond.xaml. </summary>
            <summary>
            Diamond
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Diamond.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Diamond"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Diamond.Color">
            <summary>
            Gets or sets the color of this diamond.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Diamond.Stroke">
            <summary>
            Gets or sets the stroke of this diamond.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Diamond.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Diamond.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Diamond.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Hexagon">
            <summary> Interaction logic for Hexagon.xaml. </summary>
            <summary>
            Hexagon
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Hexagon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Hexagon"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Hexagon.Color">
            <summary>
            Gets or sets the color of this hexagon.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Hexagon.Stroke">
            <summary>
            Gets or sets the stroke of this hexagon.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Hexagon.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Hexagon.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Hexagon.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Pentagon">
            <summary> Interaction logic for Pentagon.xaml. </summary>
            <summary>
            Pentagon
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pentagon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Pentagon"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Pentagon.Color">
            <summary>
            Gets or sets the color of this pentagon.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Pentagon.Stroke">
            <summary>
            Gets or sets the stroke of this pentagon.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pentagon.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pentagon.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pentagon.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Pin">
            <summary> Interaction logic for Pin.xaml. </summary>
            <summary>
            Pin
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Pin"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Pin.Color">
            <summary>
            Gets or sets the color of this pin.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pin.ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Documentation in progress... </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pin.DarkColorProperty">
            <summary> Using a DependencyProperty as the backing store for DarkColorProperty.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pin.LightColorProperty">
            <summary> Using a DependencyProperty as the backing store for LightColor.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pin.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Pyramid">
            <summary> Interaction logic for Pyramid.xaml. </summary>
            <summary>
            Pyramid
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pyramid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Pyramid"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Pyramid.Color">
            <summary>
            Gets or sets the color of this pyramid.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Pyramid.Stroke">
            <summary>
            Gets or sets the stroke of this pyramid.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pyramid.ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Documentation in progress... </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pyramid.DarkColorProperty">
            <summary> Using a DependencyProperty as the backing store for DarkColorProperty.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pyramid.LightColorProperty">
            <summary> Using a DependencyProperty as the backing store for LightColor.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pyramid.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Pyramid.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Pyramid.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.Star">
            <summary> Interaction logic for Star.xaml. </summary>
            <summary>
            Star
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Star.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.Star"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Star.Color">
            <summary>
            Gets or sets the color of this star.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.Star.Stroke">
            <summary>
            Gets or sets the stroke of this star.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Star.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.Star.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.Star.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.TriangleDown">
            <summary> Interaction logic for TriangleDown.xaml. </summary>
            <summary>
            TriangleDown
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.TriangleDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.TriangleDown"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.TriangleDown.Color">
            <summary>
            Gets or sets the color of this triangle.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.TriangleDown.Stroke">
            <summary>
            Gets or sets the stroke of this triangle.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.TriangleDown.ColorProperty">
            <summary>Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.TriangleDown.StrokeProperty">
            <summary>Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.TriangleDown.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Symbols.TriangleUp">
            <summary> Interaction logic for TriangleUp.xaml. </summary>
            <summary>
            TriangleUp
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.TriangleUp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Symbols.TriangleUp"/> class.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.TriangleUp.Color">
            <summary>
            Gets or sets the color of this triangle.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Symbols.TriangleUp.Stroke">
            <summary>
            Gets or sets the stroke of this triangle.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.TriangleUp.ColorProperty">
            <summary> Using a DependencyProperty as the backing store for Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Symbols.TriangleUp.StrokeProperty">
            <summary> Using a DependencyProperty as the backing store for Stroke Color.  This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Symbols.TriangleUp.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.BingExtensions">
            <summary> Holds extension methods for adding a Microsoft Bing layer to the map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingExtensions.AddBingLayer(Ptv.XServer.Controls.Map.WpfMap,System.String,System.Int32,System.String,Ptv.XServer.Controls.Map.TileProviders.BingImagerySet,Ptv.XServer.Controls.Map.TileProviders.BingMapVersion,System.Boolean,System.Double,System.Windows.Media.Imaging.BitmapImage,System.Windows.Controls.Panel)">
            <summary> Extension method which adds a Microsoft Bing layer to the map. </summary>
            <param name="wpfMap"> The map to add the layer to. </param>
            <param name="name"> The name of the layer. </param>
            <param name="idx"> The index of the layer in the layer hierarchy. </param>
            <param name="bingKey"> The Microsoft Bing key to use. </param>
            <param name="set"> The imagery set to be used. </param>
            <param name="version"> The Microsoft Bing version. </param>
            <param name="isBaseMapLayer"> Specifies if the added layer should act as a base layer. </param>
            <param name="opacity"> The initial opacity of the layer. </param>
            <param name="icon"> The icon of the layer used within the layer gadget. </param>
            <param name="copyrightImagePanel"> The panel where the bing logo should be added. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingExtensions.AddBingLayer(Ptv.XServer.Controls.Map.WpfMap,System.String,System.Int32,System.String,Ptv.XServer.Controls.Map.TileProviders.BingImagerySet,Ptv.XServer.Controls.Map.TileProviders.BingMapVersion,System.Boolean,System.Double,System.Windows.Media.Imaging.BitmapImage)">
            <summary> Extension method which adds a Microsoft Bing layer to the map. </summary>
            <param name="wpfMap"> The map to add the layer to. </param>
            <param name="name"> The name of the layer. </param>
            <param name="idx"> The index of the layer in the layer hierarchy. </param>
            <param name="bingKey"> The Microsoft Bing key to use. </param>
            <param name="set"> The imagery set to be used. </param>
            <param name="version"> The Microsoft Bing version. </param>
            <param name="isBaseMapLayer"> Specifies if the added layer should act as a base layer. </param>
            <param name="opacity"> The initial opacity of the layer. </param>
            <param name="icon"> The icon of the layer used within the layer gadget. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingExtensions.RemoveBingLayer(Ptv.XServer.Controls.Map.WpfMap,System.String)">
            <summary> Extension method which removes a Microsoft Bing layer from the map. </summary>
            <param name="wpfMap"> The map to remove the layer from. </param>
            <param name="name"> The name of the layer to be removed. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider">
            <summary> Tile provider delivering Bing maps images of specified tiles. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.metaInfo">
            <summary> Meta information of the tile provider like minimum and maximum zoom and url. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.#ctor(Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider"/> class. </summary>
            <param name="metaInfo"> Meta information of the tile provider like minimum and maximum zoom and url. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <summary> Retrieves the image of a certain map tile and returns it as image stream. </summary>
            <param name="x"> X coordinate of the tile. </param>
            <param name="y"> Y coordinate of the tile. </param>
            <param name="zoom"> Zoom factor of the tile. </param>
            <returns> Image stream of the specified tile. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.CacheId">
            <summary> Gets the url of the image as string. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.MinZoom">
            <summary> Gets the minimum zoom level of the map where tiles are available. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingTiledProvider.MaxZoom">
            <summary> Gets the maximum zoom level of the map where tiles are available. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.BingImagerySet">
            <summary> Enumeration listing the different map contents which can be requested. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingImagerySet.Aerial">
            <summary> Only an aerial view of the map is delivered. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingImagerySet.AerialWithLabels">
            <summary> Delivers an aerial view together with labels describing towns, streets etc. . </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingImagerySet.Road">
            <summary> Delivers Roads in the bitmap. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.BingMapVersion">
            <summary> Version number of the bing map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingMapVersion.v0">
            <summary> Version 0. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.BingMapVersion.v1">
            <summary> Version 1. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo">
            <summary> Meta information which can be requested for a bing map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.#ctor(Ptv.XServer.Controls.Map.TileProviders.BingImagerySet,Ptv.XServer.Controls.Map.TileProviders.BingMapVersion,System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo"/> class and sets the imagery set, map version and Bing license key. </summary>
            <param name="imagerySet"> Type of map content which is requested. </param>
            <param name="mapVersion"> Map version which is to be used. </param>
            <param name="key"> Microsoft license key for using Bing. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.MinZoom">
            <summary> Gets or sets the minimum zoom level of the bing map where tiles are available. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.MaxZoom">
            <summary> Gets or sets the maximum zoom level of the bing map where tiles are available. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.Key">
            <summary> Gets or sets the Microsoft Bing maps license key. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.ImageUrl">
            <summary> Gets or sets the url of the map image. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.LogoUri">
            <summary> Gets or sets the uri of the logo. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.BingMetaInfo.ImageUrlSubDomains">
            <summary> Gets or sets the set of subdomains of the image url. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.IMapObject">
            <summary>
            Generic interface to access the information of map object.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.IMapObject.Id">
            <summary>
            The map object's id.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.IMapObject.Layer">
            <summary>
            Names the source of the map object. This could be the name of a map layer or a feature layer theme.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.IMapObject.Point">
            <summary>
            Gets the location of the map object in the corresponding map image.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.IMapObject.LogicalPosition">
            <summary>
            Gets the location of the map object in world coordinates (EPSG:76131).
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.IMapObject.Source">
            <summary>
            Reads the source object that is wrapped by the IMapObject's implementation.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.MapObject">
            <summary>
            Provides a base implementation of IMapObject.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.MapObject.attributes">
            <summary>
            Dictionary that caches the attributes of a map object.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.MapObject.provideAttributes">
            <summary>
            Function that provides attributes of a map object.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.#ctor(System.String,System.String,System.Windows.Point,System.Windows.Point,System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}})">
            <summary>
            Creates and initializes an instance of MapObject.
            </summary>
            <param name="id"></param>
            <param name="layer"></param>
            <param name="point"></param>
            <param name="logicalPosition"></param>
            <param name="attributes"></param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Attributes">
            <summary>
            Used internally to access the attributes of the Feature.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Item(System.String)">
            <summary>Returns value which belongs to the key attribute. </summary>
            <param name="key">Key of the corresponding key/value pair.</param>
            <returns>Value of the corresponding key/value pair.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Id">
            <summary> Identifier of the object. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.LogicalPosition">
            <summary> Logical position of the map object. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Point">
            <summary> Geographical coordinate. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Layer">
            <summary> Layer to which this map object belongs to. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.GetEnumerator">
            <summary> Set of key/value pairs. </summary>
            <returns> Enumeration of key value pairs. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.System#Collections#IEnumerable#GetEnumerator">
            <summary> Set of key/value pairs. </summary>
            <returns> Enumeration of key value pairs. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Count">
            <summary> Number of key/value pairs. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Keys">
            <summary> Enumeration of all available keys. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Values">
            <summary> Enumeration of all available values. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.MapObject.Source">
            <summary> Source of the map object. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.ToString">
            <summary> Textual representation of the whole object. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.ContainsKey(System.String)">
            <summary> Checks if value exists for specified key. </summary>
            <param name="key"> Key to look for. </param>
            <returns> Indicates if a value exists for the specified key. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.MapObject.TryGetValue(System.String,System.String@)">
            <summary> Tries to get a value for the specified key. </summary>
            <param name="key"> Key to look for. </param>
            <param name="value">If available, value belonging to the key. </param>
            <returns> Indicates if a value exists for the specified key. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.TileMapRectangle">
            <summary> Represents a MapRectangle corresponding to a tile. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.TileMapRectangle.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates and initializes an instance of MapRectangleByTile.
            </summary>
            <param name="x">X-coordinate of the tile</param>
            <param name="y">Y-coordinate of the tile</param>
            <param name="z">Z-coordinate of the tile</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.TileMapRectangle.X">
            <summary>
            Gets the x-coordinate of the tile.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.TileMapRectangle.Y">
            <summary>
            Gets the y-coordinate of the tile.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.TileMapRectangle.Z">
            <summary>
            Gets the z-coordinate of the tile.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider">
            <summary> PtvAjaxTiledProvider retrieves a xMapServer-Bitmap using the Ajax Servlet. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.m_Url">
            <summary> Url of the tile server. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.m_AdditionalParam">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.minX">
            <summary> Minimum value for x coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.maxX">
            <summary> Maximum value for x coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.minY">
            <summary> Minimum value for y coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.maxY">
            <summary> Maximum value for y coordinates. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider"/> class. </summary>
            <param name="url"> Url of the tile server. </param>
            <param name="additionalParam"> The additional parameters which should be relayed to the xMapServer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.GetImageUri(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary> Retrieves the uri of the map image. </summary>
            <param name="left"> Left bound of the displayed map section. </param>
            <param name="top"> Top bound of the displayed map section. </param>
            <param name="right"> Right bound of the displayed map section. </param>
            <param name="bottom"> Bottom bound of the displayed map section. </param>
            <param name="width"> Width of the displayed map section. </param>
            <param name="height"> Height of the displayed map section. </param>
            <returns> The uri of the image. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.GetImageStreamInternal(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary> The internal function for reading the image stream. </summary>
            <param name="left"> Left bound of the displayed map section. </param>
            <param name="top"> Top bound of the displayed map section. </param>
            <param name="right"> Right bound of the displayed map section. </param>
            <param name="bottom"> Bottom bound of the displayed map section. </param>
            <param name="width"> Width of the displayed map section. </param>
            <param name="height"> Height of the displayed map section. </param>
            <returns> The map image as stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.GetImageStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary> The function which reads the image stream and adapts the request parameters. </summary>
            <param name="left"> Left bound of the displayed map section. </param>
            <param name="top"> Top bound of the displayed map section. </param>
            <param name="right"> Right bound of the displayed map section. </param>
            <param name="bottom"> Bottom bound of the displayed map section. </param>
            <param name="width"> Width of the displayed map section. </param>
            <param name="height"> Height of the displayed map section. </param>
            <returns> The map image as a stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.ReadURL(System.String)">
            <summary> Reads the content from a given url and returns it as a stream. </summary>
            <param name="url"> Url where to lad the data from. </param>
            <returns> The content as a stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.CacheId">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.MinZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.PtvAjaxTiledProvider.MaxZoom">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider">
            <summary> Provider loading tiled bitmaps from a given url. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.ReadURL(System.String)">
            <summary> Reads the content from a given url and returns it as a stream. </summary>
            <param name="url"> The url to look for. </param>
            <returns> The url content as a stream. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.RequestBuilderDelegate">
            <summary> Gets or sets a method which can be used to build a request. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.RequestBuilder">
            <summary> Method building a request by the given tile information. </summary>
            <param name="x"> X coordinate of the requested tile. </param>
            <param name="y"> Y coordinate of the requested tile. </param>
            <param name="level"> Zoom level of the requested tile. </param>
            <returns> The request string. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.CacheId">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.MinZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.MaxZoom">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.RemoteTiledProvider.logger">
            <summary> Logging restricted to this class. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.MapUpdateDelegate">
            <summary>
            Definition of a delegate handling map updates.
            </summary>
            <param name="map">Map returned by xMap Server.</param>
            <param name="size">Size of the requested image.</param>
            <remarks>Delegate is always called twice; with map set to null, if an update begins 
            and with the resulting Map object, when an update ends.</remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.XMapMode">
            <summary> Mode of the xMap layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapMode.Background">
            <summary> The xMap layer is a background layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapMode.Town">
            <summary> The xMap layer shows towns. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapMode.Street">
            <summary> The xMap layer shows streets. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapMode.Custom">
            <summary> The xMap layer is a custom layer. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.IObjectInfoProvider">
            <summary>Setting a delegate handling map updates. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.TileProviders.IObjectInfoProvider.MapUdpate">
            <summary> MapUpdate event. See remarks on <see cref="T:Ptv.XServer.Controls.Map.TileProviders.MapUpdateDelegate"/>. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider">
            <summary> A provider implementation for the xMapServer delivering tiled bitmaps. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.logger">
            <summary> Logging restricted to this class. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.url">
            <summary> URL of the xMap server. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.mode">
            <summary> Mode of the xMap layer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.User">
            <summary> The user name for basic Http authentication. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.Password">
            <summary> The password for basic Http authentication. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.#ctor(System.String,System.String,System.String,Ptv.XServer.Controls.Map.TileProviders.XMapMode)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider"/> class with the given connection
            string and mode. </summary>
            <param name="url"> The url to connect to the xMap server. </param>
            <param name="user">User name of the XMap authentication.</param>
            <param name="password">Password of the XMap authentication.</param>
            <param name="mode"> The mode of this tiled provider instance. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.#ctor(System.String,Ptv.XServer.Controls.Map.TileProviders.XMapMode)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider"/> class with the given connection
            string and mode. </summary>
            <param name="url"> The url to connect to the xMap server. </param>
            <param name="mode"> The mode of this tiled provider instance. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.CustomCallerContextProperties">
            <summary> Customized caller constext properties. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.CustomXMapLayers">
            <summary> Gets or sets the custom layers of the xMapServer. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.ReferenceTime">
            <summary> Gets or sets the reference time for feature layers. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.TryGetStreamInternal(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProvider.CacheId">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase">
            <summary> Provider delivering bitmap tiles which are requested from an xMapServer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.minX">
            <summary> Minimum x coordinate value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.maxX">
            <summary> Maximum x coordinate value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.minY">
            <summary> Minimum y coordinate value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.maxY">
            <summary> Maximum y coordinate value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.earthRadius">
            <summary> Constant value for the earth radius used in calculations. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.earthHalfCircum">
            <summary> Constant value for the half earth circumference used in calculations. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.needsTransparency">
            <summary> Flag indicating whether the background is to be set to a transparent color. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.SaveAndConvert(System.Drawing.Bitmap)">
            <summary> Saves an image in a stream and returns this stream. </summary>
            <param name="image"> The image to process. </param>
            <returns> The image as stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.TileToPtvMercatorAtZoom(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary> Converts the tile position to PTV Mercator coordinates respecting the zoom factor. </summary>
            <param name="tileX"> X position of the tile. </param>
            <param name="tileY"> Y position of the tile. </param>
            <param name="zoom"> Zoom factor of the tile. </param>
            <param name="xMin"> Minimum x value of the returned map rectangle. </param>
            <param name="yMin"> Minimum y value of the returned map rectangle. </param>
            <param name="xMax"> Maximum x value of the returned map rectangle. </param>
            <param name="yMax"> Maximum y value of the returned map rectangle. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.ContextKey">
            <summary> Gets or sets the context key. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.GetStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary> Retrieves the image stream for a certain map rectangle. </summary>
            <param name="left"> Left coordinates. </param>
            <param name="top"> Top coordinates. </param>
            <param name="right"> Right coordinates. </param>
            <param name="bottom"> Bottom coordinates. </param>
            <param name="width"> Width of the image. </param>
            <param name="height"> Height of the image. </param>
            <param name="border"> Border width. </param>
            <param name="mapObjects"> Set of map objects. </param>
            <returns> The image as a stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.GetStreamInternal(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary> Retrieves the map image from the xMapServer and returns it as a stream. </summary>
            <param name="left"> Left coordinates. </param>
            <param name="top"> Top coordinates. </param>
            <param name="right"> Right coordinates. </param>
            <param name="bottom"> Bottom coordinates. </param>
            <param name="width"> Width of the image. </param>
            <param name="height"> Height of the image. </param>
            <param name="mapObjects"> Set of map objects. </param>
            <returns> The map image as stream. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.CustomProfile">
            <summary> Gets or sets the custom profile of the xMapServer. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.TryGetStreamInternal(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary> Retrieves the map image from the xMapServer as stream. </summary>
            <param name="left"> Left coordinates. </param>
            <param name="top"> Top coordinates. </param>
            <param name="right"> Right coordinates. </param>
            <param name="bottom"> Bottom coordinates. </param>
            <param name="width"> Width of the image. </param>
            <param name="height"> Height of the image. </param>
            <param name="mapObjects"> Set of map objects. </param>
            <returns> The map image as stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.GetImageStream(System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.CacheId">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.MinZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.MaxZoom">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.GetImageStream(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary> Retrieves the image stream. </summary>
            <param name="left"> Left coordinate. </param>
            <param name="top"> Top coordinate. </param>
            <param name="right"> Right coordinate. </param>
            <param name="bottom"> Bottom coordinate. </param>
            <param name="width"> Width of the image. </param>
            <param name="height"> Height of the image. </param>
            <returns> The image as a stream. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.GetImageStreamAndMapObjects(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Ptv.XServer.Controls.Map.TileProviders.IMapObject}@)">
            <summary> Retrieves the image stream and the corresponding map objects belonging to the returned map image. </summary>
            <param name="left"> Left coordinate. </param>
            <param name="top"> Top coordinate. </param>
            <param name="right"> Right coordinate. </param>
            <param name="bottom"> Bottom coordinate. </param>
            <param name="width"> Width of the image. </param>
            <param name="height"> Height of the image. </param>
            <param name="mapObjects">Set of map objects belonging to the map image. These objects can be used to provide tool tips in an interactive map.</param>
            <returns> The image as a stream. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.Factor">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.OverlapFactor">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.TileProviders.XMapTiledProviderBase.Border">
            <summary> Gets or sets the additional border size for a tile. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.XMapWSServiceImpl">
            <summary>
            Class which wraps the xServer web proxy and implements <see cref="T:xserver.IXMapWSBinding"/> interface.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.XMapWSServiceImpl.#ctor(System.String)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.TileProviders.XMapWSServiceImpl"/> class. </summary>
            <param name="url"> The url of the xMapServer. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.TileProviders.TileExceptionHandler">
            <summary> Exception handler for tile servers. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.TileProviders.TileExceptionHandler.RenderException(System.Exception,System.Int32,System.Int32)">
            <summary> Builds a bitmap tile which shows the occurred exception. </summary>
            <param name="exception"> The exception which occurred. </param>
            <param name="width"> Width of the tile. </param>
            <param name="height"> Height of the tile. </param>
            <returns> The exception bitmap as stream. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping">
            <summary>
            <para>
            Cohen-Sutherland clipping - initially taken from 
            http://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland.
            </para>
            <para>
            Slightly modified to incorporate the .Net data types 
            System.Windows.Rect and System.Windows.Point.
            </para>
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.INSIDE">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.LEFT">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.RIGHT">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.BOTTOM">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.TOP">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.ComputeOutCode(System.Windows.Rect,System.Windows.Point)">
            <summary> Compute the bit code for a point using the given clip rectangle. </summary>
            <param name="r"> Clip rectangle. </param>
            <param name="p"> Point to compute the bit code for. </param>
            <returns> The bit code. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.CohenSutherlandClipping.Clip(System.Windows.Rect,System.Windows.Point@,System.Windows.Point@)">
            <summary> Cohen–Sutherland clipping algorithm; clips the line specified by p0 to p1
            against the clipping rectangle specified by clipRect. </summary>
            <param name="clipRect"> Clipping rectangle. Be sure that the rectangle 
            satisfies the conditions left &lt;= right and top &lt;= bottom. </param>
            <param name="p0"> Line start point. </param>
            <param name="p1"> Line end point. </param>            
            <returns> Boolean value showing whether the line is visible in the rectangle (true) or not (false). </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineReductionClipping">
            <summary> This class can be used to clip polylines to a given rectangle. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.ClipPolylineReducePoints``2(System.Windows.Size,System.Windows.Rect,System.Collections.Generic.ICollection{``1},System.Func{``1,System.Windows.Point},System.Action{``0,System.Windows.Point})">
            <summary>
            Clips the given polyline to the given clipping region. Using the specified viewport extents, this
            routine also eliminates duplicate points that would otherwise occur after the viewport transformation.
            </summary>
            <typeparam name="P"> Output polyline type. </typeparam>
            <typeparam name="T"> Input point type. </typeparam>
            <param name="sz"> Viewport extents. </param>
            <param name="rc"> Logical clipping rectangle. </param>
            <param name="polyline"> Input polyline. </param>
            <param name="convPnt"> Function converting an input point of type T to an System.Windows.Point. </param>
            <param name="addPnt"> Procedure adding a System.Windows.Point to the resulting polyline of type P. </param>
            <returns> The reduced and clipped polyline. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.ClipPolylineReducePoints``2(System.Windows.Size,System.Windows.Rect,System.Collections.Generic.ICollection{``1},System.Func{``1,System.Windows.Point},System.Action{``0,System.Windows.Point},System.Boolean)">
            <summary>
            Clips the given polyline to the given clipping region. Using the specified viewport extents, this
            routine also eliminates duplicate points that would otherwise occur after the viewport transformation.
            </summary>
            <typeparam name="P"> Output polyline type. </typeparam>
            <typeparam name="T"> Input point type. </typeparam>
            <param name="sz"> Viewport extents. </param>
            <param name="rc"> Logical clipping rectangle. </param>
            <param name="polyline"> Input polyline. </param>
            <param name="convPnt"> Function converting an input point of type T to an System.Windows.Point. </param>
            <param name="addPnt"> Procedure adding a System.Windows.Point to the resulting polyline of type P. </param>
            <param name="reductionOnly">Specifies that only the reduction should be performed without clipping.</param>
            <returns> The reduced and optionally clipped polyline. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.ClipPolylineReducePoints``2(System.Windows.Size,System.Windows.Rect,System.Collections.Generic.ICollection{System.Collections.Generic.ICollection{``1}},System.Func{``1,System.Windows.Point},System.Action{``0,System.Windows.Point})">
            <summary>
            Clips the given polylines to the given clipping region. Using the specified viewport extents, this
            routine also eliminates duplicate points that would otherwise occur after the viewport transformation.
            </summary>
            <typeparam name="P"> Output polyline type. </typeparam>
            <typeparam name="T"> Input point type. </typeparam>
            <param name="sz"> Viewport extents. </param>
            <param name="rc"> Logical clipping rectangle. </param>
            <param name="polylines"> Input polylines. </param>
            <param name="convPnt"> Function converting an input point of type T to System.Windows.Point. </param>
            <param name="addPnt"> Procedure adding a System.Windows.Point to the resulting polyline of type P. </param>
            <returns> The reduced and clipped polyline. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.ClipPolylineReducePoints``2(System.Windows.Size,System.Windows.Rect,System.Collections.Generic.ICollection{System.Collections.Generic.ICollection{``1}},System.Func{``1,System.Windows.Point},System.Action{``0,System.Windows.Point},System.Boolean)">
            <summary>
            Clips the given polylines to the given clipping region. Using the specified viewport extents, this
            routine also eliminates duplicate points that would otherwise occur after the viewport transformation.
            </summary>
            <typeparam name="P"> Output polyline type. </typeparam>
            <typeparam name="T"> Input point type. </typeparam>
            <param name="sz"> Viewport extents. </param>
            <param name="rc"> Logical clipping rectangle. </param>
            <param name="polylines"> Input polylines. </param>
            <param name="convPnt"> Function converting an input point of type T to System.Windows.Point. </param>
            <param name="addPnt"> Procedure adding a System.Windows.Point to the resulting polyline of type P. </param>
            <param name="reductionOnly">Specifies that only the reduction should be performed without clipping.</param>
            <returns> The reduced and optionally clipped polyline. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1">
            <summary>
            Class for building a polyline out of several single line snippets. 
            Internally used by the clipping algorithm, this class does all the work 
            of storing and reducing the points passed in from the clipping algorithm.
            </summary>
            <typeparam name="P"> Polyline type. </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.polylineList">
            <summary> The resulting polylines. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.pointReductionThreshold">
            <summary> Threshold used for point reduction. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.differThreshold">
            <summary> Threshold used to check if two points differ. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.polyline">
            <summary> The current polyline, initialized when the first line is appended. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.addPnt">
            <summary> Delegate for adding a point to a polyline of type P. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.last_p1">
            <summary> End point of the last line appended. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.polylineEnd">
            <summary> End point of current polyline. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.#ctor(System.Action{`0,System.Windows.Point},System.Windows.Size)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1"/> class. </summary>
            <param name="addPnt"> Procedure for adding a point to a generic polyline of type P. </param>
            <param name="pointReductionThreshold"> Threshold used for point reduction when adding points. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.Append(System.Windows.Point,System.Boolean,System.Windows.Point,System.Boolean)">
            <summary>
            Appends the line specified by p0 and p1 to the polyline. The given points are added only if 
            necessary; that is, if their corresponding pixel coordinates differ from the pixel coordinates 
            of the tail of the polyline. Setting either force_p0 or force_p1 to true forces the points to be 
            added without further checks.
            </summary>
            <param name="p0"> Start point. </param>
            <param name="force_p0"> Specifies if p0 is to be added without further checks. </param>
            <param name="p1"> End point. </param>
            <param name="force_p1"> Specifies if p1 is to be added without further checks. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.Polyline">
            <summary> Gets the resulting polylines, after appending several single lines using Append. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.AppendCheck">
            <summary> Flags used for checkAppend. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.AppendCheck.EvaluateThreshold">
            <summary> Evaluate a given threshold to decide if a point should be added to the polyline. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.AppendCheck.ForceAppend">
            <summary> Append a point without further checks. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.AppendCheck.ForceAppendToNewPolyline">
            <summary> Begin a new polyline and append the point without further checks. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.Append(Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder{`0}.AppendCheck,System.Windows.Size,System.Windows.Point)">
            <summary>
            Appends the given point to the current polyline, also updating the end point of the current polyline. 
            Certain conditions apply before the point is added; see also parameter description.
            </summary>
            <param name="appendCheck"> Flag indicating if the given point is to be added without further 
            checks or if the given threshold is to be evaluated. </param>
            <param name="threshold"> If appendCheck is set to AppendCheck.EvaluateThreshold, the given point must
            differ from the current end point by this threshold before it is added to the polyline. </param>
            <param name="p"> Point to add. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineReductionClipping.PolylineBuilder`1.IsDifferent(System.Windows.Point,System.Windows.Point,System.Windows.Size)">
            <summary> Helper method indicating if the two input points are regarded as different according the provided size threshold. </summary>
            <param name="point1">First of two points to check for threshold difference. </param>
            <param name="point2">Second of two points to check for threshold difference. </param>
            <param name="threshold">Threshold values for x and y coordinates. The difference of both points is compared against these threshold values.</param>
            <returns>True if one of x or y difference is larger than the corresponding threshold value.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.NamespaceDoc">
            <summary>
            <para>
            This namespace contains tool classes for support.
            </para>
            <para>    
            The <see cref="T:Ptv.XServer.Controls.Map.Tools.GeoTransform"/> class contains methods to transform
            from world to map and screen coordinates.
            </para>
            <para>    
            The <see cref="T:Ptv.XServer.Controls.Map.Tools.WkbToGdi"/> and <see cref="T:Ptv.XServer.Controls.Map.Tools.WkbToWpf"/> classes contain methods
            to convert an OGC well-known-binary byte array to GDI and WPF geometry types.
            </para>
            <para>    
            The <see cref="T:Ptv.XServer.Controls.Map.Tools.LineReductionClipping"/> class can be used to reduce the
            number of points for complex line string. This can be used to display
            large routes for the vector layer.
            </para>
            <para>   
            The <see cref="T:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1"/> class can be used
            to implement a clustering mechanism for a large amount of map locations.
            </para>
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.GeoTransform">
            <summary> Native class performing transformations of different coordinate formats. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.TileXYToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary> Converts tile XY coordinates into a QuadKey at a specified level of detail. </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.IsValidGeoCoordinate(System.Windows.Point)">
            <summary> Check if the coordinates of the input point have valid values (i.e. unequal zero and not NaN). </summary>
            <param name="p">Point to be checked if x and y are valid.</param>
            <returns>False if one the coordinates are NaN or both coordinates are equal zero.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.TileToWebMercatorAtZoom(System.Int32,System.Int32,System.Int32)">
            <summary> Envelope rectangle of a certain tile, specified by x- and y-position and zoom level. </summary>
            <param name="tileX">X-position of a tile.</param>
            <param name="tileY">Y-position of a tile.</param>
            <param name="zoom">Zoom level.</param>
            <returns>Envelope rectangle of the specified tile, specified in Web Mercator coordinates (srid = 3857).</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.TileToPtvMercatorAtZoom(System.Int32,System.Int32,System.Int32)">
            <summary> Envelope rectangle of a certain tile, specified by x- and y-position and zoom level. </summary>
            <param name="tileX">X-position of a tile.</param>
            <param name="tileY">Y-position of a tile.</param>
            <param name="zoom">Zoom level.</param>
            <returns>Envelope rectangle of the specified tile, specified in PTV-internal Mercator coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.TileToPtvSmartUnitAtZoom(System.Int32,System.Int32,System.Int32)">
            <summary> Envelope rectangle of a certain tile, specified by x- and y-position and zoom level. </summary>
            <param name="tileX">X-position of a tile.</param>
            <param name="tileY">Y-position of a tile.</param>
            <param name="zoom">Zoom level.</param>
            <returns>Envelope rectangle of the specified tile, specified in PTV-internal SmartUnit coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.WGSToPtvMercator(System.Double)">
            <summary> Transforms a distance value given in WGS format to the PTV-internal Mercator format. </summary>
            <param name="distance"> Distance given by two points in WGS format. </param>
            <returns> Distance value given in PTV-internal Mercator format. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.WGSToPtvMercator(System.Windows.Point)">
            <summary> Transforms a point given in WGS format to the PTV-internal Mercator format. </summary>
            <param name="point">Point containing WGS coordinates.</param>
            <returns>Transformed point containing coordinates in PTV-internal Mercator format.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.PtvMercatorToWGS(System.Windows.Point)">
            <summary> Transforms a point given in PTV-internal Mercator format to the WGS format. </summary>
            <param name="point">Point containing PTV-internal Mercator coordinates.</param>
            <returns>Transformed point containing coordinates in WGS format.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.LatLonToString(System.Double,System.Double,System.Boolean)">
            <summary> Converts latitude/longitude coordinates to a textual representation. </summary>
            <param name="lat"> Latitude of the coordinate. </param>
            <param name="lon"> Longitude of the coordinate. </param>
            <param name="padZeroes"> If true the latitude and longitude degrees are padded with zeroes. </param>
            <returns> Textual representation of the input coordinates in a grad/min/sec format. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.LatLonToString(System.Double,System.Double)">
            <summary> Converts latitude/longitude coordinates to a textual representation. </summary>
            <param name="lat">Latitude of the coordinate.</param>
            <param name="lon">Longitude of the coordinate.</param>
            <returns>Textual representation of the input coordinates in a grad/min/sec format.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.Transform(System.Windows.Point,System.String,System.String)">
            <summary>
            Transforms a point of the given reference system to a point of another reference system.
            </summary>
            <param name="p">The point to transform.</param>
            <param name="sourceSrid">The current reference system.</param>
            <param name="destSrid">The desired reference system.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.GetTransform(System.String,System.String)">
            <summary>
            Gets a transformation function for a point.
            </summary>
            <param name="sourceSrid">The current reference system.</param>
            <param name="destSrid">The desired reference system.</param>
            <returns>The transformation.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.TransformProj4(System.String,System.String)">
            <summary>
            Gets a transformation function for a point using proj4.
            </summary>
            <param name="sourceSrid"> The current reference system. </param>
            <param name="destSrid"> The desired reference system. </param>
            <returns> The transformation. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Logger">
            <summary>
            Helper class which extends the System.Diagnostics.TraceSource class by an own customized layout
            of the messages. For example, a time stamp is added and unnecessary information (event id) is
            removed.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Logger.#ctor(System.String)">
            <summary> Constructor initializes the incorporated TraceSource instance. </summary>
            <param name="name"> Name for the TraceSource instance. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Logger.Writeline(System.Diagnostics.TraceEventType,System.String)">
            <summary> Writes a message to each listener (including an additional new line), if event type is not filtered. </summary>
            <param name="eventType"> Level of logging, which may result in a filtering of this message. </param>
            <param name="message"> Text which should be logged. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Logger.Write(System.Diagnostics.TraceEventType,System.String)">
            <summary> Writes a message to each listener (without an additional new line), if event type is not filtered. </summary>
            <param name="eventType"> Level of logging, which may result in a filtering of this message. </param>
            <param name="message"> Text which should be logged. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2">
            <summary> Helper class providing an observable dictionary which sends notifications on add, remove and change. </summary>
            <typeparam name="TKey"> Type of the entry keys. </typeparam>
            <typeparam name="TValue"> Type of the entry values. </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.dictionary">
            <summary> Internally hold dictionary. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.CollectionChanged">
            <summary> The event which is sent on a change. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. Simple constructor of the ObservableDictionary class taking no parameters. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. </summary>
            <param name="copyDictionary"> The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2"/>. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use
            when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor(System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2"/> can contain.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. </summary>
            <param name="copyDictionary"> The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2"/>. </param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use
            when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2"/> class. </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2"/> can contain.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use
            when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Add(`0,`1)">
            <summary> Adds a new key value pair to the dictionary. </summary>
            <param name="key"> Key of the key value pair to add. </param>
            <param name="value"> Value of the key value pair to add. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Remove(`0)">
            <summary> Removes a certain item from the dictionary. </summary>
            <param name="key"> Key of the item to remove. </param>
            <returns> True if the item has been found and removed successfully. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Item(`0)">
            <summary> Finds the value matching with a given key. </summary>
            <param name="key"> Key of the item to find. </param>
            <returns> Value of the item to find. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary> Adds a key value pair to the dictionary. </summary>
            <param name="item"> Item to add. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Clear">
            <summary> Clears the dictionary and removes all items. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary> Removes a given item from the dictionary. </summary>
            <param name="item"> Item to remove. </param>
            <returns> True if the item has been found and removed successfully. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.ContainsKey(`0)">
            <summary><see cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)"/></summary>
            <param name="key"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Keys">
            <summary> Gets the collection of keys in the dictionary. See <see cref="P:System.Collections.Generic.Dictionary`2.Keys"/>. </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.TryGetValue(`0,`1@)">
            <summary><see cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)"/></summary>
            <param name="key"> Documentation in progress... </param>
            <param name="value"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Values">
            <summary> Gets the collection of values in the dictionary. See <see cref="P:System.Collections.Generic.Dictionary`2.Values"/>. </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary><see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/></summary>
            <param name="item"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary><see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/></summary>
            <param name="array"> Documentation in progress... </param>
            <param name="arrayIndex"> Documentation in progress... </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.Count">
            <summary> Gets the count of elements in the dictionary. See <see cref="P:System.Collections.Generic.Dictionary`2.Count"/>. </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.IsReadOnly">
            <summary> Gets a value indicating whether the dictionary is observable. See <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>. </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.GetEnumerator">
            <summary><see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/></summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ObservableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary><see cref="M:System.Collections.Generic.Dictionary`2.GetEnumerator"/></summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage">
            <summary>
            Represents an image in 32bpp ARGB format.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.argbValues">
            <summary>
            the images pixels
            <br />
            Four bytes represent on pixel, bytes ordered this way (this predetermined!): 
            [pixelIndex+0] > blue, [pixelIndex+1] > green, [pixelIndex+2] > red, [pixelIndex+3] > alpha. 
            <br />
            Pixel (0|0) starts at index 0.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.interpolationLevel">
            <summary>
            the interpolation mode to use when accessing pixels
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.#ctor(System.Drawing.Size,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Creates and initializes an ArgbImage.
            </summary>
            <param name="size">The size of the image.</param>
            <param name="mode">Controls interpolation when reading pixels.</param>
            <remarks>Image will be made up of fully transparent black pixels.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.#ctor(System.Int32,System.Int32,System.Byte[],System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Creates and initializes an ArgbImage.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="argbValues">The image's pixels. May be null.</param>
            <param name="mode">Controls interpolation when reading pixels.</param>
            <remarks>If argbValues is null, image will be made up of fully transparent black pixels. 
            If argbValues is non-null, the array length must equal width*height*4.
            </remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.FromImage(System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Creates and initializes an ArgbImage from a given System.Drawing.Image.
            </summary>
            <param name="image">The image to create the ArgbImage from.</param>
            <param name="mode">Controls the interpolation mode when accessing pixels.</param>
            <returns>The created ArgbImage.</returns>
            <remarks>If the given image is not a bitmap or does not equal the pixel format 
            PixelFormat.Format32bppArgb, an additional conversion step is applied to turn the 
            image into a 32bpp ARGB bitmap.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.FromImage(System.Drawing.Bitmap,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Creates and initializes an ArgbImage from a given Bitmap.
            </summary>
            <param name="bmp">The bitmap to create the ArgbImage from.</param>
            <param name="mode">Controls the interpolation mode when accessing pixels.</param>
            <returns>The created ArgbImage.</returns>
            <remarks>If the pixel format of the given bitmap is not PixelFormat.Format32bppArgb, an
            additional conversion step applies to turn the image into a 32bpp ARGB bitmap.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.ValidIndex(System.Int32,System.Int32)">
            <summary>
            Tests if a given point lies within the image.
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.GetIndex(System.Int32,System.Int32)">
            <summary>
            Determines the ARGB buffer index of a pixel, given its location.
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <returns>The pixels index.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.GetNearestColor(System.Double,System.Double)">
            <summary>
            Determines the nearest color, given the location of a pixel.
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <returns>Nearest color or "transparent white" for invalid locations.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.SetNearestColor(System.Double,System.Double,System.UInt32)">
            <summary>
            Set the color of the nearest pixel, given its location.
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <param name="value">color value</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.BicubicInterpolationKernel(System.Double)">
            <summary>
            Kernel function of the bicubic interpolation.
            </summary>
            <param name="distance">The distance to a position.</param>
            <returns>Kernel value.</returns>
            <remarks><see href="http://www.engr.mun.ca/~baxter/Publications/ImageZooming.pdf"/> was very 
            helpful to make the color interpolation produce proper results.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Interpolate(System.Int32,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Core interpolation function that determines an interpolated color given the index of the (left|top) point 
            of the block to process and the values of interpolation kernel in x- and y-direction.
            </summary>
            <param name="idx0">Index of the left, top point</param>
            <param name="interpolationKernelH">Values of the interpolation kernel in x-direction</param>
            <param name="interpolationKernelV">Values of the interpolation kernel in y-direction</param>
            <returns>Interpolated color</returns>
            <remarks><see href="http://www.engr.mun.ca/~baxter/Publications/ImageZooming.pdf"/> was very 
            helpful to make the color interpolation produce proper results.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.GetColor(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Gets the color of a pixel using color interpolation.
            </summary>
            <param name="x">x-coordinate of the pixel to get the color of.</param>
            <param name="y">y-coordinate of the pixel to get the color of.</param>
            <param name="floorX">Conveniently specifies the value of Math.Floor(x).</param>
            <param name="floorY">Conveniently specifies the value of Math.Floor(y).</param>
            <returns>The color of the pixel or "transparent white" if the location is invalid.</returns>
            <remarks>Uses either bicubic interpolation, bi-linear interpolation or nearest color interpolation, 
            depending on the given coordinates.<br/>
            <see href="http://www.engr.mun.ca/~baxter/Publications/ImageZooming.pdf"/> 
            was very helpful to make the color interpolation produce proper results.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Item(System.Double,System.Double)">
            <summary> Reads or writes the color of a pixel. </summary>
            <param name="x"> x-coordinate of the pixel location. </param>
            <param name="y"> y-coordinate of the pixel location. </param>
            <returns>The color of the pixel or "transparent white" if the location is invalid.</returns>
            <remarks>Uses bicubic interpolation when reading colors. When settings colors, changes the nearest pixel.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Item(System.Drawing.PointF)">
            <summary>
            Reads or writes the color of a pixel.
            </summary>
            <param name="p">Pixel location.</param>
            <returns>The color of the pixel or "transparent white" if the location is invalid.</returns>
            <remarks>Uses bicubic interpolation when reading colors. When settings colors, changes the nearest pixel.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Item(System.Windows.Point)">
            <summary>
            Reads or writes the color of a pixel.
            </summary>
            <param name="p">Pixel location.</param>
            <returns>The color of the pixel or "transparent white" if the location is invalid.</returns>
            <remarks>Uses bicubic interpolation when reading colors. When settings colors, changes the nearest pixel.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Stream">
            <summary> Returns an image stream for further processing. </summary>
            <remarks> The stream returned will contain a 32bpp png image, including alpha. </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Width">
            <summary> Determines the width of the image. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage.Height">
            <summary> Determines the height of the image. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.Crc">
            <summary>
            Code for crc calculation, initially taken from here:
            http://www.w3.org/TR/PNG-CRCAppendix.html
            
            TODO: could we use .NET's crc implementation instead of this?
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Crc.update_crc(System.UInt32,System.Byte[],System.Int64,System.Int64)">
            <summary> Update a running CRC with the bytes buf[0..len-1].
            The CRC should be initialized to all 1's, and the transmitted value is the 1's complement of the final running CRC (see
            method <see cref="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Crc.crc(System.Byte[],System.Int64,System.Int64)"/>)). </summary>
            <param name="crc">Cyclic redundancy check value.</param>
            <param name="buf">Buffer of image bytes.</param>
            <param name="offset">Where to start in buf. </param>
            <param name="length">Number of bytes in buf. </param>
            <returns>Final cyclic redundancy check value. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Crc.crc(System.Byte[],System.Int64,System.Int64)">
            <summary> Return the CRC of the bytes buf[0..len-1]. </summary>
            <param name="buf">Buffer of image bytes.</param>
            <param name="offset">Where to start in buf. </param>
            <param name="length">Number of bytes in buf. </param>
            <returns>Final cyclic redundancy check value. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32">
            <summary>
            Adler-32 checksum calculation, initially taken from here:
            http://www.java2s.com/Code/CSharp/Security/ComputesAdler32checksumforastreamofdata.htm
            
            
            
            ----- original description ------------------------------------------------------------------
            
            Computes Adler32 checksum for a stream of data. An Adler32
            checksum is not as reliable as a CRC32 checksum, but a lot faster to
            compute.
            
            The specification for Adler32 may be found in RFC 1950.
            ZLIB Compressed Data Format Specification version 3.3)
            
            
            From that document:
            
                 "ADLER32 (Adler-32 checksum)
                  This contains a checksum value of the uncompressed data
                  (excluding any dictionary data) computed according to Adler-32
                  algorithm. This algorithm is a 32-bit extension and improvement
                  of the Fletcher algorithm, used in the ITU-T X.224 / ISO 8073
                  standard.
            
                  Adler-32 is composed of two sums accumulated per byte: s1 is
                  the sum of all bytes, s2 is the sum of all s1 values. Both sums
                  are done modulo 65521. s1 is initialized to 1, s2 to zero.  The
                  Adler-32 checksum is stored as s2*65536 + s1 in most-
                  significant-byte first (network) order."
            
             "8.2. The Adler-32 algorithm
            
               The Adler-32 algorithm is much faster than the CRC32 algorithm yet
               still provides an extremely low probability of undetected errors.
            
               The modulo on unsigned long accumulators can be delayed for 5552
               bytes, so the modulo operation time is negligible.  If the bytes
               are a, b, c, the second sum is 3a + 2b + c + 3, and so is position
               and order sensitive, unlike the first sum, which is just a
               checksum.  That 65521 is prime is important to avoid a possible
               large class of two-byte errors that leave the check unchanged.
               (The Fletcher checksum uses 255, which is not prime and which also
               makes the Fletcher check insensitive to single byte changes 0 -
               255.)
            
               The sum s1 is initialized to 1 instead of zero to make the length
               of the sequence part of s2, so that the length does not have to be
               checked separately. (Any sequence of zeroes has a Fletcher
               checksum of zero.)"
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.BASE">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.Value">
            <summary>
            Returns the Adler32 data checksum computed so far.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.#ctor">
            <summary>
            Creates a new instance of the Adler32 class.
            The checksum starts off with a value of 1.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.Reset">
            <summary>
            Resets the Adler32 checksum to the initial value.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.Update(System.Int32)">
            <summary>
            Updates the checksum with a byte value.
            </summary>
            <param name="value">
            The data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.Update(System.Byte[])">
            <summary>
            Updates the checksum with an array of bytes.
            </summary>
            <param name="buffer">
            The source of the data to update with.
            </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            an array of bytes
            </param>
            <param name="offset">
            the start of the data used for this update
            </param>
            <param name="count">
            the number of bytes to use for this update
            </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion">
            <summary>
            Generic helper class that snapshots the position of a memory stream for 
            checksum calculation of the data added afterwards.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion.ForCrc(System.IO.MemoryStream,System.Nullable{System.UInt32})">
            <summary>
            Creates and initializes an ChecksumUpdateRegion instance for 
            CRC checksum calculation implement in the Crc class above.
            </summary>
            <param name="stm">The stream to snapshot.</param>
            <param name="crc">Checksum value to update.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion.ForAdler(System.IO.MemoryStream,Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32)">
            <summary>
            Creates and initializes an ChecksumUpdateRegion instance for 
            adler checksum calculation implement in the Adler32 class above.
            </summary>
            <param name="stm">The stream to snapshot.</param>
            <param name="adler">The Adler32 instance to update.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion.Dispose">
            <summary>
            Dispose the instance. 
            No real implementation required, just a fake.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion.Value">
            <summary>
            Get the current checksum value.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ChecksumUpdateRegion.Bytes">
            <summary>
            Turn the current checksum into a streamable byte array (network byte order).
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions">
            <summary>
            Provides extensions to ArgbImage.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.Write(System.IO.Stream,System.Byte[])">
            <summary>
            Write all the bytes given in the byte array.
            </summary>
            <param name="stm"></param>
            <param name="buf"></param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.EnsureEndianess(System.Byte[],System.Boolean)">
            <summary>
            Ensure the endianess of the encoded number.
            </summary>
            <param name="bytes"></param>
            <param name="bigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.ToBigEndian(System.Byte[])">
            <summary>
            Convert encoded number to big endian byte order.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.ToLittleEndian(System.Byte[])">
            <summary>
            Convert encoded number to little endian byte order.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.GetCrcUpdateRegion(System.IO.MemoryStream,System.Nullable{System.UInt32})">
            <summary>
            Shortcuts ChecksumUpdateRegion.ForCrc.
            </summary>
            <param name="stm"></param>
            <param name="crc"></param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImageExtensions.GetAdlerUpdateRegion(System.IO.MemoryStream,Ptv.XServer.Controls.Map.Tools.Reprojection.Adler32)">
            <summary>
            Shortcuts ChecksumUpdateRegion.ForAdler.
            </summary>
            <param name="stm"></param>
            <param name="adler"></param>
            <returns></returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox">
            <summary>
            Represents the bounding box of an object.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox.MinX">
            <summary> Returns the minimum x-coordinate. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox.MinY">
            <summary> Returns the minimum y-coordinate. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox.MaxX">
            <summary> Returns the maximum x-coordinate. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox.MaxY">
            <summary> Returns the maximum y-coordinate. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle">
            <summary>
            Encapsulates a rectangle. Extends the bounding box with an orientation by defining 
            the bounds of an object through the properties Left, Top, Right and Bottom.    
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.Left">
            <summary> x-coordinate of the left hand side. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.Top">
            <summary> y-coordinate at the top. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.Right">
            <summary> x-coordinate of the right hand side. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.Bottom">
            <summary> y-coordinate at the bottom </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary> Creates and initializes a MapRectangle instance. </summary>
            <param name="left">x-coordinate of the left hand side.</param>
            <param name="top">y-coordinate at the top</param>
            <param name="right">x-coordinate of the right hand side</param>
            <param name="bottom">y-coordinate at the bottom</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.#ctor(Ptv.Components.Projections.Location,Ptv.Components.Projections.Location)">
            <summary> Creates and initializes a MapRectangle instance. </summary>
            <param name="leftTop">Upper left-hand corner.</param>
            <param name="rightBottom">Bottom right-hand corner.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.#ctor(System.Collections.Generic.IEnumerable{Ptv.Components.Projections.Location})">
            <summary>
            Creates and initializes a MapRectangle instance.
            </summary>
            <param name="locations">The set of locations out of which the bounding box that initializes this rectangle will be built.</param>
            <remarks>For setting up the rectangle it is assumed that Left&lt;=Right and Bottom&lt;=Top.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.MinX">
            <inheritdoc />
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.MinY">
            <inheritdoc />
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.MaxX">
            <inheritdoc />
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.MaxY">
            <inheritdoc />
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle.Resize(System.Double)">
            <summary>
            Resizes the area covered by the rectangle. Creates and returns a new rectangle reflecting the changes.
            </summary>
            <param name="f">Resize factor; e.g. 1.05 will resize the area by 5%.</param>
            <returns>Rectangle reflecting the changes.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.IMapService`1">
            <summary> Base interface of a service that delivers map images. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IMapService`1.Crs">
            <summary> Defines the CRS to be used when requesting map images. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.IMapService`1.GetImageStream(`0,System.Drawing.Size)">
            <summary> Loads a map image using the specified bounding box and size. </summary>
            <param name="boundingBox">Requested bounding box, based on the CRS defined by this class.</param>
            <param name="size">Requested image size in pixels.</param>
            <returns> The stream containing the map image. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.IExtendedMapService`1">
            <summary> Extended base interface of a service that delivers map images. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.IExtendedMapService`1.GetImageStream(`0,System.Drawing.Size,System.Drawing.Size@)">
            <summary> Loads a map image using the specified bounding box and size. </summary>
            <param name="boundingBox">Requested bounding box, based on the CRS defined by this class.</param>
            <param name="requestedSize">Requested image size in pixels.</param>
            <param name="effectiveSize">Image size effectively rendered.</param>
            <returns>The stream containing the map image. </returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.IExtendedMapService`1.Limits">
            <summary>
            Optionally defines the limits of a MapService in PTV Mercator (EPSG:76131).
            </summary>
            <remarks>
            An approximated bounding box can be determined using the TransformBoundingBox and ApproximateBoundingBox 
            extensions methods provided of Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.
            </remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService">
            <summary>
            Class encapsulating a service that delivers map images.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.#ctor">
            <summary> Constructor of the abstract base class which encapsulates a service that delivers map images. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.Crs">
            <inheritdoc />
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <inheritdoc />
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size,System.Drawing.Size@)">
            <inheritdoc />
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.MinAlignment">
            <summary>
            Defines the position of (MinX|MinY) in images returned by this service.
            </summary>
            <remarks>
            The alignment is a required parameter when resulting map images must be re-projected. Usually the alignment will 
            be ContentAlignment.BottomLeft, as many rectangles follow the rules "Left &lt; Right" and "Top &gt; Bottom".  
            ContentAlignment.BottomLeft is also the value returned by the default implementation and you usually do not need 
            to change that.
            <br/>
            Unfortunately the alignment cannot be determined dynamically on the client side without knowing how services 
            actually map logical coordinates to pixels. Without services returning the actually rendered map rectangle in 
            their response (as PTV xMap Server e.g. does, as WMS services don't), this value must explicitly be configured 
            for re-projections to work properly.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.MapService.Limits">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions">
            <summary>
            Static class providing some extensions.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.AspectRatio(System.Drawing.SizeF)">
            <summary> Determines the aspect ratio, given a SizeF. </summary>
            <param name="size">Size out of which to determine the aspect ratio.</param>
            <returns>Aspect ratio</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.AspectRatio(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox)">
            <summary> Determines the aspect ratio, given a bounding box. </summary>
            <param name="box">Bounding box out of which to determine the aspect ratio.</param>
            <returns>Aspect ratio.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.Size(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox)">
            <summary> Determines the size of a bounding box. </summary>
            <param name="box">Bounding box to determine the size of.</param>
            <returns>Size of the bounding box.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.Area(System.Windows.Size)">
            <summary> Computes the area, given a Size object. </summary>
            <param name="size">Size out of which to compute the area.</param>
            <returns>Computed area.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.Area(System.Drawing.Size)">
            <summary> Computes the area, given a Size object. </summary>
            <param name="size">Size out of which to compute the area.</param>
            <returns>Computed area.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.Area(System.Drawing.SizeF)">
            <summary> Computes the area, given a SizeF object. </summary>
            <param name="size">Size out of which to compute the area.</param>
            <returns>Computed area.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.EqualsAspect(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox)">
            <summary> Determines if two bounding boxes have the same aspect ratio. </summary>
            <param name="this">First bounding box.</param>
            <param name="other">Second bounding box.</param>
            <returns>True, if the aspect ratio is equal. False otherwise.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Processes the given elements through a given action, either in parallel or in sequence, 
            depending on the requested degree of parallelism.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumT">Elements to process.</param>
            <param name="nDegreeOfParallelism">Requested degree of parallelism. Multi-threading applies for values >= 2.</param>
            <param name="actionT">Action that processes an element.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.CreateImage(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Renders an image filled with a given color.
            </summary>
            <param name="color">Color to fill the image with.</param>
            <param name="width">Width of the image to return.</param>
            <param name="height">Height of the image to return.</param>
            <returns>Rendered image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.CreateImage(System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Renders an image filled with a given color.
            </summary>
            <param name="color">Color to fill the image with.</param>
            <param name="size">Size of the image to return.</param>
            <returns>Rendered image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.CreateImage(System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Renders an image filled with a given color.
            </summary>
            <param name="size">Size of the image to return.</param>
            <param name="color">Color to fill the image with.</param>
            <returns>Rendered image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.StreamPng(System.Drawing.Image)">
            <summary>
            Encodes an image as a PNG returning the PNG data stream.
            </summary>
            <param name="image">Image to encode as PNG.</param>
            <returns>PNG data stream.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.MakeLineString(Ptv.Components.Projections.ICoordinateTransformation,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Helper for generating transformed points on a line (x0,y0) - (x1,y1),
            given the number of points to generate and a coordinate transformation.
            </summary>
            <param name="t">Coordinate transformation to use.</param>
            <param name="x0">x-coordinate of start point</param>
            <param name="y0">y-coordinate of start point</param>
            <param name="x1">x-coordinate of end point</param>
            <param name="y1">y-coordinate of end point</param>
            <param name="n">Number of points to generate.</param>
            <returns>Generated points</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.TransformBoundingBox(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.String,System.String,System.Int32)">
            <summary>
            Transforms a bounding box from one CRS to another returning the resulting BoundingLines structure.
            </summary>
            <param name="boundingBox">Bounding box to transform.</param>
            <param name="sourceCrs">The source CRS.</param>
            <param name="targetCrs">The target CRS.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <returns>BoundingLines structure that corresponds to the bounding box in the target CRS.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.TransformBoundingBox(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,Ptv.Components.Projections.ICoordinateTransformation,System.Int32)">
            <summary>
            Transforms a bounding box from one CRS to another returning the resulting BoundingLines structure.
            </summary>
            <param name="boundingBox">Bounding box to transform.</param>
            <param name="transformation">The transformation that transforms points from the source CRS to the target CRS.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <returns>BoundingLines structure that corresponds to the bounding box in the target CRS.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.ApproximateBoundingBox(Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines,System.Double)">
            <summary>
            Utility extension that provides an approximation of a bounding box given a BoundingLines structure.
            </summary>
            <param name="boundingLines">BoundingLines structure to determine the bounding box for.</param>
            <param name="resizeFactor">An additional factor for resizing the resulting bounding box; &lt;0 for adding an offset based on side line deviations, &gt;0 for simply resizing the resulting box.</param>
            <returns>The transformed bounding box.</returns>
            <remarks>This is extension does not only transform the corner points of a given bounding box but takes into 
            account that the bounds may be distorted when being transformed to another CRS.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.ApproximateBoundingBox(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,Ptv.Components.Projections.ICoordinateTransformation,System.Int32,System.Double)">
            <summary>
            Transforms a bounding box from one CRS to another.
            </summary>
            <param name="boundingBox">Bounding box to transform.</param>
            <param name="transformation">The transformation that transforms points from the source CRS to the target CRS.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <param name="resizeFactor">An additional factor for resizing the resulting bounding box; &lt;0 for adding an offset based on side line deviations, &gt;0 for simply resizing the resulting box.</param>
            <returns>The transformed bounding box.</returns>
            <remarks>This is extension does not only transform the corner points of a given bounding box but takes into 
            account that the bounds may be distorted when being transformed to another CRS.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.MapServiceExtensions.ApproximateBoundingBox(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.String,System.String,System.Int32,System.Double)">
            <summary>
            Transforms a bounding box from one CRS to another.
            </summary>
            <param name="boundingBox">Bounding box to transform.</param>
            <param name="sourceCrs">The source CRS.</param>
            <param name="targetCrs">The target CRS.</param>
            <param name="nSupportingPoints">Number of supporting points to use.</param>
            <param name="resizeFactor">An additional factor for resizing the resulting bounding box; &lt;0 for adding an offset based on side line deviations, &gt;0 for simply resizing the resulting box.</param>
            <returns>The transformed bounding box.</returns>
            <remarks>This is extension does not only transform the corner points of a given bounding box but takes into 
            account that the bounds may be distorted when being transformed to another CRS.</remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines">
            <summary>
            Simple structure describing a bounding box with the four line strings on the left, 
            right, top and bottom side of the box. See remarks.
            </summary>
            <remarks>
            When transforming a bounding box from one CRS to another, the box may get distorted 
            and can no longer be defined by corner points. We use this structure to describe the 
            bounds. All line strings have the same length.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.Left">
            <summary>Left side; from top to bottom.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.Top">
            <summary>Top side; from left to right.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.Right">
            <summary>Right side; from top to bottom.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.Bottom">
            <summary>Bottom side; from left to right.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.LeftTop">
            <summary>Left top corner point.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.AllCoordinatesValid">
            <summary>Checks if all coordinates of all bounding lines are valid.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.RightBottom">
            <summary>Right bottom corner point.</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.LeftDeviation">
            <summary>The x-deviation of the line string on the left side.</summary>
            <remarks>The line can be considered a straight line if the deviation is very small.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.RightDeviation">
            <summary>The x-deviation of the line string on the right side.</summary>
            <remarks>The line can be considered a straight line if the deviation is very small.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.TopDeviation">
            <summary>The y-deviation of the line string on the top side.</summary>
            <remarks>The line can be considered a straight line if the deviation is very small.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.BottomDeviation">
            <summary>The y-deviation of the line string on the bottom side.</summary>
            <remarks>The line can be considered a straight line if the deviation is very small.</remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.BoundingLines.IsRectangular">
            <summary>Checks if the bounding box described by the bounding lines can be considered rectangular.</summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions">
            <summary> Class encapsulating the options for image re-projection. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions.#ctor">
            <summary> Creates and initializes an instance of ReprojectionOptions. </summary>
            <remarks> Sets appropriate parameter defaults. </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions.InterpolationMode">
            <summary> Controls the interpolation mode when re-projecting pixels. </summary>
            <remarks> Defaults to InterpolationMode.Bicubic. </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions.BlockSize">
            <summary> The block size (width/height) for which linear interpolation applies. </summary>
            <remarks>
            Defaults to 32.
            <br />
            Mapping target to source pixels is considered an expensive operation requiring multiple transformations
            on both, pixel and logical coordinates. Being expensive, re-projection uses this mapping only to calculate
            a grid consisting of supporting points, while applying a linear interpolation for intermediate points 
            (point withing a grid block). The parameter blockSize determines both width and height of a single cell.
            </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions.DegreeOfParallelism">
            <summary>
            Specifies, if not null and > 1, that multi-threading should be used during reprojection.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector">
            <summary> An class providing methods for image re-projection. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.#ctor(Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionOptions)">
            <summary> Creates and initializes an instance of ImageReprojector. </summary>
            <param name="reprojectionOptions">The options to use for re-projection. 
            This parameter is optional; see ReprojectionOptions for defaults.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.ReprojectionOptions">
            <summary> Accesses the options that are used for re-projection. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.Reproject(System.IO.Stream,System.Drawing.Size,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Re-projects an image given a mapping function that maps target to source pixels. </summary>
            <param name="stm">The stream containing the source image.</param>
            <param name="size">Determines the size of the resulting image.</param>
            <param name="targetToSource">Mapping function that maps target to source pixels.</param>
            <returns>The stream containing the resulting image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.Reproject(System.Drawing.Image,System.Drawing.Size,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Re-projects an image given a mapping function that maps target to source pixels. </summary>
            <param name="image">The image to re-project.</param>
            <param name="size">Determines the size of the resulting image.</param>
            <param name="targetToSource">Mapping function that maps target to source pixels.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.DrawReprojectGrid(System.IO.Stream,System.Drawing.Size,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Renders the re-projection grid into the given image without performing the actual re-projection.
            Used for debugging purposes.
            </summary>
            <param name="stm">The stream containing the image to re-project.</param>
            <param name="size">Determines the requested image size.</param>
            <param name="targetToSource">Mapping function that maps target to source pixels.</param>
            <returns>The stream containing the resulting image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.DrawReprojectGrid(System.Drawing.Image,System.Drawing.Size,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Renders the re-projection into the given image without performing the actual re-projection.
            Used for debugging purposes.
            </summary>
            <param name="image">The image to re-project.</param>
            <param name="size">Determines the requested image size.</param>
            <param name="targetToSource">Mapping function that maps target to source pixels.</param>
            <returns>The stream containing the resulting image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.StreamImage(System.Drawing.Image)">
            <summary> Writes the bytes of an image into a MemoryStream and returns that stream. </summary>
            <param name="image">Image from which a memory stream should be generated. </param>
            <returns> Memory stream of the image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.GetBlocks(System.Drawing.Size)">
            <summary> Helper that divides the target re-projection area into several blocks. </summary>
            <param name="size">Size of the target area.</param>
            <returns>The generated blocks.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.Reproject(Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock,System.Func{System.Windows.Point,System.Windows.Point},System.Drawing.Size)">
            <summary>
            Performs a linear re-projection into the specified target block.
            <br/>
            Uses the given mapping function only to determine the corresponding corner points in the source image, 
            uses a linear interpolation to determine intermediate points.
            </summary>
            <param name="source">The image to be re-projected.</param>
            <param name="target">The resulting image to be filled.</param>
            <param name="block">The block being targeted.</param>
            <param name="transformTargetToSource">Mapping function that maps target to source pixels.</param>
            <param name="scale">A factor to apply when re-projecting the block. See code comments in Reproject method above, where this parameter is set up.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData">
            <summary>
            Simple internal data structure for storing coordinates and increments 
            as needed by InterpolateBlock for interpolating pixel coordinates.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.x">
            <summary>
            x-coordinate of the current position
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.y">
            <summary>
            y-coordinate of the current position
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.xi">
            <summary>
            x-increment for stepping
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.yi">
            <summary>
            y-increment for stepping
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.op_Increment(Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData)">
            <summary>
            Operator used for stepping the interpolated coordinates.
            </summary>
            <param name="data">InterpolationData instance to step.</param>
            <returns>The very same InterpolationData instance given in the call to the operator.</returns>
            <remarks>
            This operator does not create and step a copy of the given InterpolationData - TODO: should it?
            </remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.Create(Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData,Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData,System.Int32)">
            <summary>
            Creates and initializes an instance of InterpolationData given a start and end position and 
            the number of steps to be taken to interpolate coordinates between them.
            </summary>
            <param name="a">An InterpolationData instance whose current position is used as the start position.</param>
            <param name="b">An InterpolationData instance whose current position is used as the end position.</param>
            <param name="n">The number of steps.</param>
            <returns>InterpolationData instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.InterpolationData.Create(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            Creates and initializes an instance of InterpolationData given a start and end position and 
            the number of steps to be taken to interpolate coordinates between them.
            </summary>
            <param name="a">Start coordinate.</param>
            <param name="b">End coordinate.</param>
            <param name="n">The number of steps.</param>
            <returns>InterpolationData instance.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.UnscaledReprojection(Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Performs a unscaled linear re-projection into the specified target block.
            <br/>
            Uses the given mapping function only to determine the corresponding corner points in the source image, 
            uses a linear interpolation to determine intermediate points.
            </summary>
            <param name="source">The image to be re-projected.</param>
            <param name="target">The resulting image to be filled.</param>
            <param name="block">The block being targeted.</param>
            <param name="transformTargetToSource">Mapping function that maps target to source pixels.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.VerticallyScaledReprojection(Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock,System.Func{System.Windows.Point,System.Windows.Point},System.Int32)">
            <summary>
            Performs a scaled linear re-projection into the specified target block.
            <br/>
            Uses the given mapping function only to determine the corresponding corner points in the source image, 
            uses a linear interpolation to determine intermediate points.
            </summary>
            <param name="source">The image to be re-projected.</param>
            <param name="target">The resulting image to be filled.</param>
            <param name="block">The block being targeted.</param>
            <param name="transformTargetToSource">Mapping function that maps target to source pixels.</param>
            <param name="scaleY">A factor to apply when re-projecting the block. See code comments in Reproject method above, where this parameter is set up.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector.ScaledReprojection(Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ArgbImage,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock,System.Func{System.Windows.Point,System.Windows.Point},System.Drawing.Size)">
            <summary>
            Performs a scaled linear re-projection into the specified target block.
            <br/>
            Uses the given mapping function only to determine the corresponding corner points in the source image, 
            uses a linear interpolation to determine intermediate points.
            </summary>
            <param name="source">The image to be re-projected.</param>
            <param name="target">The resulting image to be filled.</param>
            <param name="block">The block being targeted.</param>
            <param name="transformTargetToSource">Mapping function that maps target to source pixels.</param>
            <param name="scale">A factor to apply when re-projecting the block. See code comments in Reproject method above, where this parameter is set up.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock">
            <summary> Encapsulates the coordinates of a target block in image re-projection. </summary>
            <remarks>
            In re-projection, this structure is easier to use than .NET's rectangle class, 
            offering only (x0|y0) along with a width and a height.
            </remarks>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.X0">
            <summary>marks the left</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.Y0">
            <summary>marks the top</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.X1">
            <summary>marks the right</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.Y1">
            <summary>marks the bottom</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates and initializes the ReprojectionBlock.
            </summary>
            <param name="x0">x-coordinate, marks the left</param>
            <param name="y0">y-coordinate, marks the top</param>
            <param name="x1">x-coordinate, marks the right</param>
            <param name="y1">y-coordinate, marks the bottom</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.LeftTop">
            <summary>Point (left|top)</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.RightTop">
            <summary>Point (right|top)</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.LeftBottom">
            <summary>Point (left|bottom)</summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.RightBottom">
            <summary>Point (right|bottom)</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionBlock.Render(System.Drawing.Graphics,System.Drawing.Pen,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Renders the block using the given pen. Used for debugging purposes.
            </summary>
            <param name="g">Graphics object to render into.</param>
            <param name="p">Pen to use.</param>
            <param name="t">A transformation function to call with each point before drawing the actual lines.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions">
            <summary>
            Encapsulates the options for ReprojectionService.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions.#ctor">
            <summary> Creates and initializes an instance ReprojectionServiceOptions. </summary>
            <remarks> This constructor sets the necessary defaults for ReprojectionServiceOptions. </remarks>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions.SourceBoundsSupportingPoints">
            <summary>
            Gets or sets the number of the supporting points that are used when determining the source bounding box.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions.SourceSizeFactor">
            <summary>
            Gets or sets the factor used for determining the size of the images requested from the inner map service.
            </summary>
            <remarks>
            When re-projection applies, the size of the images requested from the inner WMS map services must
            be determined in a way to allow re-projection to produce high quality results. However, as the 
            source and target aspect ratio may differ significantly, it is not quite easy to determine a 
            viable source size.
            <br/>
            The general idea is to base the source size calculations on an amount pixels, which can simply be 
            transformed into the source size via the aspect ratio of the source bounding box. Based on the 
            request target size, we can determine a minimum and maximum source size using the shortest and 
            the longest side of the target rectangle as the base in the calculation. The minimum and maximum 
            size then can be transformed into a minimum and maximum pixel amount which, using the value of 
            sourceSizeFactor, can in turn be transformed into the final source amount of pixels.
            <br/>
            If sourceSizeFactor contains a positive value, the source size will be determined as described
            above: source = min + (max - min)*sourceSizeFactor.
            <br/>
            If sourceSizeFactor is invalid (or null) the source amount of pixels will be set to equal 
            the target amount of pixels: source = target.
            <br/>
            If sourceSizeFactor is negative, its absolute value will be multiplied with the target amount 
            of pixels: source = target * sourceSizeFactor.
            </remarks>
            
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService">
            <summary>
            This class represents map service adding re-projection to another one.
             </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.SourceMapService">
            <summary> the source map service delivering the map images to be re-projected </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.TargetToSourceTransformation">
            <summary> The coordinate transformation that transforms target (this.CRS) to source (mapService.CRS) points </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.TransparentWhite">
            <summary>Transparent white - the color used when creating default images</summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.TransparentTile">
            <summary>In case the ReprojectionService is used to render tiles, prepare a transparent tile that can be re-used by RenderTransparentImage.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.#ctor(Ptv.XServer.Controls.Map.Tools.Reprojection.MapService,System.String,Ptv.XServer.Controls.Map.Tools.Reprojection.ImageReprojector,Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionServiceOptions)">
            <summary>
            Creates and initializes an instance of ReprojectionService.
            </summary>
            <param name="sourceMapService">The inner map service that delivers the map images to be re-projected.</param>
            <param name="crs">The CRS to target by this instance.</param>
            <param name="reprojector">The re-projector to be used. Uses the default image re-projector if not explicitly set.</param>
            <param name="reprojectionServiceOptions">Additional options to be used by this map service.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.ReprojectionServiceOptions">
            <summary> Accesses the options to be used by the map service. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Reprojector">
            <summary> Accesses the re-projector used by the map service. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Covering">
            <summary>
            Used internally to describe the covering of a requested map section.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Covering.Unknown">
            <summary>
            MapService has no known bounds; cannot determine covering.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Covering.None">
            <summary>
            Requested map is outside of the MapService's bounds.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Covering.Partial">
            <summary>
            Requested map is partially covered by the MapService's bounds.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Covering.Full">
            <summary>
            Requested map is fully covered by the MapService's bounds.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.DetermineCovering(Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle,Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle@)">
            <summary>
            Determines the coverage of a requested map.
            </summary>
            <param name="target">MapRectangle of the requested map.</param>
            <param name="covering">Contains the covered area upon return.</param>
            <returns>Coverage of the requested map.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle,System.Drawing.Size)">
            <inheritdoc />
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.RenderTransparentImage(System.Drawing.Size)">
            <summary>
            Renders a PNG image filled with transparent white.
            </summary>
            <param name="size">Size if the image to return.</param>
            <returns>PNG image.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.GetInnerImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle,System.Drawing.Size,System.Boolean)">
            <summary>
            Loads a source map image from the inner map service using the specified target bounding box and target size.  
            </summary>
            <param name="targetMapRectangle">Requested bounding box, based on the CRS defined by this class.</param>
            <param name="targetSize">Requested image size in pixels.</param>
            <param name="includeGrid">If set to true, renders the re-projection grid into the returned image. Used for debugging purposes.</param>
            <returns>
            The stream containing the map image.
            </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle,System.Drawing.Size,System.Boolean,System.Boolean)">
            <summary> Loads a map image using the specified bounding box and size. </summary>
            <param name="targetMapRectangle">Requested bounding box, based on the CRS defined by this class.</param>
            <param name="targetSize">Requested image size in pixels.</param>
            <param name="reproject">See remarks.</param>
            <param name="includeGrid">If set to true, renders the re-projection grid into the returned image. Used for debugging purposes.</param>
            <returns> The stream containing the map image. </returns>
            <remarks> For debugging purposes, re-projection can be suppressed by setting the reproject parameter to false. </remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.DetermineSourceSize(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Determines the size of the source image. 
            This method is only used when re-projection applies.
            </summary>
            <param name="sourceBoundingBox">The source bounding box.</param>
            <param name="targetSize">Requested target size.</param>
            <returns>The computed source size.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.DetermineSourceSizeByAmountOfPixels(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Double)">
            <summary>
            Knowing the source bounding box and its aspect ratio, this helper determines 
            an image size given the an amount of pixels that the image should contain.
            </summary>
            <param name="sourceBoundingBox">The source bounding box</param>
            <param name="nPixels">The number of pixels that the image should contain</param>
            <returns>The size determined out of bounding box and number of pixels, rounded to the nearest integer.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.GetTransformFunction(Ptv.XServer.Controls.Map.Tools.Reprojection.MapRectangle,System.Drawing.Size,Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Creates the transformation function that determines the position of a 
            source pixel, given the position of a target pixel.
            </summary>
            <param name="targetMapRectangle">The requested target rectangle.</param>
            <param name="targetSize">The requested target size.</param>
            <param name="sourceBoundingBox">The source bounding box corresponding to the target map rectangle..</param>
            <param name="sourceSize">The source size corresponding to the target size.</param>
            <returns>Position of source pixel</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.ReprojectionService.Crs">
            <inheritdoc />
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders">
            <summary>
            Defines the placeholders names for WMS requests made by WmsMapService.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders.#ctor">
            <summary> Creates and initializes an instance of WmsPlaceholders, and defines some defaults. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders.BoundingBox">
            <summary> Names the bounding box placeholder. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders.Width">
            <summary> Names the width placeholder. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders.Height">
            <summary> Names the height placeholder. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders.Names">
            <summary> Returns all placeholder names in list. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.RequestCreatedHandler">
            <summary> Delegate used by WmsMapServer; used for request customization. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService">
            <summary> Class encapsulating a WMS service. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.logger">
            <summary> Logging restricted to this class. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.Placeholders">
            <summary> Names the placeholders </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.UrlTemplate">
            <summary> URL template </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.OnRequestCreated">
            <summary> Additional event that will be triggered after the request has been created. Used for request customization. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.#ctor(System.String,System.Drawing.ContentAlignment,Ptv.XServer.Controls.Map.Tools.Reprojection.WmsPlaceholders)">
            <summary> Creates and initializes an instance of WmsMapService. </summary>
            <param name="urlTemplate">The URL template is expected to include an SRS/CRS parameter. It defines placeholders for bounding box, image width and height.</param>
            <param name="minAlignment">Position of (MinX|MinY) in resulting images. Defaults to ContentAlignment.BottomLeft. Refer to MinAlignment for details.</param>
            <param name="placeholders">Defines the placeholder names. May be null to use the internal defaults.</param>
            <exception cref="T:System.ArgumentException">
            Fails with an ArgumentException if the url template misses mandatory elements or if the specified alignment is set to an unsupported 
            value (such as ContentAlignment.MiddleCenter).
            </exception>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.GetImageStream(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size,System.Drawing.Size@)">
            <inheritdoc />
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.InstantiateUrl(Ptv.XServer.Controls.Map.Tools.Reprojection.IBoundingBox,System.Drawing.Size)">
            <summary>
            Creates and initializes a url using the internal template, 
            given the request parameters that replace the placeholders in the template.
            </summary>
            <param name="box">Requested bounding box.</param>
            <param name="size">Requested image size.</param>
            <returns>Instantiated url that can be used to request the actual map image.</returns>
            <remarks>Derived classes may override this method to customize 
            the url being used for requesting map images.</remarks>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reprojection.WmsMapService.CreateRequest(System.String)">
            <summary> Creates and initializes the WebRequest that requests the map image. </summary>
            <param name="url">The URL for the requested map image, as returned by InstantiateUrl.</param>
            <returns>WebRequest instance.</returns>
            <remarks>Derived classes may override this method to customize 
            the web request being used for requesting map images.</remarks>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.TileCache">
            <summary> Class for caching the tile images. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileCache.GlobalCache">
            <summary> The global instance of the tile cache. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileCache.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.TileCache"/> class. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.ImageTools">
            <summary> Tool class for handling writable bitmaps. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ImageTools.CreateWriteableBitmap(System.Int32,System.Int32)">
            <summary> Creates a writable bitmap. </summary>
            <param name="width"> The width of the bitmap. </param>
            <param name="height"> The height of the bitmap. </param>
            <returns> The created bitmap. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ImageTools.LoadGdiImage(System.Byte[])">
            <summary> Loads an image from a byte array using GDI. </summary>
            <param name="buffer"> The byte array containing the image. </param>
            <returns> The image loaded. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ImageTools.WriteImageIntoBitmap(System.Drawing.Image,System.Windows.Media.Imaging.WriteableBitmap)">
            <summary> Writes an image into an existing writable bitmap. </summary>
            <param name="image"> The image to write. </param>
            <param name="writableBitmap"> The writable bitmap. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.IEasingFunction">
            <summary> The .NET version 3.5 does not support easing. Therefore, we implement basic easing support in here.
            We also implement an own DoubleAnimation providing easing. There's a compiler switch, FAKE_EASING, with which
            we can assure to use to framework classes starting with .NET 4.0. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.IEasingFunction.Ease(System.Double)">
            <summary> Documentation in progress... </summary>
            <param name="f"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.EasingMode">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.EasingMode.EaseOut">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.EasingMode.EaseIn">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.From">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.To">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.EasingFunction">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.FromProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.ToProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.EasingFunctionProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.#cctor">
            <summary> Initializes static members of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.CreateInstanceCore">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.DoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.CircleEase">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.CircleEase.EasingMode">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.CircleEase.Ease(System.Double)">
            <summary> Documentation in progress... </summary>
            <param name="f"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions">
            <summary> Extension methods &amp; statics. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.transformBoundsToVisual(System.Windows.UIElement,System.Windows.Media.Visual)">
            <summary> Gets the rectangle of the given UIElement, relative to the given visual. </summary>
            <param name="e"> Documentation in progress... </param>
            <param name="v"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.transformBoundsToVisual(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Media.Visual)">
            <summary> Gets the combined rectangle of the given elements, relative to the given visual. </summary>
            <param name="elements"> Documentation in progress... </param>
            <param name="v"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.Min(System.Windows.Point,System.Windows.Point)">
            <summary> Constructs a new point with the minimum of the x- and y-coordinate. </summary>
            <param name="p"> Documentation in progress... </param>
            <param name="q"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.AddToGrid(System.Windows.UIElement,System.Windows.Controls.Grid,System.Int32,System.Int32)">
            <summary> Adds an element to a grid. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="g"> Documentation in progress... </param>
            <param name="row"> Documentation in progress... </param>
            <param name="col"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.AddToGrid(System.Windows.UIElement,System.Windows.Controls.Grid,System.Int32)">
            <summary> Adds an element to a grid. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="g"> Documentation in progress... </param>
            <param name="row"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.AddToGrid(System.Windows.UIElement,System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32)">
            <summary> Adds an element to a grid. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="g"> Documentation in progress... </param>
            <param name="row"> Documentation in progress... </param>
            <param name="col"> Documentation in progress... </param>
            <param name="colSpan"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.SetGridPosition(System.Windows.UIElement,System.Int32,System.Int32)">
            <summary> Sets the grid position of an element. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="row"> Documentation in progress... </param>
            <param name="col"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.SetGridPosition(System.Windows.UIElement,System.Int32,System.Int32,System.Int32)">
            <summary> Set the grid position of an element. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="row"> Documentation in progress... </param>
            <param name="col"> Documentation in progress... </param>
            <param name="colSpan"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.AddRowDefinitions(System.Windows.Controls.Grid,System.Int32,System.Windows.GridLength)">
            <summary> Adds row definitions. </summary>
            <param name="g"> Documentation in progress... </param>
            <param name="n"> Documentation in progress... </param>
            <param name="length"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.AddColumnDefinitions(System.Windows.Controls.Grid,System.Int32,System.Windows.GridLength)">
            <summary> Adds column definitions. </summary>
            <param name="g"> Documentation in progress... </param>
            <param name="n"> Documentation in progress... </param>
            <param name="length"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.Contains(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary> Checks if the mouse moves within the visible region of a framework element. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.Contains(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary> Checks if the given point is within the visible region of a framework element. </summary>
            <param name="elem"> Documentation in progress... </param>
            <param name="p"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.Extensions.takeSnapshot(System.Windows.Media.Visual)">
            <summary> Take a snapshot of a visual. </summary>
            <param name="v"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation">
            <summary>
            <para>
            Animation class for animating GridLength properties, taken from http://www.codeproject.com/KB/WPF/GridLengthAnimation.aspx.
            </para>
            <para>
            Modifications:
            - added an easing function
            </para>
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.TargetPropertyType">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.From">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.To">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.EasingFunction">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.FromProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.ToProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.EasingFunctionProperty">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.#cctor">
            <summary> Initializes static members of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.CreateInstanceCore">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridLengthAnimation.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
            <inheritdoc/>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs">
            <summary> Arguments for the 'row moved' event. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs.Element">
            <summary> The Grid. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs.SourceRow">
            <summary> Source row. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs.TargetRow">
            <summary> Target row. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs.#ctor(System.Windows.UIElement,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventArgs"/> class. </summary>
            <param name="Element"> Documentation in progress... </param>
            <param name="SourceRow"> Documentation in progress... </param>
            <param name="TargetRow"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventArgs">
            <summary> Argument for the routed row moved event. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventArgs.SourceRow">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventArgs.TargetRow">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventArgs.#ctor(System.Windows.RoutedEvent,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventArgs"/> class. </summary>
            <param name="ev"> Documentation in progress... </param>
            <param name="sourceRow"> Documentation in progress... </param>
            <param name="targetRow"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventArgs">
            <summary> Event for querying if a row could be moved. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventArgs.IsAllowed">
            <summary> Gets or sets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventArgs.#ctor(System.Windows.RoutedEvent,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventArgs"/> class. </summary>
            <param name="ev"> Documentation in progress... </param>
            <param name="sourceRow"> Documentation in progress... </param>
            <param name="targetRow"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventHandler">
            <summary> Event handler: row moved. </summary>
            <param name="sender"> GridReorderPattern instance. </param>
            <param name="args"> Additional event arguments. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventHandler">
            <summary> Routed event handler: row moved. </summary>
            <param name="sender"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventHandler">
            <summary> Routed event handler: query if row is moveable. </summary>
            <param name="sender"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering">
            <summary> Makes the rows of a grid available for reordering by a Drag&amp;Drop operation. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.gridRows">
            <summary> List of real grid rows, containing the UI elements. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.dropIdx">
            <summary> This marks the target index when element is dropped. Index is updated while element is being dragged. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.dragCol">
            <summary> Preferred drag column. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.adorner">
            <summary> Preview adorner. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.grid">
            <summary> The grid itself. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.dragDropOrigin">
            <summary> Drag&amp;Drop origin. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.IsDragging">
            <summary> True while element is being dragged. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.lockObject">
            <summary> Lock for synchronizing events. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.eventRef">
            <summary> Event reference counter. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.defaultColor">
            <summary> Default color of text elements. Needed to reset the color. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DragColumn">
            <summary> Gets the explicit drag column, if any. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.ActualDropRegions">
            <summary> Gets the rectangles of the droppable regions, ordered by y-coordinate, ascending. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.RowMoved">
            <summary> Event handler: row moved. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GridReorderPatternProperty">
            <summary> Attached pattern property used internally for storing pattern instances. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.SetGridReorderPattern(System.Windows.Controls.Grid,Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering)">
            <summary> Set attached pattern property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <param name="value"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GetGridReorderPattern(System.Windows.Controls.Grid)">
            <summary> Get attached pattern property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.EnabledProperty">
            <summary> Attached enabled property. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.SetEnabled(System.Windows.Controls.Grid,System.Boolean)">
            <summary> Set attached enabled property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <param name="value"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GetEnabled(System.Windows.Controls.Grid)">
            <summary> Read attached enabled property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DragColumnProperty">
            <summary> Attached Drag column property. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.SetDragColumn(System.Windows.Controls.Grid,System.Nullable{System.Int32})">
            <summary> Set attached Drag column property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <param name="value"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GetDragColumn(System.Windows.Controls.Grid)">
            <summary> Read attached Drag column property. </summary>
            <param name="grid"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.RowMovedEvent">
            <summary> Attached row moved event. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AddRowMovedHandler(System.Windows.DependencyObject,Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventHandler)">
            <summary> Add event handler. </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="handler"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.RemoveRowMovedHandler(System.Windows.DependencyObject,Ptv.XServer.Controls.Map.Tools.Reordering.RoutedRowMovedEventHandler)">
            <summary> Remove event handler. </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="handler"> Documentation in progress... </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AllowMoveRowEvent">
            <summary> Attached row moved event. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AddAllowMoveRowHandler(System.Windows.DependencyObject,Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventHandler)">
            <summary> Add event handler. </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="handler"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.RemoveAllowMoveRowHandler(System.Windows.DependencyObject,Ptv.XServer.Controls.Map.Tools.Reordering.RoutedAllowMoveRowEventHandler)">
            <summary> Remove event handler. </summary>
            <param name="d"> Documentation in progress... </param>
            <param name="handler"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.allowMoveRow(System.Int32,System.Int32)">
            <summary> Determine if a row can be move to a certain destination. </summary>
            <param name="sourceRow"> Documentation in progress... </param>
            <param name="targetRow"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.RaiseRowMoved(System.Int32,System.Int32)">
            <summary> Fire attached row moved event. </summary>
            <param name="sourceRow"> Documentation in progress... </param>
            <param name="targetRow"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.#ctor(System.Windows.Controls.Grid,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering"/> class. Use apply for creating an instance of GridReorderPattern. </summary>
            <param name="grid"> Grid to apply pattern for. </param>
            <param name="dragCol"> Enable Drag&amp;Drop only for the FrameworkElements of this column. 
            If set to null, each FrameworkElement of the grid is applicable for Drag&amp;Drop. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GetDefaultTextColor(System.Windows.Controls.Grid)">
            <summary> Retrieves the default text color of the text block elements. Needed to reset the color. </summary>
            <param name="grid"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.createGridRows">
            <summary> Creates GridRow objects out of the grid's child elements. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.wireMouseEvents">
            <summary> Sets up handlers for the mouse events of the elements which can be dragged. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.unwireMouseEvents">
            <summary> Removes handlers for the mouse events of the elements which can be dragged. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.wireTextBlockEvents">
            <summary> Adds mouse event handlers for all text block elements. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.unwireTextBlockEvents">
            <summary> Removes the mouse event handlers for all text block elements. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.injectRowDefinitions">
            <summary> Inserts additional RowDefinitions that are animated while an element is being dragged. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.removeRowDefinitions">
            <summary> Removes the previously inserted RowDefinitions, restores the original rows. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.StartDragDrop(System.Windows.UIElement)">
            <summary> Drag element. </summary>
            <param name="element"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.PositionOf(System.Windows.UIElement)">
            <summary> Get grid row &amp; column from a UIElement or it's parent element. </summary>
            <param name="e"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.IndexOf(System.Windows.UIElement)">
            <summary> Get the index of the given grid element. </summary>
            <param name="e"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DragMove(System.Windows.UIElement)">
            <summary> Move dragged element. </summary>
            <param name="element"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DoneDragDrop(System.Windows.UIElement)">
            <summary> Element dropped. </summary>
            <param name="element"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.reorderElements(System.Nullable{System.Int32},System.Int32,System.Boolean)">
            <summary> Reorders elements, if necessary. </summary>
            <param name="dropIdx"> Drop index (= insert position). </param>
            <param name="dragIdx"> Index of dragged row (= source index). </param>
            <param name="checkOnly"> If set to true, reorderElements will only check if any reordering work has to be done. </param>
            <returns> True, if elements have been / have to be reordered. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.reorderElements(System.Int32,System.Int32,System.Boolean)">
            <summary> Reorders elements, if necessary. </summary>
            <param name="dropIdx"> Drop index (= insert position). </param>
            <param name="dragIdx"> Index of dragged row (= source index). </param>
            <param name="checkOnly"> If set to true, reorderElements will only check if any reordering work has to be done. </param>
            <returns> True, if elements have been / have to be reordered. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FindDropRegion(System.Nullable{System.Windows.Point})">
            <summary> Gets the index of the drop region that contains the given point.  </summary>
            <param name="p"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FindDropRegion(System.Windows.Point)">
            <summary> Gets the index of the drop region that contains the given point. </summary>
            <param name="p"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GetTargetHeight(System.Int32)">
            <summary> Gets the target height for the row animation.  </summary>
            <param name="dragIdx"> Index of row being dragged. </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.UpdateDropIndexAndAnimate(System.Int32,System.Nullable{System.Windows.Point},System.Int32[])">
            <summary>
            UpdateDropIndexAndAnimate is called while element is being dragged. It 
            updates the target index and animates the rows to provide visual feedback.
            </summary>
            <param name="dragIdx"> Index of row being dragged. </param>
            <param name="p"> Current mouse position. Use null to reset the layout or to indicate a position outside of the grid. </param>
            <param name="skip"> Row indices that should not be animated (used for non-droppable regions). </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.Detach">
            <summary> Detach from the grid. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.apply(System.Windows.Controls.Grid,System.Nullable{System.Int32},Ptv.XServer.Controls.Map.Tools.Reordering.RowMovedEventHandler)">
            <summary> Static GridReordering factory. </summary>
            <param name="grid"> Grid to apply pattern for. </param>
            <param name="dragCol"> Enable Drag&amp;Drop only for the FrameworkElements of this column. 
            If set to null, each FrameworkElement of the grid is applicable for Drag&amp;Drop. </param>
            <param name="RowMoved"> Event handler which is added to the row moved event. </param>
            <returns> The <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering"/>. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.TextBlock_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Handler for entering the mouse on a text block. </summary>
            <param name="sender"> The sender of the event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.TextBlock_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Handler for leaving a text block with the mouse. </summary>
            <param name="sender"> The sender of the event. </param>
            <param name="e"> The event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.InvokeSecurely``1(``0,System.Action{``0})">
            <summary>
            Invokes the given event action in a secure way.
            </summary>
            <typeparam name="T"> Type of the event args that are passed to the action. </typeparam>
            <param name="t"> Event args. </param>
            <param name="a"> Action to invoke. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.PreviewMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Left button up; ends Drag&amp;Drop. </summary>
            <param name="sender"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.PreviewMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary> Left button down; initially store position. </summary>
            <param name="sender"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.PreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Mouse move; starts Drag&amp;Drop or updates drag position. </summary>
            <param name="sender"> Documentation in progress... </param>
            <param name="e"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GridPosition">
            <summary> Grid position. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GridPosition.Row">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.GridPosition.Column">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AnimateRows">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.ShowRowAnimationEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.HideRowAnimationEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.ShowRowAnimationDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.HideRowAnimationDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AnimatedRowHeight">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AnimateNonDroppableRows">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DraggedRowOpacity">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FadeDraggedRow">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DraggedRowFadeOutDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DraggedRowFadeInDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DraggedRowFadeOutEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.DraggedRowFadeInEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FlashOnReordering">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FlashFadeOutDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FlashFadeInDuration">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FlashFadeOutEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.FlashFadeInEasing">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.AlwaysUseRowHeightAsDropThreshold">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridReordering.UsePreviewAdorner">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow">
            <summary> Stores the UI elements of a single grid row. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.grid">
            <summary> The grid. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.elements">
            <summary> UI elements of the row. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.opacities">
            <summary> Initial opacity of the UI elements. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.referenceElementIndex">
            <summary> Index of the reference element in the elements list. -1 if there is no reference element. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.currentOpacityAnimations">
            <summary> Number of running opacity animations, counting all GridRow instances. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.currentOpacityAnimationsLock">
            <summary> Lock for updating currentOpacityAnimations. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.ReferenceElement">
            <summary> Gets the reference element of this row. Returns null if there is no explicit reference element. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.AnimationThreshold">
            <summary>
            Gets the animation threshold. The animation threshold is the y-coordinate 
            of this row to be used when checking if the mouse position is above or 
            below this row. Coordinate is relative to the grid.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.Bounds">
            <summary> Gets the row bounds. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.RowDefinition">
            <summary> Gets the corresponding row definition. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.Row">
            <summary> Gets or sets the grid row that this instance represents. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.Snapshot">
            <summary> Gets a snapshot of the row. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.#ctor(System.Windows.Controls.Grid,System.Int32,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow"/> class. </summary>
            <param name="grid"> The grid. </param>
            <param name="row"> Grid row this instance should represent. </param>
            <param name="refCol"> Number of the column that contains the reference 
            elements. -1 if there is no explicit reference column. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.updateAnimatedOpacityCount(System.Int32)">
            <summary> Update animatedOpacityCount. </summary>
            <param name="delta"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.DoEvents">
            <summary> DoEvent for WPF - used in waitAnimatedOpacity. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.waitAnimatedOpacity">
            <summary> Waits for opacity animations to finish. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.animateOpacity(System.Double,System.Int32,Ptv.XServer.Controls.Map.Tools.Reordering.IEasingFunction)">
            <summary>
            Animates the opacity values of each element in the grid row. Keeps
            updateAnimatedOpacityCount up to date.
            </summary>
            <param name="to"> The final opacity of the animation. </param>
            <param name="duration"> The duration of the animation. </param> 
            <param name="easing"> The EasingFunction of the animation. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.GridRow.GetSnapshotOffsetForAdorner(System.Windows.UIElement)">
            <summary> Determines an additional offset for the preview adorner. </summary>
            <param name="dragged"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner">
            <summary> Adorner used for previewing a dragged element. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.child">
            <summary> Element displayed. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.offset">
            <summary> Current offset. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.Offset">
            <summary> Gets or sets the current offset. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement,System.Double)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner"/> class. </summary>
            <param name="adornedElement"> Adorned element. </param>
            <param name="presentationElement"> Element to be presented on the adorner layer. </param>
            <param name="opacity"> Opacity to apply to presentationElement when it is added to the adorner layer. </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.#ctor(System.Windows.UIElement,System.Double)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner"/> class. Takes a snapshot of the adorned element, which is then used to present the element on the adorner layer. </summary>
            <param name="adornedElement"> Adorned element. </param>
            <param name="opacity"> Opacity to apply to the element's snapshot. </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.GetVisualChild(System.Int32)">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.VisualChildrenCount">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.attach(Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner@,System.Func{System.Windows.FrameworkElement},System.Func{System.Windows.FrameworkElement},System.Double)">
            <summary> Attach adorner. </summary>
            <param name="adorner"> Stores the adorner instance. An instance is only 
            create if adorner is null on input. </param>
            <param name="adornedElement"> Function that provides the adorned element. 
            Only called when a new instance has to be created. </param>
            <param name="presentationElement"> Function that provides the element to be 
            presented on the adorner layer. Only called when a new instance 
            has to be created. If this function returns null, a snapshot of the adorned
            element will be taken. </param>
            <param name="opacity"> Opacity to apply to presentationElement before it is 
            added to the adorner layer. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner.detach(Ptv.XServer.Controls.Map.Tools.Reordering.PreviewAdorner@)">
            <summary> Detach adorner instance.  </summary>
            <param name="adorner"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WkbToGdi">
            <summary> Converts Well-known Binary representations to a GraphicsPath instance. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.CreateWKBPoint(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Creates a <see cref="T:System.Drawing.Point"/> from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The <see cref="T:System.Drawing.Point"/> </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.ReadCoordinates(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary> Creates a line string from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The line string. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.CreateWKBLinearRing(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary> Creates a line string from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The linear ring. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.CreateWKBLineString(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary>
            Creates a graphics path for a line string binary.
            </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The line path. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.CreateWKBPolygon(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary>
            Creates a graphics path for a polygon binary.
            </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The polygon path. </returns>returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.CreateWKBMultiPolygon(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary>
            Creates a graphics path for a multi polygon binary.
            </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The polygon path. </returns>returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.ReadUInt32(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Reads an unsigned integer value from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The unsigned integer value. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.ReadDouble(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Reads a double value from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The double value. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.Parse(System.Byte[],System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary> Reads a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> 
            object from a well known binary byte array.
            The graphics path is either a GDI line or a polygon object.
            The transformation function defines the transformation from geographic
            to screen coordinates. </summary>
            <param name="bytes"> The byte array containing the well known binary. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToGdi.Parse(System.IO.BinaryReader,System.Func{System.Double,System.Double,System.Drawing.Point})">
            <summary> Reads a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> 
            object from a well known binary byte array.
            The graphics path is either a GDI line or a polygon object.
            The transformation function defines the transformation from geographic
            to screen coordinates. </summary>
            <param name="reader"> The binary reader for the well known binary. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WkbToWpf">
            <summary> Converts Well-known Binary representations to a WPF Geometry instance. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.CreateWKBPoint(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Creates a <see cref="T:System.Windows.Point"/> from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The <see cref="T:System.Windows.Point"/> </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.ReadCoordinates(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Creates a line string from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The line string. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.CreateWKBLinearRing(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Creates a line string from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The linear ring. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.CreateWKBPolygon(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Creates a PathFigure collection for a polygon binary.
            </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The  PathFigure collection. </returns>returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.CreateWKBMultiPolygon(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary>
            Creates a PathFigure collection for a multi polygon binary.
            </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The  PathFigure collection. </returns>returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.ReadUInt32(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Reads an unsigned integer value from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The unsigned integer value. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.ReadDouble(System.IO.BinaryReader,Ptv.XServer.Controls.Map.Tools.WkbByteOrder)">
            <summary> Reads a double value from a binary. </summary>
            <param name="reader"> The binary reader. </param>
            <param name="byteOrder"> The byte order. </param>
            <returns> The double value. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.Parse(System.Byte[],System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Reads a <see cref="T:System.Windows.Media.Geometry"/> 
            object from a well known binary byte array.
            The graphics path is either a GDI line or a polygon object.
            The transformation function defines the transformation from geographic
            to screen coordinates. </summary>
            <param name="bytes"> The byte array containing the well known binary. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The <see cref="T:System.Windows.Media.Geometry"/> object. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.Parse(System.IO.BinaryReader,System.Func{System.Windows.Point,System.Windows.Point})">
            <summary> Reads a <see cref="T:System.Windows.Media.Geometry"/> 
            object from a well known binary byte array.
            The graphics path is either a GDI line or a polygon object.
            The transformation function defines the transformation from geographic
            to screen coordinates. </summary>
            <param name="reader"> The binary reader for the well known binary. </param>
            <param name="transform"> The transformation function. </param>
            <returns> The <see cref="T:System.Windows.Media.Geometry"/> object. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.BuildPathFigure(System.Windows.Point[])">
            <summary> Builds a path figure for a point array. </summary>
            <param name="coordinates"> The list of points. </param>
            <returns> The path figure. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WkbToWpf.ToSegments(System.Windows.Point[])">
            <summary> Convert a point array to a <see cref="T:System.Windows.Media.PointCollection"/> class. </summary>
            <param name="points"> The array of points. </param>
            <returns> The <see cref="T:System.Windows.Media.PointCollection"/>. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WkbByteOrder">
            <summary> Specifies the byte order value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WkbByteOrder.Xdr">
            <summary> Value for big-endian byte order. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WkbByteOrder.Ndr">
            <summary> Value for little-endian byte order. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WKBGeometryType">
            <summary> Specifies the geometry type value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.Point">
            <summary> Value for point. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.LineString">
            <summary> Value for line string. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.Polygon">
            <summary> Value for polygon. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.MultiPoint">
            <summary> Value for multi point. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.MultiLineString">
            <summary> Value for multi line string. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.MultiPolygon">
            <summary> Value for multi polygon. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.WKBGeometryType.GeometryCollection">
            <summary> Value for geometry collection. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WrappingStream">
            <summary>
            A <see cref="T:System.IO.Stream"/> that wraps another stream. The major feature of <see cref="T:Ptv.XServer.Controls.Map.Tools.WrappingStream"/> is that it does not dispose the
            underlying stream when it is disposed; this is useful when using classes such as <see cref="T:System.IO.BinaryReader"/> and
            <see cref="T:System.Security.Cryptography.CryptoStream"/> that take ownership of the stream passed to their constructors.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.WrappingStream"/> class.
            </summary>
            <param name="streamBase">The wrapped stream.</param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns><c>true</c> if the stream supports reading; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns><c>true</c> if the stream supports seeking; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns><c>true</c> if the stream supports writing; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position
            within this stream by the number of bytes written.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.WrappingStream.WrappedStream">
            <summary>
            Gets the wrapped stream.
            </summary>
            <value>The wrapped stream.</value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WrappingStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Ptv.XServer.Controls.Map.Tools.WrappingStream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo">
            <summary> 
            This class fetches xMapServer meta-information by requesting the xmap .properties file
            and includes other information needed to operate on XMapServer. 
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.logger">
            <summary> Logging restricted to this class. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.Url">
            <summary> Gets or sets the xMapServer url (e.g. http://127.0.0.1:50010/xmap/ws/XMap). </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.User">
            <summary> Gets or sets the newUser name for basic Http authentication. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.Password">
            <summary> Gets or sets the password for basic Http authentication. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.CopyrightText">
            <summary> Gets or sets the copyright text. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.MaxRequestSize">
            <summary> Gets or sets the maximum request size for an xMapServer image. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo"/> class.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo"/> class by requesting the xmap .properties file,
            initializing the <see cref="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.CopyrightText"/> and <see cref="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.MaxRequestSize"/>, if this file could be requested.
            The <see cref="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.User"/> and <see cref="P:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.Password"/> remains empty.
            </summary>
            <param name="baseUrl"> The base url for the xMapServer. It consists of the first part of the complete XMapServer URL,
            for example eu-n-test.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.SearchValueInJSON(System.Collections.Generic.IEnumerable{System.String},System.String@)">
            <summary>
            Searches for a value in a json string at the given path step by step.
            </summary>
            <param name="path">Path description to the wanted value.</param>
            <param name="result">Stores the json string at the beginning and will be set every step.</param>
            <returns>Returns true if whole path succeeded and false if not.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.SetCredentials(System.String,System.String)">
            <summary>
            Setting credential parameters for HTTP authentication, which are necessary for an xServer configuration running in an Azure environment.
            After registering in the Customer Centre, you received your personal account data. This data needed for authentication consists of the
            username, password and a token. Meanwhile the username and password is needed for every authentication aspect, the token is restricted
            to programming reasons. We recommend to use the token only in your further development steps.  
            </summary>
            <remarks>Further details can be found in http://xserver.ptvgroup.com/de/cookbook/getting-started .</remarks>
            <param name="newUser">User name of the HTTP authentication. In combination with the usage of the token, this parameter has to be set
            to 'xtok'.</param>
            <param name="newPassword">Password of the HTTP authentication. The token value can be used here in combination with the user 'xtok'.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapMetaInfo.CheckCredentials(System.String,System.String)">
            <summary>
            Checking credential parameters for HTTP authentication, which are necessary for an xServer configuration running in an Azure environment.
            After registering in the Customer Centre, you received your personal account data. This data needed for authentication consists of the
            username, password and a token. Meanwhile the username and password is needed for every authentication aspect, the token is restricted
            to programming reasons. We recommend to use the token only in your further development steps.  
            </summary>
            <param name="user">User name of the HTTP authentication. In combination with the usage of the token, this parameter has to be set to 'xtok'.</param>
            <param name="password">Password of the HTTP authentication. The token value can be used here in combination with the user 'xtok'.</param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.RectExtensions">
            <summary> Helper class extending the functionality of rectangles/envelopes. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.RectExtensions.Inflate(System.Windows.Rect,System.Double)">
            <summary> Inflate the specified rectangle by a rectangle, keeping the center invariant. </summary>
            <param name="rect"> Rectangle (top less than bottom!!!) to inflate. </param>
            <param name="factor"> Values higher than 1 inflate the rectangle, values between 0 and 1 shrink it. Negative values are not recommended. </param>
            <returns> Inflated/shrunken rectangle. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.RectExtensions.CreateEnvelope(System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary> Create the minimal bounding rectangle around a polygon. </summary>
            <param name="points">Set of points defining the polygon.</param>
            <returns>Minimal bounding rectangle of the polygon.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.RectExtensions.Envelope(System.Windows.Shapes.Shape)">
            <summary> Create the minimal bounding rectangle around a shape object. </summary>
            <param name="shape">Shape object from which the minimal bounding rectangle has to be calculated.</param>
            <returns>Minimal bounding rectangle of the shape.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.WgsExtensions">
            <summary> Helper class for converting points and distance into different coordinate formats. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.CanvasToPtvMercator(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Double)">
            <summary> Conversion of a pixel distance into a Mercator distance. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="distance">Distance given in pixel format.</param>
            <returns>Distance given in PTV-internal Mercator format.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.CanvasToPtvMercator(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Windows.Point)">
            <summary> Conversion of a pixel coordinate into a PTV-internal Mercator format. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="point">Point containing pixel coordinates.</param>
            <returns>Point containing PTV-internal Mercator coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.CanvasToPtvMercator(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,Ptv.XServer.Controls.Map.MapRectangle)">
            <summary> Conversion of a rectangle containing pixel coordinates into a PTV-internal Mercator format. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="rect">Rectangle containing pixel coordinates.</param>
            <returns>Rectangle containing PTV-internal Mercator coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.CanvasToPtvMercator(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary> Conversion of multiple pixel coordinates into a PTV-internal Mercator format. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="points">Multiple points (enumeration) containing pixel coordinates.</param>
            <returns>Multiple points (enumeration) containing PTV-internal Mercator coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.CanvasToWgs(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Windows.Point)">
            <summary> Conversion of a pixel coordinate into WGS format. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="point">Point containing pixel coordinates.</param>
            <returns>Point containing WGS coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.PtvMercatorToCanvas(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Windows.Point)">
            <summary> Conversion of a PTV-internal Mercator coordinate into pixel coordinates. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="mercatorPoint">Point containing PTV-internal Mercator coordinates.</param>
            <returns>Point containing pixel coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.PtvMercatorToWGS(System.Double)">
            <summary> Conversion of a PTV-internal Mercator distance into a WGS distance. </summary>
            <param name="distance">Distance given in PTV-internal Mercator format.</param>
            <returns>Distance given in pixel format.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.WgsToCanvas(Ptv.XServer.Controls.Map.MapView,System.Windows.UIElement,System.Windows.Point)">
            <summary> Conversion of a WGS coordinate into pixel format. </summary>
            <param name="mapView">Map object needed for pixel (resolution) information.</param>
            <param name="canvas">Canvas object needed for the current scale information.</param>
            <param name="wgsPoint">Point containing WGS coordinates.</param>
            <returns>Point containing pixel coordinates.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.WgsExtensions.GetCurrentEnvelopePtvMercator(Ptv.XServer.Controls.Map.MapView)">
            <summary> Gets the bounding box of the visible map section while the map is in animation mode. </summary>
            <param name="mapView"> Map object containing the current map section. </param>
            <returns> The rectangle for the current envelope. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.MapElementExtensions">
            <summary> Helper functions for the visual tree. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MapElementExtensions.FindRelative``1(System.Windows.FrameworkElement)">
            <summary> Finds an object of type T for a framework element which is somewhere in the visual tree. </summary>
            <typeparam name="T"> The type of the object. </typeparam>
            <param name="fe"> The framework element. </param>
            <returns> The instance of the object or null if not found. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MapElementExtensions.FindParent``1(System.Windows.FrameworkElement)">
            <summary> Finds an object of type T for a framework element which is a parent in the visual tree. </summary>
            <typeparam name="T"> The type of the object. </typeparam>
            <param name="fe"> The framework element. </param>
            <returns> The instance of the object or null if not found. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MapElementExtensions.IsControlVisible(System.Windows.FrameworkElement)">
            <summary> Gets whether a control and all its parents are visible. </summary>
            <param name="element"> The element to check. </param>
            <returns> True if the element is visible. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MapElementExtensions.FindChild``1(System.Windows.DependencyObject)">
            <summary> Documentation in progress... </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
            <param name="depObj"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MapElementExtensions.FindChildren``1(System.Windows.DependencyObject)">
            <summary> Documentation in progress... </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
            <param name="depObj"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.StreamExtensions">
            <summary> Extensions for the streaming API. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary> Byte wise copy of a stream. </summary>
            <param name="src"> Source stream. </param>
            <param name="destinationStream"> Destination stream. </param>
            <returns>Destination stream.</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.StreamExtensions.GetBytes(System.IO.Stream,System.Boolean)">
            <summary>
            Reads and returns the bytes from the given stream.
            </summary>
            <param name="stm">Stream to get the bytes from.</param>
            <param name="forceNullIfEmpty">If set to true, forces null to be returned if the stream is empty.</param>
            <returns>Bytes read.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.StringBuilderExtensions">
            <summary> Extensions helpful for StringBuilder class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.StringBuilderExtensions.AppendWithSeparator(System.Text.StringBuilder,System.String,System.String)">
            <summary> Method adding a separator between the appended texts, but only if the string builder is not empty. 
            This avoids trailing separators, which commonly should appear only 'inside' the individual text elements. </summary>
            <param name="stringBuilder">Variable to add texts with separators. </param>
            <param name="text"> Text which should be appended to the stringBuilder. </param>
            <param name="separator">Separator inserted between the appended texts. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.ResourceHelper">
            <summary> Helper functions for handling resources. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ResourceHelper.LoadBitmapFromResource(System.String)">
            <summary> Loads a bitmap image from an internal resource path. </summary>
            <param name="resourcePath"> The path of the resource. </param>
            <returns> The bitmap image. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.XMapTools">
            <summary>
            Collects tooling methods for the XMap server.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.XMapTools.CheckedXMapLayers">
            <summary>
            Cache for requests to AreXMapLayersAvailable(...). Clear this cache to force new XMap requests
            instead of returning cache results.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.XMapTools.Service">
            <summary>Service implementation of the xMap server. It is implemented as a static variable to make
            it possible to modify it for mocking (see XMapToolsTest.cs).</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XMapTools.AreXMapLayersAvailable(System.String,System.String,xserver.Layer[],System.String,System.String,System.String,System.String)">
            <summary>
            Checks if one or n certain layers are available or not.
            </summary>
            <param name="url">The url to the XMap instance.</param>
            <param name="contextKey">The used context key or null if none is used.</param>
            <param name="layers">The layers to check.</param>
            <param name="profile">The profile used to check the availability.</param>
            <param name="expectedErrorCode">The expected error code if the at least one layer does not exist. 
            SoapExceptions carrying this error code will be caught and the return value of the method will be false.
            SoapExceptions carrying another error code will not be caught and thus be thrown by this API.
            </param>
            <param name="xServerUser">User name needed for Azure Cloud.</param>
            <param name="xServerPassword">Password needed for Azure Cloud.</param>
            <returns>True if one or n layers are available, false if at least one layer is not available. 
            May throw exceptions in case of malformed url or wrong contextKey definition.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.ColorExtensions">
            <summary> Helper class for changing a color value. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ColorExtensions.Lighten(System.Byte)">
            <summary> Helper method to lighten a color value (R, G or B). </summary>
            <param name="color"> Color to be lightened. </param>
            <returns> The lightened color. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ColorExtensions.Darken(System.Byte)">
            <summary> Helper method to darken a color value (R, G or B). </summary>
            <param name="color"> Color to be darkened. </param>
            <returns> The darkened color. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.DesignTest.#cctor">
            <summary> 
            Initializes an instance of Util class 
            </summary> 
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.DesignTest.DesignMode">
            <summary> 
            Gets true, if we are in design mode of Visual Studio etc.. 
            </summary> 
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.ImageExtensions">
            <summary>
            Extensions for the streaming API.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.ImageExtensions.ResizeImage(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Resizes an image to a specific size.
            </summary>
            <param name="stream">Stream containing the image.</param>
            <param name="targetWidth">Target width</param>
            <param name="targetHeight">Target height</param>
            <returns>Resized image.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.XServerUrl">
            <summary>
            Helper class for converting URL address into the correct format.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XServerUrl.Complete(System.String,System.String)">
            <summary>
            To access the functionality provided by the XServer's web services, a URL has to be specified, which has to
            fulfill some constraints. 
            <para>
            At first, according to the concrete xServer (for example xMap), the URL has to look like
            (scheme)://(host):(port)/xmap/ws/XMap, especially the path with its mixed uppercase and lower case characters.
            If no scheme is specified in the input URL, then a completion is started, concerning an adequate value for this
            scheme, a check for an xServer internet deployed XServer and eventually insertion of the default port, if no one is specifed
            in the input URL.
            </para>
            <para>
            If the scheme (or protocol) like http is missing in the URL, then this method examines the host for
            an xServer internet-like name. The host indicates an Azure XServer, if it contains some characters followed by a '-',
            followed by one of the letters 'h', 'n' or 't'. Optionally, the module name may precede this construct, and the texts
            '-test' or '-integration' may follow also optionally. The path is completely ignored. 
            The scheme is set to https, if an xServer internet host name is detected, otherwise http is used.
            The following URLs will all be transformed to https://xmap-eu-n.cloud.ptvgroup.com/xmap/ws/XMap :
            eu-n,
            xmap-eu-n,
            eu-n.cloud.ptvgroup.com
            xmap-eu-n.cloud.ptvgroup.com
            </para>
            <para>
            If a port is part of the URL, it will be used, except an xServer internet host is detected (then the port is completely ignored).
            If no scheme and no port is specified (and no xServer internet host is detected), then a default port-assignment is used.
            </para>
            </summary>
            <param name="baseUrl">Eventually partial specified URL needed for XServer's web services, for example 'eu-n-test' or 'http://localhost:50010'.</param>
            <param name="moduleName">Name of the XServer module, like XMap or XRoute. The casing is corrected according the internal requirements.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XServerUrl.IsXServerInternet(System.String)">
            <summary> Checks if the provided URL address is an XServer deployed in an XServer Internet environment. </summary>
            <param name="url">URL to check for xServer internet deployment.</param>
            <returns>True if it contains ".cloud.ptvgroup.com".</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XServerUrl.IsDecartaBackend(System.String)">
            <summary>
            Checks if the provided URL addresses uses a DeCarta backend.
            </summary>
            <param name="url">URL to check for xServer internet deployment.</param>
            <returns></returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.XServerUrl.Port(System.String)">
            <summary>
            Matches a module name to the corresponding port. For example, 'xmap' results in a return value of 50010,
            which represents the default port number, commonly used for XMap.
            </summary>
            <param name="moduleName">Name of the mode, for example 'XMap' or 'XRoute'.</param>
            <returns>Default port number of the module specified in <paramref name="moduleName"/></returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.MemoryCache`2">
            <summary> Generic class for caching objects in memory. </summary>
            <typeparam name="TKey"> The key type. </typeparam>
            <typeparam name="TValue"> The value type. </typeparam>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.CacheSize">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.valueCache">
            <summary> TGets or sets ODO: Comment. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.lastUsed">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.#ctor(System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.MemoryCache`2"/> class. </summary>
            <param name="cacheSize"> The number of cached objects. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.TryGetValue(`0,`1@)">
            <summary> Returns the value of an entry. </summary>
            <param name="key"> The key of the entry. </param>
            <param name="value"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCache`2.AddValue(`0,`1)">
            <summary>
            Adds an entry to the cache.
            </summary>
            <param name="key"> The key of the entry. </param>
            <param name="value"> The value of the entry. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded">
            <summary> Memory cache accessible in multiple threads. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.CacheSize">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.valueCache">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.lastUsed">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.lockedKeys">
            <summary> The Dictionary which holds the locked keys. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.#ctor(System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded"/> class with a specific size. </summary>
            <param name="cacheSize"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.TryGetValue(System.String,System.Byte[]@)">
            <summary> Tries to get a value for a given key. </summary>
            <param name="key"> Documentation in progress... </param>
            <param name="value"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.AddValue(System.String,System.Byte[])">
            <summary> Adds a value to the cache. </summary>
            <param name="key"> The key. </param>
            <param name="value"> The value. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.UnlockKey(System.String)">
            <summary> Unlocks a key. </summary>
            <param name="key"> The key. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.MemoryCacheMultiThreaded.TryGetValueInternal(System.String,System.Byte[]@)">
            <summary> Returns the value of an entry. </summary>
            <param name="key"> The key of the entry. </param>
            <param name="value"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineCluster`1">
            <summary> This class holds the information for a cluster. </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.NumLines">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.Level">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.TileX1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.TileY1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.TileX2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.TileY2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.SumX1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.SumY1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.SumX2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.SumY2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.Aggregate1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.Aggregate2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.AggregateLine">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.Tags">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.CentroidX1">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.CentroidY1">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.CentroidX2">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineCluster`1.CentroidY2">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineCluster`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.LineCluster`1"/> class. </summary>
            <param name="tileX1"> Documentation in progress... </param>
            <param name="tileY1"> Documentation in progress... </param>
            <param name="tileX2"> Documentation in progress... </param>
            <param name="tileY2"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineCluster`1.AddPoint(Ptv.XServer.Controls.Map.Tools.LineInfo{`0})">
            <summary> Documentation in progress... </summary>
            <param name="line"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineCluster`1.AddCluster(Ptv.XServer.Controls.Map.Tools.LineCluster{`0})">
            <summary> Documentation in progress... </summary>
            <param name="cluster"> Documentation in progress... </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineInfo`1">
            <summary> This class holds the information for a single point. </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.X1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.Y1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.X2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.Y2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.Aggregate1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.Aggregate2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.AggregateLine">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineInfo`1.Tag">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.LineTile">
            <summary> Struct for a tile key. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineTile.X1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineTile.Y1">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineTile.X2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.LineTile.Y2">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineTile.Equals(System.Object)">
            <summary> Documentation in progress... </summary>
            <param name="obj"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.LineTile.GetHashCode">
            <summary> Documentation in progress... </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1">
            <summary> Documentation in progress... </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.maxLevel">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.minLevel">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.referenceSize">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.points">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.clusterLevels">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.clusterLevels1">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.clusterLevels2">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.#ctor(System.Double,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1"/> class. </summary>
            <param name="referenceSize"> Documentation in progress... </param>
            <param name="minLevel"> Documentation in progress... </param>
            <param name="maxLevel"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.AddLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,`0)">
            <summary> Documentation in progress... </summary>
            <param name="x1"> Documentation in progress... </param>
            <param name="y1"> Documentation in progress... </param>
            <param name="aggregate1"> Documentation in progress... </param>
            <param name="x2"> Documentation in progress... </param>
            <param name="y2"> Documentation in progress... </param>
            <param name="aggregate2"> Documentation in progress... </param>
            <param name="aggregateLine"> Documentation in progress... </param>
            <param name="tag"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.Cluster">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer`1.GetClusters(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary> Documentation in progress... </summary>
            <param name="xMin"> Documentation in progress... </param>
            <param name="yMin"> Documentation in progress... </param>
            <param name="xMax"> Documentation in progress... </param>
            <param name="yMax"> Documentation in progress... </param>
            <param name="level"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.StartPointQuery`1">
            <summary> Documentation in progress... </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.StartPointQuery`1.clusterer">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.StartPointQuery`1.#ctor(Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer{`0})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.StartPointQuery`1"/> class. </summary>
            <param name="clusterer"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.StartPointQuery`1.GetClusters(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary> Documentation in progress... </summary>
            <param name="xMin"> Documentation in progress... </param>
            <param name="yMin"> Documentation in progress... </param>
            <param name="xMax"> Documentation in progress... </param>
            <param name="yMax"> Documentation in progress... </param>
            <param name="level"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.EndPointQuery`1">
            <summary> Documentation in progress... </summary>
            <typeparam name="T"> Documentation in progress... </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.EndPointQuery`1.clusterer">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.EndPointQuery`1.#ctor(Ptv.XServer.Controls.Map.Tools.TileBasedLineClusterer{`0})">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.EndPointQuery`1"/> class. </summary>
            <param name="clusterer"> Documentation in progress... </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.EndPointQuery`1.GetClusters(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary> Documentation in progress... </summary>
            <param name="xMin"> Documentation in progress... </param>
            <param name="yMin"> Documentation in progress... </param>
            <param name="xMax"> Documentation in progress... </param>
            <param name="yMax"> Documentation in progress... </param>
            <param name="level"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Cluster`1">
            <summary> This class holds the information for a cluster. </summary>
            <typeparam name="T"> The data item for the cluster. </typeparam>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.NumPoints">
            <summary> Gets or sets the number of points in a cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.Level">
            <summary> Gets or sets the cluster level. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.TileX">
            <summary> Gets or sets the x-key of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.TileY">
            <summary> Gets or sets the y-key of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.SumX">
            <summary> Gets or sets the centroid x value of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.SumY">
            <summary> Gets or sets the centroid y value of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.Aggregate">
            <summary> Gets or sets the aggregated value of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.Tags">
            <summary> Gets the list of items in a cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.CentroidX">
            <summary> Gets the aggregated centroid x value of the cluster. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Cluster`1.CentroidY">
            <summary> Gets the aggregated centroid y value of the cluster. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Cluster`1.#ctor(System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.Cluster`1"/> class. </summary>
            <param name="tileX"> The x key of the cluster. </param>
            <param name="tileY"> The y key of the cluster. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Cluster`1.AddPoint(Ptv.XServer.Controls.Map.Tools.PointInfo{`0})">
            <summary> Adds a point to the cluster. </summary>
            <param name="point"> The object containing the point information. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Cluster`1.AddCluster(Ptv.XServer.Controls.Map.Tools.Cluster{`0})">
            <summary> Adds a cluster. </summary>
            <param name="cluster"> The cluster object. </param>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.Tile">
            <summary> Struct for a tile key. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Tile.X">
            <summary> Gets or sets the x key. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.Tile.Y">
            <summary> Gets or sets the y key. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Tile.Equals(System.Object)">
            <summary> Documentation in progress... </summary>
            <param name="obj"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.Tile.GetHashCode">
            <summary> Serves as the hash function </summary>
            <returns> A hash code for the current object. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.PointInfo`1">
            <summary> This class holds the information for a single point. </summary>
            <typeparam name="T"> The item type for the cluster. </typeparam>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.PointInfo`1.X">
            <summary> Gets or sets the x coordinate of the point. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.PointInfo`1.Y">
            <summary> Gets or sets the y coordinate of the point. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.PointInfo`1.Aggregate">
            <summary> Gets or sets the aggregate value of the point. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Tools.PointInfo`1.Tag">
            <summary> Gets or sets the item of the point. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1">
            <summary> This class creates cluster objects for points. </summary>
            <typeparam name="T"> The type of the items which should be clustered. </typeparam>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.maxLevel">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.minLevel">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.referenceSize">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.points">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.clusterLevels">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.#ctor(System.Double,System.Int32,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1"/> class. </summary>
            <param name="referenceSize"> The logical size of the cluster area. </param>
            <param name="minLevel"> The minimum level for which clusters should be created. </param>
            <param name="maxLevel"> The maximum level for which clusters should be created. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.AddPoint(System.Double,System.Double,System.Double,`0)">
            <summary> Adds a point to the clusterer. </summary>
            <param name="x"> The x coordinate of the point. </param>
            <param name="y"> The y coordinate of the point. </param>
            <param name="aggregate"> A value to aggregate for the points. </param>
            <param name="tag"> The item for the point. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.Cluster">
            <summary> Clusters the elements. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TileBasedPointClusterer`1.GetClusters(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary> Gets the clusters for a bounding box and a level. </summary>
            <param name="xMin"> The minimum x coordinate of the bounding box. </param>
            <param name="yMin"> The minimum y coordinate of the bounding box. </param>
            <param name="xMax"> The maximum x coordinate of the bounding box. </param>
            <param name="yMax"> The maximum y coordinate of the bounding box. </param>
            <param name="level"> The level of the clusters. </param>
            <returns> The list of cluster objects. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.IPointClusterQuery`1">
            <summary> Generic interface for querying clusters. </summary>
            <typeparam name="T"> The item type of the objects. </typeparam>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.IPointClusterQuery`1.GetClusters(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary> Gets the clusters for a bounding box and a level. </summary>
            <param name="xMin"> The minimum x coordinate of the bounding box. </param>
            <param name="yMin"> The minimum y coordinate of the bounding box. </param>
            <param name="xMax"> The maximum x coordinate of the bounding box. </param>
            <param name="yMax"> The maximum y coordinate of the bounding box. </param>
            <param name="level"> The level of the clusters. </param>
            <returns> The list of cluster objects. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.SpatialReference">
            <summary> Spatial reference systems which can directly used for WPF map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.SpatialReference.PtvMercator">
            <summary> PTV/Esri Spheric Mercator (SRID 53004/1076131). </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.SpatialReference.PtvMercatorInvertedY">
            <summary> PTV/Esri Spheric Mercator with inverted Y axis. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.SpatialReference.WebMercator">
            <summary> Google/MS Spheric Mercator (SRID 3857/900913). </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Tools.SpatialReference.WebMercatorInvertedY">
            <summary> Google/MS Spheric Mercator with inverted Y axis. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Tools.TransformFactory">
            <summary>
            The TransformFactory creates WPF transformations which can be used 
            as RenderTransform for child canvases of the GeoCanvas object.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Tools.TransformFactory.CreateTransform(Ptv.XServer.Controls.Map.Tools.SpatialReference)">
            <summary> Returns a Transform object for a spatial reference. </summary>
            <param name="reference"> The spatial reference. </param>
            <returns> The resulting render transform. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.MapCanvas">
            <summary> The main canvas which holds viewable elements for a map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.#ctor(Ptv.XServer.Controls.Map.MapView)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Canvases.MapCanvas"/> class. Stores the parent map and adds
            listeners to the map viewport changed events. </summary>
            <param name="mapView"> The instance of the parent map. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Canvases.MapCanvas.MapView">
            <summary> Gets the parent map instance. </summary>
            <value> The parent map. </value>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Canvases.MapCanvas.CanvasCategory">
            <summary> Gets or sets the <see cref="P:Ptv.XServer.Controls.Map.Canvases.MapCanvas.CanvasCategory"/> of the canvas. The canvas category defines the z
            order of the canvas in the map.</summary>
            <value> The canvas category. </value>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.Dispose">
            <summary> Disposes the map canvas. During disposal the children of the canvas are removed and the viewport
            changed events are disconnected. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.GeoToCanvas(System.Windows.Point,System.String)">
            <summary>
            Converts a geographic point to a canvas coordinate.
            </summary>
            <param name="geoPoint">The geographic point.</param>
            <param name="spatialReferenceId">The spatial reference identifier.</param>
            <returns> The transformed canvas coordinate. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.GeoToCanvas(System.Windows.Point)">
            <summary> Converts a geographic point to a canvas point. </summary>
            <param name="geoPoint"> The geographic point. </param>
            <returns> The canvas point. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.CanvasToGeo(System.Windows.Point)">
            <summary> Converts a canvas point to a geographic point. </summary>
            <param name="canvasPoint"> The canvas point. </param>
            <returns> The geographic point. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.Update(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary> Updates the map content. The map content consists of all elements of the canvas. This method is
            for example triggered when the viewport changes. </summary>
            <param name="updateMode"> The update mode tells which kind of change is to be processed by the update call. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.BeforeUpdate(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <summary> Callback to precede the updating of the map content. </summary>
            <param name="updateMode"> The update mode tells which kind of change is to be processed by the update call. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary> Receives events from the centralized event manager. </summary>
            <param name="managerType">The type of the WeakEventManager calling this method.</param>
            <param name="sender">Object that originated the event.</param>
            <param name="e">Event data.</param>
            <returns> True if the listener handled the event. It is considered an error by the WeakEventManager
            handling in WPF to register a listener for an event that the listener does not handle. Regardless,
            the method should return false if it receives an event that it does not recognize or handle. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.CanvasToPtvMercator(System.Windows.Point)">
            <summary> This method implements a transformation from canvas coordinates to logical coordinates. </summary>
            <param name="canvasPoint"> The canvas point. </param>
            <returns> The logical point. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.MapCanvas.PtvMercatorToCanvas(System.Windows.Point)">
            <summary> This method implements a transformation from logical coordinates to canvas coordinates. </summary>
            <param name="mercatorPoint"> The Mercator point. </param>
            <returns> The canvas point. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.UpdateMode">
            <summary> Indicates the mode of the update. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.UpdateMode.Refresh">
            <summary> Called for initial insert or refresh on the layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.UpdateMode.BeginTransition">
            <summary> Called when a transition begins. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.UpdateMode.WhileTransition">
            <summary> Called during a transition. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.UpdateMode.EndTransition">
            <summary> Called after a transition (Current-xxx-Values == Final-xxx-values). </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.CanvasCategory">
            <summary>
            The enumeration defines the category of map canvases. The categories specify the primary z-order of canvases on
            the map. All canvases within the same category are grouped according to their index in the layer collection.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.CanvasCategory.BaseMap">
            <summary> Category for the base map (i.e. xServer/Bing) content. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.CanvasCategory.Content">
            <summary> Category for the user content. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.CanvasCategory.ContentLabels">
            <summary> Category for the labels of the user content. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.CanvasCategory.SelectedObjects">
            <summary> Category for the selected objects. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.CanvasCategory.TopMost">
            <summary> Category for top-most objects. </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.NamespaceDoc">
            <summary>
            A canvas holds the graphic items of a map. One or more canvases are used for a layer. There are two main types
            of canvases: A <see cref="T:Ptv.XServer.Controls.Map.Canvases.WorldCanvas"/>, whose elements have positions and dimensions in world Mercator units
            and a <see cref="T:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas"/>, whose elements have positions and dimensions in screen (pixel) units. By
            using multiple canvases, the elements for different layers can interleave for different
            <see cref="T:Ptv.XServer.Controls.Map.Canvases.CanvasCategory"/> types. 
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas">
            <summary>
            Canvas with screen coordinates. Elements of the canvas have an absolute dimension (= size in pixels) but have
            to be repositioned whenever the viewport changes.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas.#ctor(Ptv.XServer.Controls.Map.MapView)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas"/> class. </summary>
            <param name="mapView"> The instance of the parent map. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas"/> class. If the second parameter
            <paramref name="addToMap"/> is set to true, the new screen canvas is added to the parent map.</summary>
            <param name="mapView"> The instance of the parent map. </param>
            <param name="addToMap"> Indicates that the canvas should be inserted to the parent map immediately. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas.CanvasToPtvMercator(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.ScreenCanvas.PtvMercatorToCanvas(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Canvases.WorldCanvas">
            <summary>
            Canvas with world coordinates. Elements of the canvas do not have to be repositioned when the viewport changes,
            but have world-dimension (= size in Mercator units).
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.canvasTransform">
            <summary> Transformation instance of the canvas. This variable is used to transform coordinates from one
            format to another. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.#ctor(Ptv.XServer.Controls.Map.MapView)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Canvases.WorldCanvas"/> class. </summary>
            <param name="mapView"> The instance of the parent map. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.#ctor(Ptv.XServer.Controls.Map.MapView,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Canvases.WorldCanvas"/> class. If the parameter
            <paramref name="addToMap"/> is set to true, the canvas is added to the parent map. </summary>
            <param name="mapView"> The instance of the parent map. </param>
            <param name="addToMap"> Indicates that the canvas should inserted to the parent map immediately. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.InitializeTransform">
            <summary> Initializes the transformation instance which is needed to transform coordinates from one format
            to another one. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.CanvasToPtvMercator(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.PtvMercatorToCanvas(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Canvases.WorldCanvas.BeforeUpdate(Ptv.XServer.Controls.Map.Canvases.UpdateMode)">
            <inheritdoc/>  
        </member>
        <member name="T:Ptv.XServer.Controls.Map.MapView">
            <summary> The main WPF map. </summary>
            <summary>
            MapView
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.x">
            <summary> X coordinate of the map center. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.y">
            <summary> Y coordinate of the map center. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.translateTransform">
            <summary> Transformation object for the pan offset. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.zoomTransform">
            <summary> Transformation object for the zoom scaling. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.screenOffsetTransform">
            <summary> Transformation object for the shift of the map center on screen. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.logicalWheelOffsetTransform">
            <summary> Transformation object for the logical wheel offset. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.physicalWheelOffsetTransform">
            <summary> Transformation object for the physical wheel offset. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.envMapRectangle">
            <summary> Bounds of the map envelope. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.currentPanAnimationClock">
            <summary> Clock for the panning action signaling when panning has finished. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.currentZoomAnimationClock">
            <summary> Clock for the zooming action signaling when zooming has finished. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.maxZoom">
            <summary> Maximum zoom level. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.minZoom">
            <summary> Minimum zoom level. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.EARTH_RADIUS">
            <summary> The earth radius of the map is 6371000.0 (so the main projection is PTV_Mercator). </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.LogicalSize">
            <summary> The size of the map in logical coordinates. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.ReferenceSize">
            <summary> An arbitrary value. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.ZoomAdjust">
            <summary> The zoom adjust is used to minimize rounding errors in deep zoom levels. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.Printing">
            <summary> Gets or sets a value indicating whether the printing of a map is in process. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.ZoomScale">
            <summary> Gets or sets the current zoom scale value. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FitInWindow">
            <summary> Gets or sets a value indicating whether the map should be fitted in the window or not. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.MaxZoom">
            <summary> Gets or sets the maximal level of detail according to the standard tiling scheme. The current
            detail level (see <see cref="P:Ptv.XServer.Controls.Map.MapView.FinalZoom"/> property) is corrected, if it is higher than the new maximum value. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.canvasOffset">
            <summary>
            The internal offset for deep zoom
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.OriginOffset">
            <summary>
            Gets the origin offset value for Deep Zoom
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.MinZoom">
            <summary> Gets or sets the minimal level of detail according to the standard tiling scheme. The current
            detail level (see <see cref="P:Ptv.XServer.Controls.Map.MapView.FinalZoom"/> property) is corrected, if it is lower than the new minimum value. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FinalZoom">
            <summary> Gets the level of detail according to the standard tiling scheme (float value). </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetZoom(System.Double,System.Boolean)">
            <summary> Sets the level of detail according to the standard tiling scheme. </summary>
            <param name="value"> The new level. </param>
            <param name="useAnimation"> If true the zooming is animated. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.CurrentZoom">
            <summary> Gets the floating tile level while in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.IsAnimating">
            <summary> Gets a value indicating whether an animation is in progress. Returns true while the map performs
            a transition to a new map section. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.CurrentX">
            <summary> Gets the logical x-coordinate while the map is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.CurrentY">
            <summary> Gets the logical y-coordinate while the map is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FinalX">
            <summary> Gets the x-coordinate after the map was in animation mode / the anticipated x-coordinate while the map is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FinalY">
            <summary> Gets the y-coordinate after the map was in animation mode / the anticipated y-coordinate while the map is
            in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.CurrentScale">
            <summary> Gets the scale factor while the map is in animation mode. Defined in Logical units per pixel. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FinalScale">
            <summary> Gets the scale factor after the map was in animation mode / the anticipated scale factor while the map is
            in animation mode. Defined in logical units per pixel. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.MetersPerPixel">
            <summary> Gets the number of meters spanned by one pixel. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.Center">
            <summary> Gets or sets the center of the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.ScaleProperty">
            <summary> Dependency property for the scale value of the map object. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.CenterProperty">
            <summary> Dependency property for the center of the map. This enables animation, styling, binding, etc...</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.MapView"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.FireViewportBeginChanged">
            <summary> Fires the ViewportBeginChanged event. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.FireViewportWhileChanged">
            <summary> Fires the ViewportWhileChanged event. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.FireViewportEndChanged">
            <summary> Fires the ViewportEndChanged event. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.DoPan(System.Boolean)">
            <summary> Starts a panning in the map. </summary>
            <param name="animate"> Flag showing if panning should be animated or not. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.runningPanClocks">
            <summary> List of all running clocks which are signaling the end of different panning actions. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.runningZoomClocks">
            <summary> List of all running clocks which are signaling the end of different zooming actions. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.DoZoom(System.Boolean)">
            <summary> Starts a zooming in the map. </summary>
            <param name="animate"> Flag showing if zooming should be animated or not. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetZoomScale(System.Double)">
            <summary> Sets the zoom scale of the map and fires the viewport while changed event. </summary>
            <param name="zoomScale"> New zoom scale to be set. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.ResetOffset">
            <summary> Resets the offset values in the map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.OnZoomScaleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the zoom scale. </summary>
            <param name="d"> Dependency object which has been changed. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.OnCenterChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Event handler for a change of the map center. </summary>
            <param name="obj"> Dependency object which has been changed. </param>
            <param name="args"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.zoomAnimation_Completed(System.Object,System.EventArgs)">
            <summary> Event handler for a completion of the zoom animation. Stops the clock and fires the viewport end changed event. </summary>
            <param name="sender"> Sender of the Completed event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.panAnimation_Completed(System.Object,System.EventArgs)">
            <summary> Event handler for a completion of the pan animation. Stops the clock and fires the viewport end changed event. </summary>
            <param name="sender"> Sender of the Completed event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.MapView_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a completion of the map loading. Sets the map envelope to the current values. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.MapView_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary> Event handler for a change of the map size. Adapts the zoom level and sends the viewport changed events. </summary>
            <param name="sender"> Sender of the SizeChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetEnvelopeHelper(Ptv.XServer.Controls.Map.MapRectangle,System.Boolean,System.Double)">
            <summary> Helper method which sets the map envelope depending on the different parameters. </summary>
            <param name="rect"> Envelope of the map. </param>
            <param name="animate"> Flag showing if the envelope change is to be animated or not. </param>
            <param name="maxAutoZoom"> Maximum automatic zoom. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetXYZHelper(System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary> Helper method which sets a new map region depending on the given parameters. </summary>
            <param name="xCenter"> X coordinate of the map center. </param>
            <param name="yCenter"> Y coordinate of the map center. </param>
            <param name="zoom"> Zoom level to be displayed. </param>
            <param name="animatePan"> Flag showing if panning should be animated or not. </param>
            <param name="animateZoom"> Flag showing if zooming should be animated or not. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.FlyTo(System.Windows.Point,System.Double)">
            <summary> Helper method which scrolls the map to a certain point and zooms to the given zoom level. </summary>
            <param name="point"> New center point of the map. </param>
            <param name="zoom"> New zoom level to show. </param>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.MapView.ViewportBeginChanged">
            <summary> Event indicating the beginning of a change of the visible map section. This event is intended for
            more longtime actions (for example reading DB-objects), when the map section will change. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.MapView.ViewportEndChanged">
            <summary> Event indicating the ending of a change of the visible map section. It is the counterpart of the
            <seealso cref="E:Ptv.XServer.Controls.Map.MapView.ViewportBeginChanged"/> event. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.MapView.ViewportWhileChanged">
            <summary> Event indicating an intermediate view, when animation mode is active. It can be used to adapt the
            size of WPF objects, or other actions, which are not time-consuming. This event may called multiple times,
            when animation mode is active. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.CurrentEnvelope">
            <summary> Gets the bounding box of the visible map section while the map is in animation mode. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.MapView.FinalEnvelope">
            <summary> Gets the anticipated bounding box of the visible map section after the map was in animation mode / the
            current box while the map is in animation mode. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle,System.Boolean)">
            <summary> Sets the visible map section to a bounding box, so the box is contained in the map section. </summary>
            <param name="rect"> The bounding box. </param>
            <param name="animate"> Animate the transition to the new map section. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle,System.Boolean,System.Double)">
            <summary> Sets the visible map section to a bounding box, so the box is contained in the map section. </summary>
            <param name="rect"> The bounding box. </param>
            <param name="animate"> Animate the transition to the new map section. </param>
            <param name="maxAutoZoom"> Additional specification of the maximal zoom. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetXYZ(System.Double,System.Double,System.Double,System.Boolean)">
            <summary> Positions the map to a center and zoom factor. </summary>
            <param name="xLogicalUnit"> X-coordinate in logical units. </param>
            <param name="yLogicalUnit"> Y-coordinate in logical units. </param>
            <param name="zoom"> The zoom factor according to the standard tiling/zooming scheme. </param>       
            <param name="animate"> Animates the transition. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.SetXYZ(System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary> Positions the map to a center and zoom factor. </summary>
            <param name="xLogicalUnit"> X-coordinate in logical units. </param>
            <param name="yLogicalUnit"> Y-coordinate in logical units. </param>
            <param name="zoom"> The zoom factor according to the standard tiling/zooming scheme. </param>
            <param name="animatePan"> Animates the pan transition. </param>
            <param name="animateZoom"> Animates the zoom transition. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.ZoomAround(System.Windows.Point,System.Double,System.Boolean)">
            <summary> Zooms around a point. </summary>
            <param name="point"> Center of the new map section. </param>
            <param name="zoom"> The zoom factor according to the standard tiling/zooming scheme. </param>       
            <param name="animate"> Animate the transition to the new map section. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.Layers">
            <summary>
            Layers Name Field
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.TopPaneCanvas">
            <summary>
            TopPaneCanvas Name Field
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.ForePaneCanvas">
            <summary>
            ForePaneCanvas Name Field
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.GeoCanvas">
            <summary>
            GeoCanvas Name Field
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.MapView.BackPaneCanvas">
            <summary>
            BackPaneCanvas Name Field
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.MapView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.WpfMap">
            <summary> The main WPF map control with pre-customized gadgets and themes. </summary>
            <summary>
            WpfMap
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bScaleInitialized">
            <summary> Flag showing if the scale gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bZoomSliderInitialized">
            <summary> Flag showing if the zoom slider gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bCoordinatesInitialized">
            <summary> Flag showing if the coordinates gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bOverviewInitialized">
            <summary> Flag showing if the overview map gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bLayersInitialized">
            <summary> Flag showing if the layers gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bMagnifierInitialized">
            <summary> Flag showing if the magnifier gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.bNavigationInitialized">
            <summary> Flag showing if the magnifier gadget has already been initialized. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowScaleProperty">
            <summary> Property to show the scale gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowScale">
            <summary> Gets or sets a value indicating whether the scale gadget is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowZoomSliderProperty">
            <summary> Property to show the zoom slider gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowZoomSlider">
            <summary> Gets or sets a value indicating whether the zoom slider gadget is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowCoordinatesProperty">
            <summary> Property to show the coordinates gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowCoordinates">
            <summary> Gets or sets a value indicating whether the coordinates gadget is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowOverviewProperty">
            <summary> Property to show the overview map. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowOverview">
            <summary> Gets or sets a value indicating whether the overview map is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowLayersProperty">
            <summary> Property to show the layers gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowLayers">
            <summary> Gets or sets a value indicating whether the layers gadget is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowMagnifierProperty">
            <summary> Property to show the magnifier gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowMagnifier">
            <summary> Gets or sets a value indicating whether the magnifier gadget is shown or made invisible. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.ShowNavigationProperty">
            <summary> Property to show the navigation gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.WpfMap.ShowNavigation">
            <summary> Gets or sets a value indicating whether the layers gadget is shown or made invisible. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.WpfMap.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.WpfMap"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.WpfMap.Gadgets_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary> Handler for a change of the gadgets observable dictionary. Here we correct the hidden properties
            as they can be changed in the XAML code before the gadgets are initialized. </summary>
            <param name="sender"> Sender of the CollectionChanged event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.WpfMap.CopyrightImagePanel">
            <summary>
            CopyrightImagePanel Name Field
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.WpfMap.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.NamespaceDoc">
            <summary>
            <para>
            The <see cref="T:Ptv.XServer.Controls.Map.Map"/> namespace contains the classes to visualize your data in an interactive map.
            </para>
            <para>
            The main type is the <see cref="T:Ptv.XServer.Controls.Map.WpfMap"/>, which can be added to a XAML user control. An alternative
            <see cref="T:Ptv.XServer.Controls.Map.FormsMap"/> can be used for easy WinForms integration. Both controls inherit from
            <see cref="T:Ptv.XServer.Controls.Map.Map"/> and implement <see cref="T:Ptv.XServer.Controls.Map.IMap"/>. The Map type can be used to build up a
            customized map control.
            </para>
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Map">
            <summary> This class represents the basic map control without any gadgets. It is used as the WPFMap's base class,
            and as a proxy for the WinForms map control. So, it is possible to provide a common implementation for both
            environments, i.e. WPF and WinForms.</summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.Map"/> class. By default, the map uses animation
            and the scale is shown in km. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Map.ViewportBeginChanged">
            <inheritdoc/>  
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Map.ViewportEndChanged">
            <inheritdoc/>  
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Map.ViewportWhileChanged">
            <inheritdoc/>  
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.xmapStyle">
            <summary> The style profile of the xMapServer base map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.copyrightHintText">
            <summary> The text block which displays the hint for the missing xMap url. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.mapView">
            <summary> MapView to be displayed in the map. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.Gadgets">
            <summary> Dictionary holding all existing gadgets like Scale gadget, zoom slider etc. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.DefaultThemeResources">
            <summary> Gets or sets the default theme. The default theme is initialized in the WpfMap.xaml file and used
            by <see cref="P:Ptv.XServer.Controls.Map.Map.UseDefaultTheme"/>. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.Map_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary> Event handler for a successful load of the map. Shows the map in a grid. </summary>
            <param name="sender"> Sender of the Loaded event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.Map.UseMilesChanged">
            <summary> Event indicating a change of the UseMiles property. It can be used to update the scale gadget. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.ToolTipManagement">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Xmap2LayerFactory">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Ptv#XServer#Controls#Map#IToolTipManagement#IsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.ToolTipDelay">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MaxPixelDistance">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.useMiles">
            <summary> Flag to choose whether the metric or the mile based system is to be used for example for the scale display. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.UseMiles">
            <summary> Gets or sets a value indicating whether the scale is displayed in miles or it is displayed in km. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Map.bUseDefaultTheme">
            <summary> Flag indicating whether the default theme is to be used for gadget display. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.UseDefaultTheme">
            <summary><para> Gets or sets a value indicating whether the built-in PTV theme should be used, and thus
            overriding an optionally set style. The application theme can be set in the App.xaml. If no theme at all is
            set and the default PTV theme is not used either, the UI will look like the current Windows theme. </para>
            <para> See the <conceptualLink target="5e97e57f-ad50-4dda-af0b-e117af8c4fcd"/> topic for an example. </para></summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Layers">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.XMapUrl">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.XMapCredentials">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.XMapStyle">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.XMapCopyright">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.FitInWindow">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.IsAnimating">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MaxZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MinZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MetersPerPixel">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.SetThemeFromXaml(System.IO.Stream)">
            <summary><para> Sets the current theme from a XAML file provided by the stream. The XAML file must contain a
            ResourceDictionary on the top level. See the attached XAML files in the demo project. </para>
            <para> See the <conceptualLink target="5e97e57f-ad50-4dda-af0b-e117af8c4fcd"/> topic for an example. </para></summary>
            <param name="stream"> The stream providing a XML file with a ResourceDictionary on the top level. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.SetMapLocation(System.Windows.Point,System.Double)">
            <summary> Set the center and zooming level of the map. </summary>
            <param name="point"> The center point. </param>
            <param name="zoom"> The zoom level. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.SetMapLocation(System.Windows.Point,System.Double,System.String)">
            <summary> Set the center and zooming level of the map. </summary>
            <param name="point"> The center point. </param>
            <param name="zoom"> The zoom level. </param>
            <param name="spatialReferenceId"> The spatial reference identifier. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Zoom">
            <summary> Gets or sets the zoom level of the map. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.PrintMap(System.Boolean,System.String)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.Dispose">
            <summary> Disposal of the map. All layers are disposed. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.MouseToGeo(System.Windows.Input.MouseEventArgs,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.MouseToGeo(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.RelToMapViewAsGeo(System.Windows.Point,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.RelToMapViewAsGeo(System.Windows.Point)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GeoAsRelToMapView(System.Windows.Point,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GeoAsRelToMapView(System.Windows.Point)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GetEnvelope">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GetEnvelope(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GetCurrentEnvelope">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Map.GetCurrentEnvelope(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.UseAnimation">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.InvertMouseWheel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MouseWheelSpeed">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MouseDoubleClickZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.MouseDragMode">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.CoordinateDiplayFormat">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.ZoomLevel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Scale">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.Center">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.CurrentZoomLevel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.CurrentScale">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Map.CurrentCenter">
            <inheritdoc/>  
        </member>
        <member name="T:Ptv.XServer.Controls.Map.VisualTreeHelperExtensions">
            <summary> Provides extensions for VisualTreeHelper. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.VisualTreeHelperExtensions.GetParent(System.Windows.DependencyObject)">
            <summary> Gets the parent of a dependency object </summary>
            <param name="obj">The dependency object to get the parent for</param>
            <returns>Parent of the dependency object</returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.VisualTreeHelperExtensions.FindAncestor``1(System.Windows.DependencyObject)">
            <summary> Finds a specific ancestor of a dependency object. </summary>
            <typeparam name="T">Type to lookup</typeparam>
            <param name="obj">Dependency object to find the ancestor for.</param>
            <returns>Found ancestor or null.</returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Resources.Strings">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Aerials">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Aerials ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Background">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Background ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Caption">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Layers ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.East">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die E ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Labels">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Labels ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.North">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die N ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Options">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Selectability">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Selectability ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.South">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die S ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTrafficIncidentsAbsoluteSpeed">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Absolute speed: {0} km/h ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTrafficIncidentsDelay">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Delay: {0} min ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTrafficIncidentsLength">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Length: {0:0.000} km ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTrafficIncidentsMessage">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Message: ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesCombustibles">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Not allowed for vehicles carrying combustibles. ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesFreeForDelivery">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die This restriction does not concern delivery vehicles. ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesHazardousGoods">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Not allowed for vehicles carrying hazardous goods. ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesHazardousToWaters">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Not allowed for vehicles carrying goods hazardous to waters. ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesLoadType">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Not allowed for vehicles of load type: {0}. ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesLoadTypeGoods">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Goods ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesLoadTypeMixed">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Mixed ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesLoadTypePassenger">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Passenger ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesMaxAxleLoad">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Maximal axle load: {0:###,###} kg ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesMaxHeight">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Maximal height: {0:0.00} m ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesMaxLength">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Maximal length: {0:0.00} m ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesMaxWeight">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Maximal weight: {0:###,###} kg ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesMaxWidth">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Maximal width: {0:0.00} m ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesTotalPermittedWeight">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Total permitted weight: {0:###,###} kg ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.ToolTipTruckAttributesTunnelRestriction">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Tunnel restriction code: {0} ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.TruckAttributes">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Truck attributes ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.Visibility">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Visibility ähnelt.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Resources.Strings.West">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die W ähnelt.
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Localization.NamespaceDoc">
            <summary>
            <para>
            The <see cref="T:Ptv.XServer.Controls.Map.Localization.MapLocalizer"/> types can be used to set a custom localization for
            the texts used by the map control. 
            The <see cref="T:Ptv.XServer.Controls.Map.Localization.MapStringId"/> defines the string to be localized.
            </para>
            </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Localization.MapLocalizer">
            <summary>
            Override this class to implement a custom localizer.
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapLocalizer.Active">
            <summary>
            The active localizer used by the map controls.
            </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Localization.MapLocalizer.GetString(Ptv.XServer.Controls.Map.Localization.MapStringId)">
            <summary>
            Gets the localizes string for a <see cref="T:Ptv.XServer.Controls.Map.Localization.MapStringId"/>.
            </summary>
            <param name="id">The id of the string.</param>
            <returns> The localized text. </returns>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Localization.MapLocalizer.GetLocalizedString(Ptv.XServer.Controls.Map.Localization.MapStringId)">
            <summary>
            Override this method to use a custom localization.
            </summary>
            <param name="id">The id of the string.</param>
            <returns> The localized text. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Localization.ResourceManagerLocalizer">
            <summary>
            Documentation in progress...
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.ResourceManagerLocalizer.resourceMan">
            <summary>
            Documentation in progress...
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.Localization.ResourceManagerLocalizer.ResourceManager">
            <summary> Gets the cached ResourceManager instance used by this class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.Localization.ResourceManagerLocalizer.GetString(Ptv.XServer.Controls.Map.Localization.MapStringId)">
            <summary>
            Gets the localized string for a <see cref="T:Ptv.XServer.Controls.Map.Localization.MapStringId"/>.
            </summary>
            <param name="id">The id of the string.</param>
            <returns> The localized text. </returns>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.Localization.MapStringId">
            <summary>
            Documentation in progress...
            </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Aerials">
            <summary> Text for aerial layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Background">
            <summary> Text for background layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Caption">
            <summary> Text for caption. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.East">
            <summary> Text for east. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Labels">
            <summary> Text for label layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.North">
            <summary> Text for north. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Options">
            <summary> Text for options. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Selectability">
            <summary> Text for layer selectability. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.South">
            <summary> Text for south. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.TruckAttributes">
            <summary> Text for truck attributes layer. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Visibility">
            <summary> Text for layer visibility. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.West">
            <summary> Text for south. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTrafficIncidentsAbsoluteSpeed">
            <summary> Tool tip text for absolute speed value of traffic incidents. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTrafficIncidentsLength">
            <summary> Tool tip text for length of a traffic incident. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTrafficIncidentsDelay">
            <summary> Tool tip text for delay caused by a traffic incident. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTrafficIncidentsMessage">
            <summary> Tool tip text for more detailed description of a traffic incident. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesTotalPermittedWeight">
            <summary> Tool tip text for value of truck attribute permitted total weight. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesLoadType">
            <summary> Tool tip text for value of load type. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesLoadTypePassenger">
            <summary> Tool tip text for value of load type passenger. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesLoadTypeGoods">
            <summary> Tool tip text for value of load type goods. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesLoadTypeMixed">
            <summary> Tool tip text for value of load type passenger. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesMaxHeight">
            <summary> Tool tip text for value of maximal height. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesMaxWeight">
            <summary> Tool tip text for value of maximal weight. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesMaxWidth">
            <summary> Tool tip text for value of maximal width. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesMaxLength">
            <summary> Tool tip text for value of maximal length. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesMaxAxleLoad">
            <summary> Tool tip text for value of maximal axle load. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesHazardousToWaters">
            <summary> Tool tip text for not allowed for vehicles carrying goods hazardous to waters. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesHazardousGoods">
            <summary> Tool tip text for not allowed for vehicles carrying hazardous goods. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesCombustibles">
            <summary> Tool tip text for not allowed for vehicles carrying combustibles. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesFreeForDelivery">
            <summary> Tool tip text for delivery vehicles which are not concerned by the restriction. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.ToolTipTruckAttributesTunnelRestriction">
            <summary> Tool tip text for tunnel restriction code. </summary>
        </member>
        <member name="F:Ptv.XServer.Controls.Map.Localization.MapStringId.Transport">
            <summary> Text for transport layer </summary>
        </member>
        <member name="T:Ptv.XServer.Controls.Map.FormsMap">
            <summary> A wrapper for WpfMap for easy WinForms integration. </summary>
        </member>
        <member name="E:Ptv.XServer.Controls.Map.FormsMap.ViewportBeginChanged">
            <inheritdoc/>  
        </member>
        <member name="E:Ptv.XServer.Controls.Map.FormsMap.ViewportEndChanged">
            <inheritdoc/>  
        </member>
        <member name="E:Ptv.XServer.Controls.Map.FormsMap.ViewportWhileChanged">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.wpfMap">
            <summary> Gets or sets the WPF map which is shown in the form. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.host">
            <summary> Gets or sets the element host which encapsulates the WPF map and offers it as WinForms object. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.XServer.Controls.Map.FormsMap"/> class. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.FormsMap_Load(System.Object,System.EventArgs)">
            <summary> Event handler for a successful load of the forms map. </summary>
            <param name="sender"> Sender of the Load event. </param>
            <param name="e"> Event parameters. </param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.Dispose(System.Boolean)">
            <summary> Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </summary>
            <param name="disposing"> Flag indicating to dispose also the unmanaged resources of WPF map.</param>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SetThemeFromXaml(System.IO.Stream)">
            <summary> Sets the current theme from a XAML file provided by the stream. The XAML file must contain a
            ResourceDictionary on the top level. See the attached XAML files in the demo project. </summary>
            <param name="stream"> The stream providing a XML file with a ResourceDictionary on the top level. </param>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowCoordinates">
            <summary> Gets or sets a value indicating whether the coordinates gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowLayers">
            <summary> Gets or sets a value indicating whether the layers gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowMagnifier">
            <summary> Gets or sets a value indicating whether the magnifier gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowNavigation">
            <summary> Gets or sets a value indicating whether the layers gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowOverview">
            <summary> Gets or sets a value indicating whether the overview map is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowScale">
            <summary> Gets or sets a value indicating whether the scale gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ShowZoomSlider">
            <summary> Gets or sets a value indicating whether the zoom slider gadget is shown or made invisible. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.UseDefaultTheme">
            <summary> Gets or sets a value indicating whether the built-in PTV theme should be used, and thus overriding an optionally set
            style. The application theme can be set in the App.xaml. If no theme at all is set and the default PTV
            theme is not used either, the UI will look like the current Windows theme. </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.WrappedMap">
            <summary>
            Gets the wrapped Wpf map instance. This can be used to get to the inner Wpf elements, e.g. to support 
            mouse events on Wpf level.
            </summary>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.Layers">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.XMapUrl">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.XMapCopyright">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.XMapCredentials">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.XMapStyle">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.FitInWindow">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.IsAnimating">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MaxZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MinZoom">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MetersPerPixel">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SetMapLocation(System.Windows.Point,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SetMapLocation(System.Windows.Point,System.Double,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.UseMiles">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GetEnvelope">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GetEnvelope(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SetEnvelope(Ptv.XServer.Controls.Map.MapRectangle,System.String)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GetCurrentEnvelope">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GetCurrentEnvelope(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.MouseToGeo(System.Windows.Input.MouseEventArgs,System.String)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.MouseToGeo(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.RelToMapViewAsGeo(System.Windows.Point,System.String)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.RelToMapViewAsGeo(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GeoAsRelToMapView(System.Windows.Point,System.String)">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.GeoAsRelToMapView(System.Windows.Point)">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.UseAnimation">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.InvertMouseWheel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MouseWheelSpeed">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MouseDoubleClickZoom">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.MouseDragMode">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.CoordinateDiplayFormat">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ZoomLevel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.Scale">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.Center">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.CurrentZoomLevel">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.CurrentScale">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.CurrentCenter">
            <inheritdoc/>  
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.PrintMap(System.Boolean,System.String)">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.ToolTipManagement">
            <inheritdoc/>  
        </member>
        <member name="P:Ptv.XServer.Controls.Map.FormsMap.Xmap2LayerFactory">
            <inheritdoc/>  
        </member>
        <member name="F:Ptv.XServer.Controls.Map.FormsMap.GW_CHILD">
            <summary> The constant value for the child window handle. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.SynchChildEnableState">
            <summary> Synchronizes the enabled state for all child windows. </summary>
        </member>
        <member name="M:Ptv.XServer.Controls.Map.FormsMap.OnEnabledChanged(System.EventArgs)">
            <summary>
            Contains a bug fix resolving an issue, when this control is not enabled correctly in ElementHost.
            </summary>
            <remarks>
            Further details can be seen in http://support.microsoft.com/kb/955753 .
            </remarks>
            <param name="e"> The event args of the changed event. </param>
        </member>
        <member name="T:xserver.IXMapWSBinding">
            <summary> Generic interface which encapsulates the xMapServer ws implementation. </summary>
        </member>
        <member name="M:xserver.IXMapWSBinding.renderMap(xserver.MapSection,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <summary> See xServer documentation for details. </summary>
            <param name="MapSection_1"> See xServer documentation for details. </param>
            <param name="MapParams_2"> See xServer documentation for details. </param>
            <param name="ImageInfo_3"> See xServer documentation for details. </param>
            <param name="ArrayOfLayer_4"> See xServer documentation for details. </param>
            <param name="boolean_5"> See xServer documentation for details. </param>
            <param name="CallerContext_6"> See xServer documentation for details. </param>
            <returns> See xServer documentation for details. </returns>
        </member>
        <member name="M:xserver.IXMapWSBinding.renderMapBoundingBox(xserver.BoundingBox,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <summary> See xServer documentation for details. </summary>
            <param name="BoundingBox_1"> See xServer documentation for details. </param>
            <param name="MapParams_2"> See xServer documentation for details. </param>
            <param name="ImageInfo_3"> See xServer documentation for details. </param>
            <param name="ArrayOfLayer_4"> See xServer documentation for details. </param>
            <param name="boolean_5"> See xServer documentation for details. </param>
            <param name="CallerContext_6"> See xServer documentation for details. </param>
            <returns> See xServer documentation for details. </returns>
        </member>
        <member name="M:xserver.IXMapWSBinding.renderMapRot(xserver.MapSectionRot,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <summary> See xServer documentation for details. </summary>
            <param name="MapSectionRot_1"> See xServer documentation for details. </param>
            <param name="MapParams_2"> See xServer documentation for details. </param>
            <param name="ImageInfo_3"> See xServer documentation for details. </param>
            <param name="ArrayOfLayer_4"> See xServer documentation for details. </param>
            <param name="boolean_5"> See xServer documentation for details. </param>
            <param name="CallerContext_6"> See xServer documentation for details. </param>
            <returns> See xServer documentation for details. </returns>
        </member>
        <member name="T:xserver.XMapWSService">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.#ctor">
            <remarks/>
        </member>
        <member name="E:xserver.XMapWSService.renderMapCompleted">
            <remarks/>
        </member>
        <member name="E:xserver.XMapWSService.renderMapBoundingBoxCompleted">
            <remarks/>
        </member>
        <member name="E:xserver.XMapWSService.renderMapRotCompleted">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMap(xserver.MapSection,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.BeginrenderMap(xserver.MapSection,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.EndrenderMap(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapAsync(xserver.MapSection,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapAsync(xserver.MapSection,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapBoundingBox(xserver.BoundingBox,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.BeginrenderMapBoundingBox(xserver.BoundingBox,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.EndrenderMapBoundingBox(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapBoundingBoxAsync(xserver.BoundingBox,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapBoundingBoxAsync(xserver.BoundingBox,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapRot(xserver.MapSectionRot,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.BeginrenderMapRot(xserver.MapSectionRot,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.EndrenderMapRot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapRotAsync(xserver.MapSectionRot,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.renderMapRotAsync(xserver.MapSectionRot,xserver.MapParams,xserver.ImageInfo,xserver.Layer[],System.Boolean,xserver.CallerContext,System.Object)">
            <remarks/>
        </member>
        <member name="M:xserver.XMapWSService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:xserver.MapSection">
            <remarks/>
        </member>
        <member name="P:xserver.MapSection.center">
            <remarks/>
        </member>
        <member name="P:xserver.MapSection.scale">
            <remarks/>
        </member>
        <member name="P:xserver.MapSection.scrollHorizontal">
            <remarks/>
        </member>
        <member name="P:xserver.MapSection.scrollVertical">
            <remarks/>
        </member>
        <member name="P:xserver.MapSection.zoom">
            <remarks/>
        </member>
        <member name="T:xserver.Point">
            <remarks/>
        </member>
        <member name="P:xserver.Point.point">
            <remarks/>
        </member>
        <member name="T:xserver.PlainPoint">
            <remarks/>
        </member>
        <member name="P:xserver.PlainPoint.x">
            <remarks/>
        </member>
        <member name="P:xserver.PlainPoint.y">
            <remarks/>
        </member>
        <member name="P:xserver.PlainPoint.z">
            <remarks/>
        </member>
        <member name="P:xserver.PlainPoint.zSpecified">
            <remarks/>
        </member>
        <member name="T:xserver.PlainGeometryBase">
            <remarks/>
        </member>
        <member name="T:xserver.TransientVO">
            <remarks/>
        </member>
        <member name="T:xserver.WatchOptions">
            <remarks/>
        </member>
        <member name="P:xserver.WatchOptions.maximumPollingPeriod">
            <remarks/>
        </member>
        <member name="P:xserver.WatchOptions.maximumPollingPeriodSpecified">
            <remarks/>
        </member>
        <member name="P:xserver.WatchOptions.progressUpdatePeriod">
            <remarks/>
        </member>
        <member name="P:xserver.WatchOptions.progressUpdatePeriodSpecified">
            <remarks/>
        </member>
        <member name="T:xserver.OptimizationProgress">
            <remarks/>
        </member>
        <member name="P:xserver.OptimizationProgress.currentLoopIndex">
            <remarks/>
        </member>
        <member name="P:xserver.OptimizationProgress.lastLoopIndex">
            <remarks/>
        </member>
        <member name="P:xserver.OptimizationProgress.progress">
            <remarks/>
        </member>
        <member name="T:xserver.KeyFigures">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.costOfObjectiveFunction">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.numberOfInfeasibleOrders">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.numberOfScheduledOrders">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.numberOfScheduledVehicles">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.numberOfUnscheduledOrders">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalChainCost">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalChainPeriod">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourCost">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourCount">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourDistance">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourDrivingPeriod">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourPeriod">
            <remarks/>
        </member>
        <member name="P:xserver.KeyFigures.totalTourWaitingPeriod">
            <remarks/>
        </member>
        <member name="T:xserver.ImprovementProgress">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.bestPlan">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.currentPlan">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.initialPlan">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.availableMachineTime">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.iterationIndex">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.numberOfImprovements">
            <remarks/>
        </member>
        <member name="P:xserver.ImprovementProgress.usedMachineTime">
            <remarks/>
        </member>
        <member name="T:xserver.DistanceMatrixCalculationProgress">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixCalculationProgress.currentDistanceMatrixProgress">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixCalculationProgress.currentDimaIndex">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixCalculationProgress.dimaId">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixCalculationProgress.lastDimaIndex">
            <remarks/>
        </member>
        <member name="T:xserver.DistanceMatrixProgress">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixProgress.currentRowIndex">
            <remarks/>
        </member>
        <member name="P:xserver.DistanceMatrixProgress.lastRowIndex">
            <remarks/>
        </member>
        <member name="T:xserver.JobProgress">
            <remarks/>
        </member>
        <member name="T:xserver.ZoneLoadingProgress">
            <remarks/>
        </member>
        <member name="P:xserver.ZoneLoadingProgress.action">
            <remarks/>
        </member>
        <member name="P:xserver.ZoneLoadingProgress.optimizationProgress">
            <remarks/>
        </member>
        <member name="T:xserver.TerritoryProgress">
            <remarks/>
        </member>
        <member name="P:xserver.TerritoryProgress.distanceMatrixProgress">
            <remarks/>
        </member>
        <member name="P:xserver.TerritoryProgress.action">
            <remarks/>
        </member>
        <member name="P:xserver.TerritoryProgress.optimizationProgress">
            <remarks/>
        </member>
        <member name="T:xserver.ClusterProgress">
            <remarks/>
        </member>
        <member name="P:xserver.ClusterProgress.distanceMatrixProgress">
            <remarks/>
        </member>
        <member name="P:xserver.ClusterProgress.optimizationProgress">
            <remarks/>
        </member>
        <member name="P:xserver.ClusterProgress.action">
            <remarks/>
        </member>
        <member name="T:xserver.PlanProgress">
            <remarks/>
        </member>
        <member name="P:xserver.PlanProgress.distanceMatrixCalculationProgress">
            <remarks/>
        </member>
        <member name="P:xserver.PlanProgress.improvementProgress">
            <remarks/>
        </member>
        <member name="P:xserver.PlanProgress.action">
            <remarks/>
        </member>
        <member name="T:xserver.BulkProgress">
            <remarks/>
        </member>
        <member name="P:xserver.BulkProgress.failed">
            <remarks/>
        </member>
        <member name="P:xserver.BulkProgress.remaining">
            <remarks/>
        </member>
        <member name="P:xserver.BulkProgress.successful">
            <remarks/>
        </member>
        <member name="T:xserver.Job">
            <remarks/>
        </member>
        <member name="P:xserver.Job.progress">
            <remarks/>
        </member>
        <member name="P:xserver.Job.elapsedTime">
            <remarks/>
        </member>
        <member name="P:xserver.Job.id">
            <remarks/>
        </member>
        <member name="P:xserver.Job.status">
            <remarks/>
        </member>
        <member name="T:xserver.JobStatus">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.QUEUING">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.RUNNING">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.STOPPING">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.SUCCEEDED">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.FAILED">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.DELETED">
            <remarks/>
        </member>
        <member name="F:xserver.JobStatus.UNKNOWN">
            <remarks/>
        </member>
        <member name="T:xserver.RequestOptions">
            <remarks/>
        </member>
        <member name="P:xserver.RequestOptions.wrappedResponseGeometry">
            <remarks/>
        </member>
        <member name="P:xserver.RequestOptions.coordFormat">
            <remarks/>
        </member>
        <member name="P:xserver.RequestOptions.profile">
            <remarks/>
        </member>
        <member name="P:xserver.RequestOptions.profileXMLSnippet">
            <remarks/>
        </member>
        <member name="P:xserver.RequestOptions.srId">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryEncoding">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryEncoding.PLAIN">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryEncoding.WKB">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryEncoding.WKT">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryEncoding.KML">
            <remarks/>
        </member>
        <member name="T:xserver.CoordFormat">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.OG_GEODECIMAL">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_MERCATOR">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_GEOMINSEC">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_GEODECIMAL">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_CONFORM">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_SUPERCONFORM">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.PTV_SMARTUNITS">
            <remarks/>
        </member>
        <member name="F:xserver.CoordFormat.OG_SRID">
            <remarks/>
        </member>
        <member name="T:xserver.CallerContextProperty">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContextProperty.key">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContextProperty.value">
            <remarks/>
        </member>
        <member name="T:xserver.CallerContext">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContext.wrappedProperties">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContext.log1">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContext.log2">
            <remarks/>
        </member>
        <member name="P:xserver.CallerContext.log3">
            <remarks/>
        </member>
        <member name="T:xserver.MapParams">
            <remarks/>
        </member>
        <member name="P:xserver.MapParams.language">
            <remarks/>
        </member>
        <member name="P:xserver.MapParams.referenceTime">
            <remarks/>
        </member>
        <member name="P:xserver.MapParams.showScale">
            <remarks/>
        </member>
        <member name="P:xserver.MapParams.useMiles">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryOption">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryOption.option">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryOption.value">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryOptions">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BITMAPNAME">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BITMAPTRANSPARENCYCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.TEXTINFO">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINECOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINEWIDTH">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINEALPHA">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINETYPE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINESTYLE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINEDISPLACEMENTFACTOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.SIDELINECOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.SIDELINEWIDTH">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.SIDELINESTYLE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.SIDELINETYPE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERLINEWIDTH">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERLINECOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERLINESTYLE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FILLCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FILLALPHA">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.HATCHSTYLE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.HATCHCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.ARROWCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FONT">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FONTSIZE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FONTCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FONTSTYLE">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.FONTBPP">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.AUTOPLACEMENT">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.AUTOCENTEROBJECTS">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.LINESCALEFACTOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERCOLOR">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERWIDTH">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.BORDERALPHA">
            <remarks/>
        </member>
        <member name="F:xserver.GeometryOptions.DRAWARROWS">
            <remarks/>
        </member>
        <member name="T:xserver.Geometry">
            <remarks/>
        </member>
        <member name="P:xserver.Geometry.geometry">
            <remarks/>
        </member>
        <member name="P:xserver.Geometry.referencePoint">
            <remarks/>
        </member>
        <member name="P:xserver.Geometry.description">
            <remarks/>
        </member>
        <member name="P:xserver.Geometry.id">
            <remarks/>
        </member>
        <member name="T:xserver.EncodedGeometry">
            <remarks/>
        </member>
        <member name="P:xserver.EncodedGeometry.kml">
            <remarks/>
        </member>
        <member name="P:xserver.EncodedGeometry.wkb">
            <remarks/>
        </member>
        <member name="P:xserver.EncodedGeometry.wkt">
            <remarks/>
        </member>
        <member name="T:xserver.KML">
            <remarks/>
        </member>
        <member name="P:xserver.KML.wrappedPlacemarks">
            <remarks/>
        </member>
        <member name="P:xserver.KML.kml">
            <remarks/>
        </member>
        <member name="T:xserver.EncodedGeometryBase">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryCollection">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryCollection.geometryCollection">
            <remarks/>
        </member>
        <member name="T:xserver.PlainGeometryCollection">
            <remarks/>
        </member>
        <member name="P:xserver.PlainGeometryCollection.wrappedGeometries">
            <remarks/>
        </member>
        <member name="T:xserver.MultiPolygon">
            <remarks/>
        </member>
        <member name="P:xserver.MultiPolygon.multiPolygon">
            <remarks/>
        </member>
        <member name="T:xserver.PlainMultiPolygon">
            <remarks/>
        </member>
        <member name="P:xserver.PlainMultiPolygon.wrappedPolygons">
            <remarks/>
        </member>
        <member name="T:xserver.PlainPolygon">
            <remarks/>
        </member>
        <member name="P:xserver.PlainPolygon.wrappedLinearRings">
            <remarks/>
        </member>
        <member name="T:xserver.PlainLinearRing">
            <remarks/>
        </member>
        <member name="P:xserver.PlainLinearRing.wrappedPoints">
            <remarks/>
        </member>
        <member name="T:xserver.MultiLineString">
            <remarks/>
        </member>
        <member name="P:xserver.MultiLineString.multiLineString">
            <remarks/>
        </member>
        <member name="T:xserver.PlainMultiLineString">
            <remarks/>
        </member>
        <member name="P:xserver.PlainMultiLineString.wrappedLineStrings">
            <remarks/>
        </member>
        <member name="T:xserver.PlainLineString">
            <remarks/>
        </member>
        <member name="P:xserver.PlainLineString.wrappedPoints">
            <remarks/>
        </member>
        <member name="T:xserver.MultiPoint">
            <remarks/>
        </member>
        <member name="P:xserver.MultiPoint.multiPoint">
            <remarks/>
        </member>
        <member name="T:xserver.PlainMultiPoint">
            <remarks/>
        </member>
        <member name="P:xserver.PlainMultiPoint.wrappedPoints">
            <remarks/>
        </member>
        <member name="T:xserver.LineString">
            <remarks/>
        </member>
        <member name="P:xserver.LineString.lineString">
            <remarks/>
        </member>
        <member name="T:xserver.Polygon">
            <remarks/>
        </member>
        <member name="P:xserver.Polygon.polygon">
            <remarks/>
        </member>
        <member name="T:xserver.LinearRing">
            <remarks/>
        </member>
        <member name="P:xserver.LinearRing.linearRing">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryExt">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryExt.geometryString">
            <remarks/>
        </member>
        <member name="T:xserver.Geometries">
            <remarks/>
        </member>
        <member name="P:xserver.Geometries.wrappedGeometries">
            <remarks/>
        </member>
        <member name="P:xserver.Geometries.wrappedOptions">
            <remarks/>
        </member>
        <member name="T:xserver.Text">
            <remarks/>
        </member>
        <member name="P:xserver.Text.position">
            <remarks/>
        </member>
        <member name="P:xserver.Text.text">
            <remarks/>
        </member>
        <member name="T:xserver.Font">
            <remarks/>
        </member>
        <member name="P:xserver.Font.bold">
            <remarks/>
        </member>
        <member name="P:xserver.Font.frame">
            <remarks/>
        </member>
        <member name="P:xserver.Font.italic">
            <remarks/>
        </member>
        <member name="P:xserver.Font.name">
            <remarks/>
        </member>
        <member name="P:xserver.Font.size">
            <remarks/>
        </member>
        <member name="P:xserver.Font.underline">
            <remarks/>
        </member>
        <member name="T:xserver.TextOptions">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.bgColor">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.font">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.frameColor">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.textColor">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.alignment">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.fillBg">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.pixelX">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.pixelY">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.relX">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.relY">
            <remarks/>
        </member>
        <member name="P:xserver.TextOptions.showFrame">
            <remarks/>
        </member>
        <member name="T:xserver.Color">
            <remarks/>
        </member>
        <member name="P:xserver.Color.blue">
            <remarks/>
        </member>
        <member name="P:xserver.Color.green">
            <remarks/>
        </member>
        <member name="P:xserver.Color.red">
            <remarks/>
        </member>
        <member name="T:xserver.TextAlignment">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.TOP_LEFT">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.TOP_MID">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.TOP_RIGHT">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.MID_LEFT">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.CENTER">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.MID_RIGHT">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.BOTTOM_LEFT">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.BOTTOM_MID">
            <remarks/>
        </member>
        <member name="F:xserver.TextAlignment.BOTTOM_RIGHT">
            <remarks/>
        </member>
        <member name="T:xserver.Texts">
            <remarks/>
        </member>
        <member name="P:xserver.Texts.options">
            <remarks/>
        </member>
        <member name="P:xserver.Texts.wrappedTexts">
            <remarks/>
        </member>
        <member name="T:xserver.BasicDrawingOptions">
            <remarks/>
        </member>
        <member name="P:xserver.BasicDrawingOptions.color">
            <remarks/>
        </member>
        <member name="P:xserver.BasicDrawingOptions.visible">
            <remarks/>
        </member>
        <member name="T:xserver.LinePartOptions">
            <remarks/>
        </member>
        <member name="P:xserver.LinePartOptions.width">
            <remarks/>
        </member>
        <member name="T:xserver.LineOptions">
            <remarks/>
        </member>
        <member name="P:xserver.LineOptions.arrows">
            <remarks/>
        </member>
        <member name="P:xserver.LineOptions.mainLine">
            <remarks/>
        </member>
        <member name="P:xserver.LineOptions.sideLine">
            <remarks/>
        </member>
        <member name="P:xserver.LineOptions.showFlags">
            <remarks/>
        </member>
        <member name="P:xserver.LineOptions.transparent">
            <remarks/>
        </member>
        <member name="T:xserver.Lines">
            <remarks/>
        </member>
        <member name="P:xserver.Lines.wrappedLines">
            <remarks/>
        </member>
        <member name="P:xserver.Lines.options">
            <remarks/>
        </member>
        <member name="T:xserver.BitmapOptions">
            <remarks/>
        </member>
        <member name="P:xserver.BitmapOptions.referencePoint">
            <remarks/>
        </member>
        <member name="P:xserver.BitmapOptions.transparencyColor">
            <remarks/>
        </member>
        <member name="T:xserver.BasicBitmap">
            <remarks/>
        </member>
        <member name="P:xserver.BasicBitmap.position">
            <remarks/>
        </member>
        <member name="P:xserver.BasicBitmap.descr">
            <remarks/>
        </member>
        <member name="T:xserver.RawBitmap">
            <remarks/>
        </member>
        <member name="P:xserver.RawBitmap.rawBitmap">
            <remarks/>
        </member>
        <member name="T:xserver.Bitmap">
            <remarks/>
        </member>
        <member name="P:xserver.Bitmap.name">
            <remarks/>
        </member>
        <member name="T:xserver.Bitmaps">
            <remarks/>
        </member>
        <member name="P:xserver.Bitmaps.wrappedBitmaps">
            <remarks/>
        </member>
        <member name="P:xserver.Bitmaps.options">
            <remarks/>
        </member>
        <member name="T:xserver.Layer">
            <remarks/>
        </member>
        <member name="P:xserver.Layer.name">
            <remarks/>
        </member>
        <member name="P:xserver.Layer.visible">
            <remarks/>
        </member>
        <member name="T:xserver.FeatureLayer">
            <remarks/>
        </member>
        <member name="P:xserver.FeatureLayer.objectInfos">
            <remarks/>
        </member>
        <member name="T:xserver.ObjectInfoType">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.NONE">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.REFERENCEPOINT">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.GEOMETRY">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.GEOMETRYCLIPPED">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.FULLGEOMETRY">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.FULLGEOMETRYCLIPPED">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.TILEGEOMETRY">
            <remarks/>
        </member>
        <member name="F:xserver.ObjectInfoType.TILEGEOMETRYCLIPPED">
            <remarks/>
        </member>
        <member name="T:xserver.RoadEditorLayer">
            <remarks/>
        </member>
        <member name="P:xserver.RoadEditorLayer.objectInfos">
            <remarks/>
        </member>
        <member name="T:xserver.GeometryLayer">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryLayer.wrappedGeometries">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryLayer.drawPriority">
            <remarks/>
        </member>
        <member name="P:xserver.GeometryLayer.objectInfos">
            <remarks/>
        </member>
        <member name="T:xserver.SMOLayer">
            <remarks/>
        </member>
        <member name="P:xserver.SMOLayer.configuration">
            <remarks/>
        </member>
        <member name="P:xserver.SMOLayer.objectInfos">
            <remarks/>
        </member>
        <member name="P:xserver.SMOLayer.smoData">
            <remarks/>
        </member>
        <member name="T:xserver.CustomLayer">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.wrappedBitmaps">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.wrappedLines">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.wrappedTexts">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.centerObjects">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.drawPriority">
            <remarks/>
        </member>
        <member name="P:xserver.CustomLayer.objectInfos">
            <remarks/>
        </member>
        <member name="T:xserver.StaticLayer">
            <remarks/>
        </member>
        <member name="P:xserver.StaticLayer.category">
            <remarks/>
        </member>
        <member name="P:xserver.StaticLayer.detailLevel">
            <remarks/>
        </member>
        <member name="T:xserver.StaticRasterLayer">
            <remarks/>
        </member>
        <member name="P:xserver.StaticRasterLayer.drawPosition">
            <remarks/>
        </member>
        <member name="T:xserver.DrawPositions">
            <remarks/>
        </member>
        <member name="F:xserver.DrawPositions.BELOWROUTE">
            <remarks/>
        </member>
        <member name="F:xserver.DrawPositions.BELOWSTREET">
            <remarks/>
        </member>
        <member name="F:xserver.DrawPositions.BELOWNAMES">
            <remarks/>
        </member>
        <member name="F:xserver.DrawPositions.ONTOP">
            <remarks/>
        </member>
        <member name="T:xserver.StaticPoiLayer">
            <remarks/>
        </member>
        <member name="P:xserver.StaticPoiLayer.objectInfos">
            <remarks/>
        </member>
        <member name="T:xserver.ImageInfo">
            <remarks/>
        </member>
        <member name="P:xserver.ImageInfo.format">
            <remarks/>
        </member>
        <member name="P:xserver.ImageInfo.height">
            <remarks/>
        </member>
        <member name="P:xserver.ImageInfo.imageParameter">
            <remarks/>
        </member>
        <member name="P:xserver.ImageInfo.width">
            <remarks/>
        </member>
        <member name="T:xserver.ImageFileFormat">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.GIF">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.JPG">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.BMP">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.WBMP">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.PNG">
            <remarks/>
        </member>
        <member name="F:xserver.ImageFileFormat.SMO">
            <remarks/>
        </member>
        <member name="T:xserver.BoundingBox">
            <remarks/>
        </member>
        <member name="P:xserver.BoundingBox.leftTop">
            <remarks/>
        </member>
        <member name="P:xserver.BoundingBox.rightBottom">
            <remarks/>
        </member>
        <member name="T:xserver.VisibleSection">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSection.boundingBox">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSection.center">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSection.scale">
            <remarks/>
        </member>
        <member name="T:xserver.VisibleSectionRot">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSectionRot.leftBottom">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSectionRot.leftTop">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSectionRot.rightBottom">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSectionRot.rightTop">
            <remarks/>
        </member>
        <member name="P:xserver.VisibleSectionRot.angle">
            <remarks/>
        </member>
        <member name="T:xserver.ObjectGeometry">
            <remarks/>
        </member>
        <member name="P:xserver.ObjectGeometry.pixelGeometry">
            <remarks/>
        </member>
        <member name="P:xserver.ObjectGeometry.refGeometry">
            <remarks/>
        </member>
        <member name="T:xserver.LayerObject">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.geometry">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.pixel">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.ref">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.descr">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.hiId">
            <remarks/>
        </member>
        <member name="P:xserver.LayerObject.loId">
            <remarks/>
        </member>
        <member name="T:xserver.ObjectInfos">
            <remarks/>
        </member>
        <member name="P:xserver.ObjectInfos.wrappedObjects">
            <remarks/>
        </member>
        <member name="P:xserver.ObjectInfos.name">
            <remarks/>
        </member>
        <member name="T:xserver.Image">
            <remarks/>
        </member>
        <member name="P:xserver.Image.rawImage">
            <remarks/>
        </member>
        <member name="P:xserver.Image.url">
            <remarks/>
        </member>
        <member name="T:xserver.Map">
            <remarks/>
        </member>
        <member name="P:xserver.Map.image">
            <remarks/>
        </member>
        <member name="P:xserver.Map.wrappedObjects">
            <remarks/>
        </member>
        <member name="P:xserver.Map.visibleSection">
            <remarks/>
        </member>
        <member name="T:xserver.MapSectionRot">
            <remarks/>
        </member>
        <member name="P:xserver.MapSectionRot.angle">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:xserver.renderMapCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapBoundingBoxCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapBoundingBoxCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:xserver.renderMapBoundingBoxCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapRotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:xserver.renderMapRotCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:xserver.renderMapRotCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:System.Windows.NamespaceDoc">
            <summary>
            <para>
            Extension methods for WPF types. The type
            <see cref="T:System.Windows.PointExtensions"/> adds spatial transformation methods to
            the <see cref="T:System.Windows.Point"/> type. 
            </para>
            </summary>
        </member>
        <member name="T:System.Windows.PointExtensions">
            <summary>
            Extensions for the Point API.
            </summary>
        </member>
        <member name="M:System.Windows.PointExtensions.GeoTransform(System.Windows.Point,System.String,System.String)">
            <summary>
            This extension method adds a GeoTransform API to the 
            <see cref="T:System.Windows.Point"/> class. The call is forwarded to the 
            <see cref="M:Ptv.XServer.Controls.Map.Tools.GeoTransform.Transform(System.Windows.Point,System.String,System.String)"/> method.
            </summary>
            <param name="p">The point to transform.</param>
            <param name="sourceSrid">The source reference system.</param>
            <param name="destSrid">The destination reference system.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="T:TinyJson.JSONParser">
            <summary>
            Really simple JSON parser which attempts to parse JSON files with minimal GC allocation
            Attempts are made to NOT throw an exception if the JSON is corrupted or invalid: returns null instead.
            Only public fields and property setters on classes/structs will be written to.
            Parsing of abstract classes or interfaces is NOT supported and will throw an exception.
            </summary>
        </member>
        <member name="M:TinyJson.JSONParser.FromJson``1(System.String)">
            <summary>Transforms a JSON string into the object of type T. </summary>
            <typeparam name="T"> Type to which the JSON string is converted.</typeparam>
            <param name="json">String to convert. </param>
            <returns></returns>
        </member>
        <member name="T:TinyJson.JSONWriter">
            <summary> Really simple JSON writer which outputs JSON structures from an object. </summary>
        </member>
        <member name="M:TinyJson.JSONWriter.ToJson(System.Object)">
            <summary> Converts an object to a JSON string representation. </summary>
            <param name="item"> Object which should be converted to a JSON string representation. </param>
            <returns> JSON string representation of the input object. </returns>
        </member>
        <member name="T:DevelopMentor.WorkRequestDelegate">
            <summary> Documentation in progress... </summary>
            <param name="state"> Documentation in progress... </param>
            <param name="requestEnqueueTime"> Documentation in progress... </param>
        </member>
        <member name="T:DevelopMentor.ThreadPoolDelegate">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="T:DevelopMentor.IWorkRequest">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.IWorkRequest.Cancel">
            <summary> Documentation in progress... </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:DevelopMentor.ThreadPool">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.logger">
            <summary> Logging restricted to this class. </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.#ctor(System.Int32,System.Int32,System.String)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool"/> class. </summary>
            <param name="initialThreadCount"> Documentation in progress... </param>
            <param name="maxThreadCount"> Documentation in progress... </param>
            <param name="poolName"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Threading.ThreadPriority,System.Int32)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool"/> class. </summary>
            <param name="initialThreadCount"> Documentation in progress... </param>
            <param name="maxThreadCount"> Documentation in progress... </param>
            <param name="poolName"> Documentation in progress... </param>
            <param name="newThreadTrigger"> Documentation in progress... </param>
            <param name="dynamicThreadDecayTime"> Documentation in progress... </param>
            <param name="threadPriority"> Documentation in progress... </param>
            <param name="requestQueueLimit"> Documentation in progress... </param>
        </member>
        <member name="P:DevelopMentor.ThreadPool.Priority">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.DynamicThreadDecay">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.NewThreadTrigger">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.RequestQueueLimit">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.AvailableThreads">
            <summary> Gets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.MaxThreads">
            <summary> Gets or sets Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.IsStarted">
            <summary> Gets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.PropagateThreadPrincipal">
            <summary> Gets or sets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.PropagateCallContext">
            <summary> Gets or sets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.PropagateHttpContext">
            <summary> Gets or sets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.PropagateCASMarkers">
            <summary> Gets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="P:DevelopMentor.ThreadPool.IsBackground">
            <summary> Gets or sets a value indicating whether Documentation in progress... </summary>
        </member>
        <member name="E:DevelopMentor.ThreadPool.Started">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="E:DevelopMentor.ThreadPool.Stopped">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.Start">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.Stop">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.StopAndWait">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.StopAndWait(System.Int32)">
            <summary> Documentation in progress... </summary>
            <param name="timeout"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.InternalStop(System.Boolean,System.Int32)">
            <summary> Documentation in progress... </summary>
            <param name="wait"> Documentation in progress... </param>
            <param name="timeout"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(DevelopMentor.WorkRequestDelegate)">
            <summary> Documentation in progress... </summary>
            <param name="cb"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(DevelopMentor.WorkRequestDelegate,System.Object)">
            <summary> Documentation in progress... </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="state"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(DevelopMentor.WorkRequestDelegate,System.Object,DevelopMentor.IWorkRequest@)">
            <summary> Documentation in progress... </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="state"> Documentation in progress... </param>
            <param name="reqStatus"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(System.Delegate,System.Object[])">
            <summary> Documentation in progress... </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(System.Delegate,System.Object[],DevelopMentor.IWorkRequest@)">
            <summary> Documentation in progress... </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
            <param name="reqStatus"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.PostRequest(DevelopMentor.ThreadPool.WorkRequest)">
            <summary> Documentation in progress... </summary>
            <param name="request"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ResetWorkRequestTimes">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.DEFAULT_DYNAMIC_THREAD_DECAY_TIME">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.DEFAULT_NEW_THREAD_TRIGGER_TIME">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.DEFAULT_THREAD_PRIORITY">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.DEFAULT_REQUEST_QUEUE_LIMIT">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.initialThreadCount">
            <summary> Initial # of threads to create (called "static threads" in this class). </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.maxThreadCount">
            <summary> Cap for thread count.  Threads added above initialThreadCount are called "dynamic" threads. </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.currentThreadCount">
            <summary> Current # of threads in the pool (static + dynamic). </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.decayTime">
            <summary> If a dynamic thread is idle for this period of time w/o processing work requests, it will exit. </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.newThreadTrigger">
            <summary> If a work request sits in the queue this long before being processed, a new thread will be added to queue up to the max. </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.stopCompleteEvent">
            <summary> Signaled after Stop called and last thread exits. </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.requestQueueLimit">
            <summary> Throttle for maximum # of work requests that can be added. </summary>
        </member>
        <member name="T:DevelopMentor.ThreadPool.ThreadInfo">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.principal">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.callContext">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.compressedStack">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.bfNonPublicInstance">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.miGetLogicalCallContext">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadInfo.miSetLogicalCallContext">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadInfo.Capture(System.Boolean,System.Boolean,System.Boolean)">
            <summary> Documentation in progress... </summary>
            <param name="propagateThreadPrincipal"> Documentation in progress... </param>
            <param name="propagateCallContext"> Documentation in progress... </param>
            <param name="propagateCASMarkers"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadInfo.Impersonate(DevelopMentor.ThreadPool.ThreadInfo)">
            <summary> Documentation in progress... </summary>
            <param name="ti"> Documentation in progress... </param>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadInfo.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool.ThreadInfo"/> class. </summary>
            <param name="propagateThreadPrincipal"> Documentation in progress... </param>
            <param name="propagateCallContext"> Documentation in progress... </param>
            <param name="propagateCASMarkers"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadInfo.Restore(DevelopMentor.ThreadPool.ThreadInfo)">
            <summary> Documentation in progress... </summary>
            <param name="ti"> Documentation in progress... </param>
        </member>
        <member name="T:DevelopMentor.ThreadPool.WorkRequest">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.PENDING">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.PROCESSED">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.CANCELLED">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.targetProc">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.procArg">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.procArgs">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.timeStampStarted">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.workingTime">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.threadInfo">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.WorkRequest.state">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.WorkRequest.#ctor(DevelopMentor.WorkRequestDelegate,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool.WorkRequest"/> class. </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="arg"> Documentation in progress... </param>
            <param name="propagateThreadPrincipal"> Documentation in progress... </param>
            <param name="propagateCallContext"> Documentation in progress... </param>
            <param name="propagateCASMarkers"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.WorkRequest.#ctor(System.Delegate,System.Object[],System.Boolean,System.Boolean,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool.WorkRequest"/> class. </summary>
            <param name="cb"> Documentation in progress... </param>
            <param name="args"> Documentation in progress... </param>
            <param name="propagateThreadPrincipal"> Documentation in progress... </param>
            <param name="propagateCallContext"> Documentation in progress... </param>
            <param name="propagateCASMarkers"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.WorkRequest.Initialize(System.Boolean,System.Boolean,System.Boolean)">
            <summary> Documentation in progress... </summary>
            <param name="propagateThreadPrincipal"> Documentation in progress... </param>
            <param name="propagateCallContext"> Documentation in progress... </param>
            <param name="propagateCASMarkers"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.WorkRequest.Cancel">
            <summary> Documentation in progress... </summary>
            <returns> Documentation in progress... </returns>
        </member>
        <member name="T:DevelopMentor.ThreadPool.ThreadWrapper">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadWrapper.pool">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadWrapper.isPermanent">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadWrapper.priority">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="F:DevelopMentor.ThreadPool.ThreadWrapper.name">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadWrapper.#ctor(DevelopMentor.ThreadPool,System.Boolean,System.Threading.ThreadPriority,System.String)">
            <summary> Initializes a new instance of the <see cref="T:DevelopMentor.ThreadPool.ThreadWrapper"/> class. </summary>
            <param name="pool"> Documentation in progress... </param>
            <param name="isPermanent"> Documentation in progress... </param>
            <param name="priority"> Documentation in progress... </param>
            <param name="name"> Documentation in progress... </param>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadWrapper.Start">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="M:DevelopMentor.ThreadPool.ThreadWrapper.ThreadProc">
            <summary> Documentation in progress... </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
