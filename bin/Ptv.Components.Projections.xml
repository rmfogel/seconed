<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ptv.Components.Projections</name>
    </assembly>
    <members>
        <member name="T:System.Reflection.ApiFactory">
            <summary>
            Generically provides interface implementations that access unmanaged libraries.
            </summary>
            <remarks>
            Code was initially taken from
            <a href="http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/0b9c6aaa-f880-41d9-9ec0-230d7fcd4aef">http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/0b9c6aaa-f880-41d9-9ec0-230d7fcd4aef</a>
            </remarks>
        </member>
        <member name="T:System.Reflection.ApiFactory.DllImportAttribute">
            <summary>
            Defines inter operation parameters.
            </summary>
            <remarks>
            With <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> requiring
            'static extern methods', this copy of the attribute class is necessary to allow the parametrization of interface methods.
            </remarks>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.EntryPoint">
            <summary>
            Contains the value for EntryPoint.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.ExactSpelling">
            <summary>
            Contains the value for ExactSpelling.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.PreserveSig">
            <summary>
            Contains the value for PreserveSig.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.SetLastError">
            <summary>
            Contains the value for SetLastError.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.CallingConvention">
            <summary>
            Contains the value for CallingConvention.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.CharSet">
            <summary>
            Contains the value for CharSet.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.BestFitMapping">
            <summary>
            Contains the value for BestFitMapping.
            </summary>
        </member>
        <member name="F:System.Reflection.ApiFactory.DllImportAttribute.ThrowOnUnmappableChar">
            <summary>
            Contains the value for ThrowOnUnmappableChar.
            </summary>
        </member>
        <member name="M:System.Reflection.ApiFactory.GetOrderedFields(System.Object)">
            <summary>
            Get the <see cref="T:System.Reflection.FieldInfo"/> from a specific object.
            </summary>
            <param name="o">Object to get the <see cref="T:System.Reflection.FieldInfo"/> from.</param>
            <returns><see cref="T:System.Reflection.FieldInfo"/> of the specified object, ordered by the type names.</returns>
        </member>
        <member name="M:System.Reflection.ApiFactory.GetFieldValues(System.Object)">
            <summary>
            Get the field values of a specific object.
            </summary>
            <param name="o">Object to get the values from.</param>
            <returns>Values taken from the specified object.</returns>
        </member>
        <member name="M:System.Reflection.ApiFactory.GetFieldInfoFromOther(System.Object,System.Type)">
            <summary>
            Gets the <see cref="T:System.Reflection.FieldInfo"/> from a specific type.
            </summary>
            <param name="o">Object to get the <see cref="T:System.Reflection.FieldInfo"/> reference from.</param>
            <param name="other">Type to get the final <see cref="T:System.Reflection.FieldInfo"/> from.</param>
            <returns><see cref="T:System.Reflection.FieldInfo"/> read from the specified type.</returns>
        </member>
        <member name="M:System.Reflection.ApiFactory.CreateNativeApi``1(System.String)">
            <summary>
            Provides an generated and generic implementation of an interface that accesses an external library.
            </summary>
            <typeparam name="T">The type to provide an implementation for.</typeparam>
            <param name="dllName">The file name of the external library.</param>
            <returns>Returns the implementation of the specified type or null on any error.</returns>
            <remarks>The <see cref="T:System.Reflection.ApiFactory.DllImportAttribute"/> attribute is used on the interfaces methods 
            to parametrize the inter operation.</remarks>
        </member>
        <member name="T:System.IO.TempSpace">
            <summary>
            Utility class providing an application specific temporary space in the Windows' TEMP directory.
            </summary>
        </member>
        <member name="F:System.IO.TempSpace.tempBase">
            <summary>
            The tempBase variable.
            </summary>
        </member>
        <member name="M:System.IO.TempSpace.TryCleanup(System.String)">
            <summary>
            Tries to delete a directory.
            </summary>
            <param name="dir">The directory to delete.</param>
            <remarks>Used by the static constructor to initially create the temp space.</remarks>
        </member>
        <member name="M:System.IO.TempSpace.TryCreate(System.String)">
            <summary>
            Tries to create a directory.
            </summary>
            <param name="dir">The directory to create.</param>
            <remarks>Used by the static constructor to force clean the applications temp space.</remarks>
        </member>
        <member name="M:System.IO.TempSpace.#cctor">
            <summary>
            Initializes static members of the <see cref="T:System.IO.TempSpace"/> class.
            </summary>
        </member>
        <member name="M:System.IO.TempSpace.TryMakeSpace">
            <summary>
            Tries to create a temporary directory.
            </summary>
            <returns>The path of the temporary directory or null on any error.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.NamespaceDoc">
            <summary>
            Provides classes for transforming coordinates using plain managed code. The core transformations 
            provided by <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/> can either be used directly or implicitly through 
            <see cref="T:Ptv.Components.Projections.CoordinateTransformation">Ptv.Components.Projections.CoordinateTransformation</see>, 
            which uses <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/> where possible.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.TransformationAttribute">
            <summary>
            Defines the source and target identifiers of a managed coordinate transformation routine.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.TransformationAttribute.SourceId">
            <summary>
            Identifier of the source coordinate reference system.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.TransformationAttribute.TargetId">
            <summary>
            Identifier of the target coordinate reference system.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.TransformationAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Direct.TransformationAttribute"/> class.
            </summary>
            <param name="sourceId">Value containing the source spatial reference identifier.</param>
            <param name="targetId">Value containing the target spatial reference identifier.</param>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.TransformDelegate">
            <summary>
            A delegate for transforming a coordinate.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
            <remarks>
            This delegate is used along with <see cref="T:Ptv.Components.Projections.Direct.GetTransformDelegate"/> / 
            <see cref="F:Ptv.Components.Projections.Direct.CoordinateTransformation.OnGetTransform">CoordinateTransformation.OnGetTransform</see> to 
            provide additional coordinate transformation routines to <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/>.
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.GetTransformDelegate">
            <summary>
            A delegate providing a transformation for specific coordinate reference systems.
            </summary>
            <param name="sourceId">The identifier of the source coordinate reference system.</param>
            <param name="targetId">The identifier of the target coordinate reference system.</param>
            <returns>A <see cref="T:Ptv.Components.Projections.Direct.TransformDelegate"/> that can handle the coordinate transformation or null.</returns>
            <remarks>
            <see cref="T:Ptv.Components.Projections.Direct.GetTransformDelegate"/> along with 
            <see cref="F:Ptv.Components.Projections.Direct.CoordinateTransformation.OnGetTransform">CoordinateTransformation.OnGetTransform</see> is used  
            to provide additional coordinate transformation routines to <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/>.
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.CoordinateTransformations">
            <summary>
            Defines frequently used managed coordinate transformation routines.
            </summary>
            <remarks>
            <para>
            The provided routines are mainly used by <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/> 
            to implement a direct coordinate transformation given a source and target identifier
            of a coordinate reference system. 
            </para><para>
            The coordinate transformations may be used directly. The z-coordinate of the transformation 
            methods can be ignored (reserved for future use).
            </para>
            </remarks>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.DEG_TO_RAD">
            <summary>
            DEG to RAD conversion
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.RAD_TO_DEG">
            <summary>
            RAD to DEG conversion
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_GEODECIMAL">
            <summary>
            CRSID: PTV Geodecimal
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.WGS84">
            <summary>
            CRSID: WGS84
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.GOOGLE_MERCATOR">
            <summary>
            CRSID: Google Mercator
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_GEOMINSEC">
            <summary>
            CRSID: PTV GeoMinSec
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_MERCATOR">
            <summary>
            CRSID: PTV Mercator
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.UTM">
            <summary>
            CRSID: UTM
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_CONFORM">
            <summary>
            CRSID: PTV Conform
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_EUROCONFORM">
            <summary>
            CRSID: PTV Euro Conform
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.PTV_RASTERSMARTUNITS">
            <summary>
            PTV Raster Smart Units
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.gpEuro_n">
            <summary>
            use by conform transformations, taken from claw (Coordinates.cs)
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.gpEuro_nInv">
            <summary>
            use by conform transformations, taken from claw (Coordinates.cs)
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.gpEuro_RF">
            <summary>
            use by conform transformations, taken from claw (Coordinates.cs)
            </summary>                                                                                                                                   
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.gpEuro_rho0">
            <summary>
            use by conform transformations, taken from claw (Coordinates.cs)
            </summary>                                                                                                                              
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformPtvGeodecimalToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Geodecimal to WGS84 transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToPtvGeodecimal(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed WGS84 to PTV Geodecimal transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToPtvGeoMinSek(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed WGS84 to PTV GeoMinSek transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformPtvGeoMinSekToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV GeoMinSek to WGS84 transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToUtm(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed WGSPTV Geodecimal to UTM transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformUtmToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed UTM to PTV Geodecimal transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToPtvMercator(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed WGS84 to PTV Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformPtvMercatorToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to WGS84 transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToGoogleMercator(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed WGS84 to Google Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformGoogleMercatorToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed Google Mercator to WGS84 transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformPtvMercatorToGoogleMercator(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to Google Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformGoogleMercatorToPtvMercator(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed Google Mercator to PTV Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToConform(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to PTV Conform transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformConformToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Conform to PTV Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformEuroConformToWgs84(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Euro Conform to PTV Mercator transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformWgs84ToEuroConform(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to PTV Euro Conform transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformMercatorToRasterSmartUnits(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to PTV Raster Smart Units transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformRasterSmartUnitsToMercator(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides the managed PTV Mercator to PTV Raster Smart Units transformation.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID">
            <summary>
            Stores a CRSIDs and its aliases.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID.#ctor(System.String,System.String[])">
            <summary>
            Creates an instance of <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID"/>.
            </summary>
            <param name="crsId">The identifier of the coordinate reference system.</param>
            <param name="aliases">The aliases for the coordinate reference system</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID"/>.
            </summary>
            <param name="crsId">The identifier of the coordinate reference system.</param>
        </member>
        <member name="P:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID.Id">
            <summary>
            Reads and writes the coordinate reference system identifier.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.Direct.CoordinateTransformations.RootCRSID.Aliases">
            <summary>
            Reads and writes the aliases of the coordinate reference system.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.rootCRSIDs">
            <summary>
            Defines the 'root CRSIDs' and their aliases, if any. 
            The first entry in the arrays specifies a 'root CRSID', follow-up entries define the aliases.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.alias_map">
            <summary>
            Maps CRSIDs to their 'root CRSID' using the aliases defined through alias_def. Initialized in static constructor.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.transformations">
            <summary>
            Cache storing the delegates of the well known coordinate transformation routines.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.AddTransformation(System.String,System.String,System.Reflection.MethodInfo)">
            <summary>
            Caches a transformation method, described by its source and target coordinate reference system.
            </summary>
            <param name="sourceId">The identifier of the source coordinate reference system.</param>
            <param name="targetId">The identifier of the target coordinate reference system.</param>
            <param name="mi">The transformation method to cache.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/> class.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformationChain">
            <summary>
            Provides a chained transformation that iterates over a given array of <see cref="T:Ptv.Components.Projections.Direct.TransformDelegate"/> delegates.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformationChain.chain">
            <summary>
            The transformation delegates to iterate over.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformationChain.#ctor(Ptv.Components.Projections.Direct.TransformDelegate[])">
            <summary>
            Create the <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformationChain"/> instance.
            </summary>
            <param name="chain"></param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TransformationChain.Transform(System.Double@,System.Double@,System.Double@)">
            <summary>
            Provides a transformation that calls the different <see cref="T:Ptv.Components.Projections.Direct.TransformDelegate"/> instances in the chain.
            </summary>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out, see remarks on <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.GetTransformationKey(System.String,System.String)">
            <summary>
            Builds a transformation identifier out of source and target coordinate reference system identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <returns>The transformation identifier.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.GetRootId(System.String)">
            <summary>
            Returns the 'root CRSId' for the given coordinate reference system identifier.
            </summary>
            <param name="crsId">The identifier of the coordinate reference system to get the root identifier for.</param>
            <returns>Root coordinate reference system identifier.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.GetTransformation(System.String,System.String)">
            <summary>
            Gets a managed transformation for the given CRS identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <returns>The <see cref="T:Ptv.Components.Projections.Direct.TransformDelegate"/> for performing a direct coordinate transformation, which  
            may be null, if the specified transformation does not exist.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">Thrown if no transformation is available to transform coordinates 
            from the specified source to the specified target coordinate reference system.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TryGetTransformation(System.String,System.String,Ptv.Components.Projections.Direct.TransformDelegate@)">
            <summary>
            Tries to get a managed transformation for the given CRS identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <param name="transform">The transformmation deleagte, returned on success.</param>
            <returns>True, if a valid managed transformation could be found. False otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformations.TryGetTransformationChain(System.String,System.String,Ptv.Components.Projections.Direct.TransformDelegate@)">
            <summary>
            Tries to get a transformation chain for the given CRS identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <param name="transform">The transformmation deleagte, returned on success.</param>
            <returns>True, if a valid managed transformation chain could be found. False otherwise.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Direct.CoordinateTransformation">
            <summary>
            Provides an implementation of <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/> that uses the managed 
            coordinate transformation routines provided by <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformations"/>.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformation.OnGetTransform">
            <summary>
            Hook for providing additional coordinate transformation routines.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Direct.CoordinateTransformation.transform">
            <summary>
            The transform delegate used internally by the current instance of <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/> class.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/> class.
            </summary>
            <param name="transformMethod">The core coordinate transformation method to encapsulate.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.#ctor(Ptv.Components.Projections.Direct.TransformDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/> class.
            </summary>
            <param name="transformMethod">The transform delegate to encapsulate.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.IdentityTransform(System.Double@,System.Double@,System.Double@)">
            <summary>
            Identity transformation.
            </summary>
            <param name="x">The x-coordinate, returned as passed in.</param>
            <param name="y">The y-coordinate, returned as passed in.</param>
            <param name="z">The z-coordinate, returned as passed in.</param>
            <remarks>
            This transformation is used by <see cref="M:Ptv.Components.Projections.Direct.CoordinateTransformation.Get(System.String,System.String)">CoordinateTransformation.Get</see> in case the 
            identifiers of the source and target coordinate reference system are equal.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TryGet(System.String,System.String,Ptv.Components.Projections.ICoordinateTransformation@)">
            <summary>
            Tries to get a managed coordinate transformation for the specified coordinate reference systems.
            </summary>
            <param name="sourceId">The source coordinate reference system.</param>
            <param name="targetId">The source coordinate reference system.</param>
            <param name="transform">The managed coordinate transformation, returned on success.</param>
            <returns>True, if a valid managed coordinate transformation could be found a/o created. False otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TryGet(Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.ICoordinateTransformation@)">
            <summary>
            Tries to get a managed coordinate transformation for the specified coordinate reference systems.
            </summary>
            <param name="source">The source coordinate reference system.</param>
            <param name="target">The source coordinate reference system.</param>
            <param name="transform">The managed coordinate transformation, returned on success.</param>
            <returns>True, if a valid managed coordinate transformation could be found a/o created. False otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.Get(System.String,System.String)">
            <summary>
            Gets a managed coordinate transformation for the specified coordinate reference system identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <returns>The managed coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">Thrown if no transformation is available to transform coordinates 
            from the specified source to the specified target coordinate reference system.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.Get(Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.CoordinateReferenceSystem)">
            <summary>
            Gets a managed coordinate transformation for the specified coordinate reference systems.
            </summary>
            <param name="source">The source coordinate reference system.</param>
            <param name="target">The source coordinate reference system.</param>
            <returns>The managed coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">Thrown if no transformation is available to transform coordinates 
            from the specified source to the specified target coordinate reference system.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,Ptv.Components.Projections.Location},System.Action{``0,Ptv.Components.Projections.Location})">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Windows.Point},System.Action{``0,System.Windows.Point})">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TransformUnchecked(System.Double,System.Double,System.Nullable{System.Double},System.Double@,System.Double@,System.Nullable{System.Double}@)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TransformUnchecked(System.Double[],System.Double[],System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TransformUnchecked(System.Windows.Point[],System.Windows.Point[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Direct.CoordinateTransformation.TransformUnchecked(Ptv.Components.Projections.Location[],Ptv.Components.Projections.Location[])">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.Components.Projections.Direct.CoordinateTransformation.Valid">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.Components.Projections.Direct.CoordinateTransformation.Enabled">
            <summary>
            Gets or sets a value indicating whether the direct coordinate transformation <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation"/>
            is used by the <see cref="T:Ptv.Components.Projections.CoordinateTransformation"/> class.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.NamespaceDoc">
            <summary>
            Provides the classes for transforming coordinates through the <a href="http://trac.osgeo.org/proj/">PROJ.4 
            Cartographic Projections Library</a>. The core transformations provided by <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation"/> can 
            either be used directly or implicitly through 
            <see cref="T:Ptv.Components.Projections.CoordinateTransformation">Ptv.Components.Projections.CoordinateTransformation</see>, 
            which uses <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation"/> where necessary.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.ICoordinateTransformation">
            <summary>
            Defines the interface of the unmanaged <a href="http://trac.osgeo.org/proj/">PROJ.4 Cartographic Projections Library</a>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.InitProjection(System.String)">
            <summary>
            Initializes a projection.
            </summary>
            <param name="wkt">The projection parameters, specified as Proj4 well known text.</param>
            <returns>The projection handle which will be invalid on any error.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.IsLatLon(System.IntPtr)">
            <summary>
            Checks if a projection is using latitude/longitude coordinates.
            </summary>
            <param name="pj">The projection to check.</param>
            <returns>True, if the projection is using latitude/longitude coordinates, false otherwise.</returns>
            <remarks>This check is used to automatically handle DEG/RAD conversion in 
            transformations based on PROJ.4.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.FreeProjection(System.IntPtr)">
            <summary>
            Frees a projection.
            </summary>
            <param name="pj">The projection to free.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.Transform(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double[],System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="cnt">Number of coordinates.</param>
            <param name="ofs">Index of the first coordinate to transform.</param>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <param name="z">Array containing the z-coordinates. This parameter is optional and may be set to null.</param>
            <returns>Zero on success, a PROJ.4 error code otherwise.</returns>
            <remarks>
            If no error occurred, the specified arrays contain the transformed coordinates on return.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.Transform(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="cnt">Number of coordinates.</param>
            <param name="ofs">Index of the first coordinate to transform.</param>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <returns>Zero on success, a PROJ.4 error code otherwise.</returns>
            <remarks>
            If no error occurred, the specified arrays contain the transformed coordinates on return.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.Transform(System.IntPtr,System.IntPtr,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transforms a single coordinate.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out).</param>
            <returns>Zero on success, a PROJ.4 error code otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.ICoordinateTransformation.Transform(System.IntPtr,System.IntPtr,System.Double@,System.Double@)">
            <summary>
            Transforms a single coordinate.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <returns>Zero on success, a PROJ.4 error code otherwise.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.Proj4Default">
            <summary>
            Default implementation of <see cref="T:Ptv.Components.Projections.Proj4.ICoordinateTransformation"/>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.InitProjection(System.String)">
            <summary>
            Initializes a projection.
            </summary>
            <param name="wkt">The projection parameters, specified as Proj4 well known text.</param>
            <returns><c>IntPtr.Zero</c> in any case.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.IsLatLon(System.IntPtr)">
            <summary>
            Gets a value indicating whether a projection is using latitude/longitude coordinates.
            </summary>
            <param name="pj">The projection to check.</param>
            <returns>False in any case.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.FreeProjection(System.IntPtr)">
            <summary>
            Frees a projection.
            </summary>
            <param name="pj">The projection to free.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.Transform(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double[],System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="cnt">Number of coordinates.</param>
            <param name="ofs">Index of the first coordinate to transform.</param>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <param name="z">Array containing the z-coordinates. This parameter is optional and may be set to null.</param>
            <returns>E_FAIL in any case.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.Transform(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="cnt">Number of coordinates.</param>
            <param name="ofs">Index of the first coordinate to transform.</param>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <returns>E_FAIL in any case.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.Transform(System.IntPtr,System.IntPtr,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transforms a single coordinate.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <param name="z">The z-coordinate to transform (in and out).</param>
            <returns>E_FAIL in any case.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Proj4Default.Transform(System.IntPtr,System.IntPtr,System.Double@,System.Double@)">
            <summary>
            Transforms a single coordinate.
            </summary>
            <param name="src">The source projection.</param>
            <param name="dst">The target projection.</param>
            <param name="x">The x-coordinate to transform (in and out).</param>
            <param name="y">The y-coordinate to transform (in and out).</param>
            <returns>E_FAIL in any case.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.Library">
            <summary>
            Provides the core <see cref="T:Ptv.Components.Projections.Proj4.ICoordinateTransformation"/> implementation and manages the PROJ.4 library initialization.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Proj4.Library.instance">
            <summary>
            The <see cref="T:Ptv.Components.Projections.Proj4.ICoordinateTransformation"/> instance, initialized 
            on demand by <see cref="P:Ptv.Components.Projections.Proj4.Library.Instance">Library.Instance</see>.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Proj4.Library.instanceLock">
            <summary>
            Initialization lock.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.Proj4.Library.LibraryNames">
            <summary>
            Gets the possible names of the core PROJ.4 library.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Library.TryLoad(System.String)">
            <summary>
            Tries to load the core PROJ.4 library from a file.
            </summary>
            <param name="name">File name of the library.</param>
            <returns>True, if library was loaded, false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Library.Read(System.IO.Stream)">
            <summary>
            This helper fully reads the contents of a stream.
            </summary>
            <param name="stm">The stream to read.</param>
            <returns>The data read from the stream.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.Library.TryLoadResource(System.String)">
            <summary>
            Tries to load the core PROJ.4 library from a resource package.
            </summary>
            <param name="name">File name of the library.</param>
            <returns>True, if library was loaded, false otherwise.</returns>
        </member>
        <member name="P:Ptv.Components.Projections.Proj4.Library.Instance">
            <summary>
            Gets the <see cref="T:Ptv.Components.Projections.Proj4.ICoordinateTransformation"/> implementation.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.Proj4.Library.HasInstance">
            <summary> Gets a value indicating whether the core was already initialized. </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.CoordinateTransformation">
            <summary>
            Provides an implementation of <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/> 
            that uses the <a href="http://trac.osgeo.org/proj/">PROJ.4 Cartographic Projections Library</a>.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Proj4.CoordinateTransformation.source">
            <summary>
            Source coordinate reference system.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Proj4.CoordinateTransformation.target">
            <summary>
            Target coordinate reference system.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.InitArrays(System.Int32,System.Int32,System.Int32,System.Double[][])">
            <summary>
            Helper performing array initialization.
            </summary>
            <param name="idx_in">Index of the first coordinate in the source arrays.</param>
            <param name="idx_out">Index of the first coordinate in the target arrays.</param>
            <param name="length">Number of coordinate to transform.</param>
            <param name="arrays">Source and target arrays, specified in pairs <c>{ x-source, x-target, ... }.</c></param>
            <remarks>
            <para>
            This helper initializes the target arrays with the coordinates from the source array. 
            In case that the target arrays are equal to the source arrays, no copy process is started.
            </para><para>
            Used by <see cref="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.TransformUnchecked(System.Double[],System.Double[],System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Int32,System.Int32)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.#ctor(Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.CoordinateReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation"/> class.
            </summary>
            <param name="source">Source coordinate reference system.</param>
            <param name="target">Target coordinate reference system.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation"/> class.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.Get(Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.CoordinateReferenceSystem)">
            <summary>
            Gets a PROJ.4 coordinate transformation for the specified coordinate reference systems.
            </summary>
            <param name="source">The source coordinate reference system.</param>
            <param name="target">The target coordinate reference system.</param>
            <returns>The PROJ.4 coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">Thrown if no transformation is available to transform coordinates 
            from the specified source to the specified target coordinate reference system.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.Get(System.String,System.String)">
            <summary>
            Gets a PROJ.4 coordinate transformation for the specified coordinate reference system identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <returns>The PROJ.4 coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">Thrown if no transformation is available to transform coordinates 
            from the specified source to the specified target coordinate reference system.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.TransformUnchecked(System.Double,System.Double,System.Nullable{System.Double},System.Double@,System.Double@,System.Nullable{System.Double}@)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.TransformUnchecked(System.Double[],System.Double[],System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.TransformUnchecked(System.Windows.Point[],System.Windows.Point[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.CoordinateTransformation.TransformUnchecked(Ptv.Components.Projections.Location[],Ptv.Components.Projections.Location[])">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Valid">
            <inheritdoc/>
        </member>
        <member name="F:Ptv.Components.Projections.Proj4.CoordinateTransformation.enabled">
            <summary>
            Internal flag for <see cref="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled"/> property.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled">
            <summary>
            Gets or sets a value indicating whether the core PROJ.4 coordinate transformation is used by the 
            <see cref="T:Ptv.Components.Projections.CoordinateTransformation"/> class.
            </summary>
            <remarks>
            <see cref="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled"/> is mainly used for disabling the unmanaged extensions used by implementation of 
            <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation"/>. As those extensions are initialized with the first transformation triggered, 
            <see cref="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled"/> must be called prior to using any coordinate transformation to have an effect. To indicate 
            such problem, <see cref="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled"/> will throw an exception when trying to disable the PROJ.4 transformation after 
            using any coordinate transformation.
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.Proj4.WktExtensions">
            <summary>
            Internal extension providing some helpers to the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.WktExtensions.Left(System.String,System.UInt32)">
            <summary> Returns the first n characters of a string.  </summary>
            <param name="s">The string to process.</param>
            <param name="n">Number of characters to return.</param>
            <returns>The first <c>Min(n, s.Length)</c> characters of the specified string.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.WktExtensions.Right(System.String,System.UInt32)">
            <summary>
            Returns the last n characters of a string. 
            </summary>
            <param name="s">The string to process.</param>
            <param name="n">Number of characters to return.</param>
            <returns>The last <c>Min(n, s.Length)</c> characters of the specified string.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Proj4.WktExtensions.Decompress(System.String,System.String@)">
            <summary>
            Decompresses a WKT record.
            </summary>
            <param name="wkt">The current WKT record.</param>
            <param name="lastWkt">The last WKT record.</param>
            <returns>The decompressed WKT record.</returns>
            <remarks>
            Decompression is based on the assumption:<br/>
            - first record contains a full WKT description<br/>
            - all other records are in the form "l;wkt;r" with wkt being a remainder 
            and l and r the numbers of characters to reuse from the previous WKT description 
            (from left and right respectively).
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.NamespaceDoc">
            <summary>
            <para>
            The <see cref="N:Ptv.Components.Projections"/> namespace contains the classes that are 
            essential for projecting or transforming coordinates in GIS-like applications.
            </para><para>
            <see cref="T:Ptv.Components.Projections.CoordinateTransformation"/> is the main class for the transformations, offering a 
            set of methods for transforming coordinates specified either as <see cref="T:System.Windows.Point">
            System.Windows.Point</see>, <see cref="T:Ptv.Components.Projections.Location"/> or simply using doubles.
            </para>
            <para>
            <see cref="T:Ptv.Components.Projections.CoordinateTransformation"/> uses <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> to describe the
            source and the target of a transformation. The <see cref="T:Ptv.Components.Projections.Registry"/> provides well known coordinate
            reference systems and provides an access using CRS identifiers (e.g. <c>EPSG:4326</c>). See classes
            <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver">CoordinateReferenceSystem.Mapserver</see> and 
            <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem.XServer">CoordinateReferenceSystem.XServer</see>,
            which provide an access for PTV legacy systems.
            </para>
            <para>
            At its base, the coordinate transformation uses the <a href="http://trac.osgeo.org/proj/">PROJ.4 
            Cartographic Projections Library</a>. The <see cref="T:Ptv.Components.Projections.Registry"/> included is initialized on startup 
            with specific PTV coordinate reference systems as well as other well known systems taken from an 
            internal EPSG database, defining the coordinate reference systems in the Proj4 well known text format. 
            A good and short summary on EPSG and its codes is provided by 
            <a href="http://de.wikipedia.org/wiki/European_Petroleum_Survey_Group_Geodesy">Wikipedia</a> 
            (german article). A good source for any coordinate reference system that might be missing is
            <a href="http://www.spatialreference.org">www.spatialreference.org</a>.
            </para>
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Location">
            <summary>
            Represents an x- and y-coordinate pair with an optional z-coordinate. 
            </summary>
            <remarks>
            The struct uses double precision coordinates and has been introduced to handle special coordinate 
            transformations where a z-coordinate is mandatory. For the sake of differentiation the struct has 
            been named Location, as several other point structs and classes exist (
            <see cref="T:System.Windows.Point">System.Windows.Point</see>, 
            <see cref="T:System.Drawing.Point">System.Drawing.Point</see>, 
            <see cref="T:System.Drawing.PointF">System.Drawing.PointF</see> and others). In most cases it 
            is not necessary to work with Location at all, as the basic transformation routines provided through 
            <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/> are designed to work with <see cref="T:System.Windows.Point">
            System.Windows.Point</see> as well. 
            </remarks>
        </member>
        <member name="F:Ptv.Components.Projections.Location.X">
            <summary>
            The x-coordinate of the location.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Location.Y">
            <summary>
            The y-coordinate of the location.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Location.Z">
            <summary>
            The optional z-coordinate of the location.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Location.#ctor(System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Location"/> struct, including its x- and y-coordinate from the given point.
            </summary>
            <param name="p">Point to initialize the location with.</param>
            <remarks>The z-coordinate keeps its default value, which is null.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Location.#ctor(Ptv.Components.Projections.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Location"/> struct, initializing its coordinates from the given location.
            </summary>
            <param name="location">Location instance to initialize the location with.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Location.#ctor(System.Double,System.Double,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Location"/> struct, initializing it with the given coordinates.
            </summary>
            <param name="x">The x-coordinate of the location.</param>
            <param name="y">The y-coordinate of the location.</param>
            <param name="z">The optional z-coordinate of the location (defaults to null).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Location.ToString">
            <summary>
            Returns a string representing of the current location.
            </summary>
            <returns>String representation of the current location.</returns>
            <remarks>A location is either formatted as <c>({x:0.00000}|{y:0.00000})</c> or 
            <c>({x:0.00000}|{y:0.00000}|{z:0.00000})</c>, depending on the value of its z-coordinate.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Location.Transform(System.String,System.String)">
            <summary>
            Provides a shortcut for transforming the current location from one 
            coordinate reference system to another.
            </summary>
            <param name="sourceId">Identifies the source CRS, e.g. <c>EPSG:4326</c></param>
            <param name="targetId">Identifies the target CRS, e.g. <c>EPSG:3857</c></param>
            <returns>Returns the transformed location.</returns>
            <remarks>The returned location may be set to its defaults if the transformation 
            fails.</remarks>
            <example>The following is an example of transforming a location from <c>WGS84</c> 
            to <c>Google Mercator</c>:
            <code>
            // create a location
            Location Karlsruhe = new Location(8.4038, 49.0081);
            
            // transform location to Google Mercator
            Location mapCenter = Karlsruhe.Transform("EPSG:4326", "EPSG:3857");
            
            ...
            </code>
            </example>
        </member>
        <member name="M:Ptv.Components.Projections.Location.TryTransform(System.String,System.String,Ptv.Components.Projections.Location@)">
            <summary>
            Provides a shortcut for transforming the current location from one coordinate 
            reference system to another.
            </summary>
            <param name="sourceId">Identifier of the source CRS, e.g. <c>EPSG:4326</c>.</param>
            <param name="targetId">Identifier of the target CRS, e.g. <c>EPSG:3857</c>.</param>
            <param name="location">On return, contains the transformed Location.</param>
            <returns>Returns true, if the transformation succeeded, false otherwise.</returns>
            <example>Refer to <see cref="M:Ptv.Components.Projections.Location.Transform(System.String,System.String)">Location.Transform</see> 
            for an example.</example>
        </member>
        <member name="T:Ptv.Components.Projections.CoordinateReferenceSystem">
            <summary>
            Represents a single coordinate reference system. Two of them are used when transforming 
            coordinates through <see cref="T:Ptv.Components.Projections.CoordinateTransformation"/>.
            </summary>
            <remarks>
            <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> stores the parametrization (Proj4 well known text) and the identifier of 
            a CRS. It is the base for any coordinate transformation as it also provides the necessary transformation handles
            and is bound to necessary custom pre- or post-transformation. 
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver">
            <summary>
            Defines well known Mapserver coordinate reference systems.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver.cfMERCATOR">
            <summary> Gets the 'PTV Mercator' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver.cfGK">
            <summary> Gets the 'Gauß-Krüger' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver.cfUTM">
            <summary> Gets the 'UTM' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver.cfGEOMINSEK">
            <summary> Gets the 'PTV GeoMinSek' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver.cfGEODECIMAL">
            <summary> Gets the 'PTV Geodecimal' reference system. </summary>
        </member>
        <member name="T:Ptv.Components.Projections.CoordinateReferenceSystem.XServer">
            <summary> Defines well known XServer coordinate reference systems. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_MERCATOR">
            <summary> Gets the 'PTV Mercator' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_GEODECIMAL">
            <summary> Gets the 'PTV Geodecimal' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.OG_GEODECIMAL">
            <summary> Gets the 'EPSG:4326' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_GEOMINSEC">
            <summary> Gets the 'PTV GeoMinSec' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_SMARTUNITS">
            <summary> Gets the 'PTV Smart Units' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_RASTERSMARTUNITS">
            <summary> Gets the 'PTV Smart Units' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_SUPERCONFORM">
            <summary> Gets the 'PTV Superconform' reference system. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.XServer.PTV_CONFORM">
            <summary> Gets the 'PTV Conform' reference system. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.RedirectionParameter">
            <summary> Name of the parameter used for CRS redirection / aliasing. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.CustomParameter">
            <summary> Name of the parameter used for custom transformations. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.pj">
            <summary> Internal PROJ.4 projection handle. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.disposed">
            <summary> Disposed flag. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.wkt">
            <summary> CRS parameters (Proj4 well known text). </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.id">
            <summary> CRS identifier. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.lockInit">
            <summary> Lock object for <see cref="M:Ptv.Components.Projections.CoordinateReferenceSystem.Init"/> method. </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.CustomTransformation">
            <summary> Gets the custom transformation associated with this CoordinateReferenceSystem. </summary>
        </member>
        <member name="F:Ptv.Components.Projections.CoordinateReferenceSystem.originalCustomTransformation">
            <summary> The original, unmodified custom transformation  that has been used to construct the coordinate reference system. </summary>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> class. </summary>
            <remarks> The default constructor initializes a coordinate reference system which is invalid. </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.#ctor(System.String,System.String,Ptv.Components.Projections.Custom.CustomTransformation,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> class.
            </summary>
            <param name="id">Identifier of the CRS, optional.</param>
            <param name="wkt">CRS parameters, specified as Proj4 well known text.</param>
            <param name="customTransform">The <see cref="P:Ptv.Components.Projections.CoordinateReferenceSystem.CustomTransformation"/> to bind to the CRS (optional).</param>
            <param name="lazy">Specifies if the transformation handles are to be created immediately or lazy, as needed.</param>
            <remarks>
            The identifier of the CRS is not needed to create and initialize the coordinate reference system. The identifier
            comes into play when storing the CRS in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.HasCustomTransform">
            <summary>
            Gets a value indicating whether a custom transformation is associated with this coordinate reference system.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Init">
            <summary>
            Initializes the transformation handles of the coordinate reference system.
            </summary>
            <returns>Returns true, if the coordinate reference system has been successfully initialized. Returns false otherwise.</returns>
            <remarks>Initialization is done only once. Multiple calls to the <see cref="M:Ptv.Components.Projections.CoordinateReferenceSystem.Init"/> method
            do not re-initialize the CRS, even if initialization failed on the first call.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.InitLatLon">
            <summary>
            Special initialization for latitude/longitude systems. 
            When transformed via PROJ.4, these systems need a DEG/RAD to the expected results.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,Ptv.Components.Projections.Custom.CustomTransformation,System.Boolean)">
            <summary>
            Creates and initializes a new coordinate reference system.
            </summary>
            <param name="wkt">CRS parameters, specified as Proj4 well known text.</param>
            <param name="customTransform">The optional custom transformation to bind to the CRS.</param>
            <param name="lazy">Specifies if the transformation handles are to be created immediately or on demand.</param>
            <returns>Returns the newly created CoordinateReferenceSystem instance.</returns>
            <remarks>
            The identifier of a CRS is not needed to create and initialize the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>. 
            The identifier comes into play when storing the CRS in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
            <example>See <see cref="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,System.Boolean)">CoordinateReferenceSystem.Parse</see> for an example.</example>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,System.Boolean)">
            <summary>
            Creates and initializes a coordinate reference system.
            </summary>
            <param name="wkt">CRS parameters, specified as Proj4 well known text.</param>
            <param name="lazy">Specifies if the transformation handles are to be created immediately or on demand.</param>
            <returns>Returns the newly created CoordinateReferenceSystem instance.</returns>
            <remarks>
            The identifier of a CRS is not needed to create and initialize the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>. 
            The identifier comes into play when storing the CRS in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
            <example>The following is an example of creating a <c>WGS84</c> like coordinate reference System:
            <code>
            // EPSG:4326, as taken from www.spatialreference.org
            string wkt = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";
            
            // create CRS
            CoordinateReferenceSystem crs = CoordinateReferenceSystem.Parse(wkt);
            
            // use CRS
            ...
            </code>
            </example>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,System.String,Ptv.Components.Projections.Custom.CustomTransformation,System.Boolean)">
            <summary>
            Creates and initializes a new coordinate reference system.
            </summary>
            <param name="id">Identifier of the coordinate reference system, optional.</param>
            <param name="wkt">CRS parameters, specified as Proj4 well known text.</param>
            <param name="customTransform">The optional custom transformation to bind to the CRS.</param>
            <param name="lazy">Specifies if the transformation handles are to be created immediately or on demand.</param>
            <returns>Returns the newly created CoordinateReferenceSystem instance.</returns>
            <remarks>
            The identifier of a CRS is not needed to create and initialize the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>. 
            The identifier comes into play when storing the CRS in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
            <example>See <see cref="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,System.Boolean)">CoordinateReferenceSystem.Parse</see> for an example.</example>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Creates and initializes a coordinate reference system.
            </summary>
            <param name="id">Identifier of the coordinate reference system, optional.</param>
            <param name="wkt">CRS parameters, specified as Proj4 well known text.</param>
            <param name="lazy">Specifies if the transformation handles are to be created immediately or on demand.</param>
            <returns>Returns the newly created CoordinateReferenceSystem instance.</returns>
            <remarks>
            The identifier of a CRS is not needed to create and initialize the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>. 
            The identifier comes into play when storing the CRS in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
            <example>The following is an example of creating a <c>WGS84</c> like coordinate reference System:
            <code>
            // EPSG:4326, as taken from www.spatialreference.org
            string wkt = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";
            
            // create CRS
            CoordinateReferenceSystem crs = CoordinateReferenceSystem.Parse("WGS84", wkt);
            
            // use CRS
            ...
            </code>
            </example>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.IsAlias">
            <summary>
            Gets a value indicating whether a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> is an alias for another one.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.AliasFor">
            <summary>
            Gets the identifier for which a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> is an alias.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Valid">
            <summary>
            Gets a value indicating whether the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> is valid. 
            </summary><remarks>
            Unless the initialized handle is invalid, <see cref="P:Ptv.Components.Projections.CoordinateReferenceSystem.Valid"/> method
            will return true. Use <see cref="M:Ptv.Components.Projections.CoordinateReferenceSystem.Init"/> method to force the handle 
            initialization.
            </remarks>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Initialized">
            <summary>
            Gets a value indicating whether the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> has already been initialized.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.CustomTransformationWKT">
            <summary>
            Gets the WKT of the associated custom transformation, if any.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.WKT">
            <summary>
            Gets the parameters of a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> (Proj4 well known text).
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.IsLatLon">
            <summary>
            Gets a value indicating whether the coordinate reference system is of type latitude/longitude.
            </summary>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Id">
            <summary>
            Gets the identifier of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>.
            </summary>
            <remarks>
            The identifier of a CRS is empty by default until the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> 
            has been stored in the <see cref="T:Ptv.Components.Projections.Registry"/>.
            </remarks>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateReferenceSystem.Handle">
            <summary>
            Gets the transformation handle of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.ToString">
            <summary>
            Converts the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> to a string. 
            </summary>
            <returns>Returns the same string as <see cref="P:Ptv.Components.Projections.CoordinateReferenceSystem.WKT">CoordinateReferenceSystem.WKT</see>.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> class.
            </summary>
            <remarks>
            This destructor frees native resources that may exist through <a href="http://trac.osgeo.org/proj/">PROJ.4 
            Cartographic Projections Library</a>, which is used for some transformations.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateReferenceSystem.Dispose">
            <summary>
            Disposes the coordinate reference system.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Registry">
            <summary>
            Manages coordinate reference systems in a reusable way.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Ptv.Components.Projections.Registry"/> stores <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> 
            instances and provides an access using CRS identifiers, e.g. <c>EPSG:4326</c>.
            </para><para>
            On startup, the <see cref="T:Ptv.Components.Projections.Registry"/> is initialized from an internal EPSG database 
            so that it is ready to provide access to all well known coordinate reference systems, 
            e.g. <c>EPSG:4326</c> (WGS84), <c>EPSG:76131</c> (PTV Mercator) or <c>EPSG:3857</c> 
            (Google Mercator) to name a few. At the very base, the EPSG database included was 
            generated out of the EPSG Geodetic Parameter Dataset, which is maintained by the 
            Geodesy Subcommittee of OGP. In addition to those EPSG codes, aliases are injected (e.g. 
            <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem.Mapserver">CoordinateReferenceSystem.Mapserver</see>, 
            <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem.XServer">CoordinateReferenceSystem.XServer</see>)
            to make the access more convenient. For the rare case that coordinate reference systems 
            are missing, coordinate reference systems can be added or overwritten using 
            <see cref="M:Ptv.Components.Projections.Registry.Add(System.String,System.String,System.Boolean)">Registry.Add</see>.
            </para>
            </remarks>
        </member>
        <member name="F:Ptv.Components.Projections.Registry.internalRegistry">
            <summary>
            The registry itself.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Registry.epsgDatabaseLoaded">
            <summary>
            Internal flag indicating if EPSG database was already initialized.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Registry.lockRegistry">
            <summary>
            Internal lock object used by <see cref="M:Ptv.Components.Projections.Registry.TryGetCoordinateSystem(System.String,Ptv.Components.Projections.CoordinateReferenceSystem@)"/>.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.GetRegistry(System.Boolean)">
            <summary>
            Accesses the registry, lazily filling in known coordinate reference systems.
            </summary>
            <param name="requiresFullInitialization">Flag indicating if registry has to be fully initialized on return. Full
            initialization forces GetRegistry to read and parse the internal EPSG database as well.</param>
            <returns>Returns the coordinate reference system registry.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.ReadDatabase(System.Action{System.String,System.String})">
            <summary>
            Reads the internal EPSG database and calls the specified action for every record.
            </summary>
            <param name="handleRecord">Action to trigger.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.TryGetCoordinateSystem(System.String,Ptv.Components.Projections.CoordinateReferenceSystem@)">
            <summary>
            Tries to find a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry, given its identifier.
            </summary>
            <param name="id">Identifier of the coordinate reference system, e.g. <c>EPSG:4326</c>.</param>
            <param name="cs">Contains the coordinate reference system on return, which may be null 
            if no coordinate reference system could be found.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Add(System.String,System.String,System.Boolean)">
            <summary>
            Creates, initializes and stores a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry.
            </summary>
            <param name="id">Identifier of the coordinate references system, e.g. <c>EPSG:4326</c>.</param>
            <param name="wkt">Parameters of the coordinate reference system (Proj4 well known text).</param>
            <param name="allowReplace">Specifies if an existing coordinate reference system should be replaced, if it exists.</param>
            <returns>Returns true, if the coordinate reference system was added to the registry. Returns false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Add(System.String,Ptv.Components.Projections.CoordinateReferenceSystem,System.Boolean)">
            <summary>
            Stores a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry.
            </summary>
            <param name="id">Identifier of the coordinate references system, e.g. <c>EPSG:4326</c>.</param>
            <param name="cs"><see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> to add.</param>
            <param name="allowReplace">Specifies if an existing coordinate reference system should be replaced, if it exists.</param>
            <returns>Returns true, if the coordinate reference system was added to the registry. Returns false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Add(System.String,Ptv.Components.Projections.CoordinateReferenceSystem,System.Boolean,System.Boolean)">
            <summary>
            Stores a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry.
            </summary>
            <param name="id">Identifier of the coordinate references system, e.g. <c>EPSG:4326</c>.</param>
            <param name="cs"><see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> to add.</param>
            <param name="allowReplace">Specifies if an existing coordinate reference system should be replaced, if it exists.</param>
            <param name="mustBeValid">Specifies if the coordinate reference system must be valid</param>
            <returns>Returns true, if the coordinate reference system was added to the registry. Returns false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Add(Ptv.Components.Projections.CoordinateReferenceSystem,System.Boolean)">
            <summary>
            Stores a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry.
            </summary>
            <param name="cs"><see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> to add.</param>
            <param name="allowReplace">Specifies if an existing coordinate reference system should be replaced, if it exists.</param>
            <returns>Returns true, if the coordinate reference system was added to the registry. Returns false otherwise.</returns>
            <remarks>The identifier of the CRS must have been already set in the specified <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Contains(System.String)">
            <summary>
            Checks if the registry contains a specific coordinate reference system.
            </summary>
            <param name="id">Identifier of the coordinate reference system, e.g. <c>EPSG:4326</c></param>
            <returns>Returns true, if the registry contains the coordinate reference system. Returns false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Get(System.String)">
            <summary>
            Tries to find a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> in the registry.
            </summary>
            <param name="id">Identifier of the coordinate reference system, e.g. <c>EPSG:4326</c>.</param>
            <returns>Returns a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> instance or null, if the identifier is 
            unknown. 
            </returns>
            <remarks>
            <see cref="M:Ptv.Components.Projections.Registry.Get(System.String)">Registry.Get</see> automatically resolves redirections and aliases, so that it always 
            returns a <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> with a valid and applicable 
            parametrization in <see cref="P:Ptv.Components.Projections.CoordinateReferenceSystem.WKT">CoordinateReferenceSystem.WKT</see>. 
            As a result, the identifier of the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> returned must not necessarily 
            be equal to identifier requested.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.GetIds">
            <summary>
            Returns the identifiers of the coordinate reference systems currently known to the registry.
            </summary>
            <returns>Returns the list of the coordinate reference system identifiers.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.GetContent(System.Boolean)">
            <summary>
            Returns the contents of the registry in CSV format.
            </summary>
            <param name="epsgDatabaseOnly">If set to true, returns the contents of the internal EPSG database only. If set to false, returns the current contents of the registry.</param>
            <returns>String containing the registry contents in the CSV format <c>id;wkt</c>, one CRS per line.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.SetContent(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds the coordinate references system defined by a CSV formatted string to the registry.
            </summary>
            <param name="csv">String containing the coordinate reference systems in the format <c>id;wkt</c>, one CRS per line.</param>
            <param name="allowReplace">Specifies if an existing coordinate reference system should be replaced, if it exists.</param>
            <param name="reinitialize">Specifies if the registry is cleared before adding the coordinate reference system specified by csv.</param>
            <remarks>Note that <c>allowReplace</c> and <c>reinitialize</c> are not mutually exclusive. <c>allowReplace</c> is
            considered per record and has an effect on duplicates included in the csv data.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Registry.Dispose">
            <summary>
            Disposes the <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem" /> objects currently stored in the registry.
            </summary>
            <remarks>Does not only dispose the corresponding objects but clears the registry contents also.</remarks>
        </member>
        <member name="T:Ptv.Components.Projections.ICoordinateTransformation">
            <summary>
            Defines the core coordinate transformation routines. 
            </summary>
            <remarks>
            Use <see cref="M:Ptv.Components.Projections.CoordinateTransformation.Get(System.String,System.String)">CoordinateTransformation.Get</see> 
            to create an instance of <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Windows.Point)">
            <summary>
            Transforms a single <see cref="T:System.Windows.Point">System.Windows.Point</see>.
            </summary>
            <param name="point"><see cref="T:System.Windows.Point">System.Windows.Point</see> to transform.</param>
            <returns>The transformed <see cref="T:System.Windows.Point">System.Windows.Point</see>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Windows.Point[])">
            <summary>
            Transforms an array of <see cref="T:System.Windows.Point">System.Windows.Point</see>.
            </summary>
            <param name="pointsIn">Array containing the points to transform.</param>
            <returns>The array containing the transformed points.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Windows.Point[],System.Windows.Point[])">
            <summary>
            Transforms an array of <see cref="T:System.Windows.Point">System.Windows.Point</see>.
            </summary>
            <param name="pointsIn">Array containing the points to transform.</param>
            <param name="pointsOut">Array in which to put the transformed points.</param>
            <remarks>If <c>pointsOut</c> is set to null the transformed locations are written back to 
            the input array. It is also valid to specify the input array in <c>pointsOut</c>, which is 
            the same as setting <c>pointsOut</c> to null.</remarks>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(Ptv.Components.Projections.Location)">
            <summary>
            Transforms a single <see cref="T:Ptv.Components.Projections.Location"/>.
            </summary>
            <param name="loc"><see cref="T:Ptv.Components.Projections.Location"/> to transform.</param>
            <returns>The transformed <see cref="T:Ptv.Components.Projections.Location"/>.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(Ptv.Components.Projections.Location[])">
            <summary>
            Transforms an array of <see cref="T:Ptv.Components.Projections.Location"/>.
            </summary>
            <param name="locationsIn">Array containing the locations to transform.</param>
            <returns>The array containing the transformed locations.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(Ptv.Components.Projections.Location[],Ptv.Components.Projections.Location[])">
            <summary>
            Transforms an array of <see cref="T:Ptv.Components.Projections.Location"/>.
            </summary>
            <param name="locationsIn">Array containing the locations to transform.</param>
            <param name="locationsOut">Array in which to put the transformed locations.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>
            If <c>locationsOut</c> is set to null the transformed locations are written back to the input array. 
            It is also valid to specify the input array in <c>locationsOut</c>, which is the same as setting 
            <c>locationsOut</c> to null.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,Ptv.Components.Projections.Location},System.Action{``0,Ptv.Components.Projections.Location})">
            <summary>
            Transforms a set of objects with coordinates.
            </summary>
            <typeparam name="T">The type of the objects to be transformed.</typeparam>
            <param name="enumerable">The enumerable delivering the objects to be transformed.</param>
            <param name="getLocation">Function that extracts a <see cref="T:Ptv.Components.Projections.Location"/> from an enumerated object.</param>
            <param name="setLocation">Action that handles a transformed <see cref="T:Ptv.Components.Projections.Location"/>.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>
            <para>Please note that this transformation routine is restricted to object types. It cannot handle structs and 
            can therefore not be used for sets containing <see cref="T:Ptv.Components.Projections.Location"/> or <see cref="T:System.Windows.Point"/>.</para>
            <para><c>setLocation</c> is called for every transformation, passing in the original object.</para>
            </remarks>
            <example>The following is an example for transforming some places from <c>PTV GeoMinSek</c> 
            to <c>PTV Mercator</c>:
            <code>
            class Place
            {
               // place location
               public Location Location;
               
               // place name
               public String Name;
            }
            
            ...
            
            // create some places
             Place[] places = new Place[] {
                 new Place() { Location = new Location(841090, 5006420), Name = "Frankfurt" },
                 new Place() { Location = new Location(1323560, 5230020), Name = "Berlin" }
             };
            
             // get a transformation for transforming from PTV GeoMinSek to PTV Mercator
             ICoordinateTransformation t = CoordinateTransformation.Get(
                 CoordinateReferenceSystem.Mapserver.cfGEOMINSEK,
                 CoordinateReferenceSystem.XServer.PTV_MERCATOR
             );
            
             // transform the places
             t.Transform&lt;Place&gt;(
                 places, place => place.Location,
                 (place, location) => place.Location = location
             );
            </code>
            </example>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Windows.Point},System.Action{``0,System.Windows.Point})">
            <summary>
            Transforms a set of objects with coordinates.
            </summary>
            <typeparam name="T">The type of the objects to be transformed.</typeparam>
            <param name="enumerable">The enumerable delivering the objects to be transformed.</param>
            <param name="getPoint">Function that extracts a <see cref="T:System.Windows.Point">System.Windows.Point</see>
            from an enumerated object.</param>
            <param name="setPoint">Action that handles a transformed <see cref="T:System.Windows.Point">System.Windows.Point</see>.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>
            <para>Please note that this transformation routine is restricted to object types. It cannot handle structs and 
            can therefore not be used for sets containing <see cref="T:Ptv.Components.Projections.Location"/> or <see cref="T:System.Windows.Point"/>.</para>
            <para><c>setLocation</c> is called for every transformation, passing in the original object.</para>
            </remarks>
            <example>The following is an example for transforming some places from <c>PTV GeoMinSek</c> 
            to <c>PTV Mercator</c>:
            <code>
            class Place
            {
               // place location
               public System.Windows.Point Location;
               
               // place name
               public String Name;
            }
            
            ...
            
            // create some places
             Place[] places = new Place[] {
                 new Place() { Location = new System.Windows.Point(841090, 5006420), Name = "Frankfurt" },
                 new Place() { Location = new System.Windows.Point(1323560, 5230020), Name = "Berlin" }
             };
            
             // get a transformation for transforming from PTV GeoMinSek to PTV Mercator
             ICoordinateTransformation t = CoordinateTransformation.Get(
                 CoordinateReferenceSystem.Mapserver.cfGEOMINSEK,
                 CoordinateReferenceSystem.XServer.PTV_MERCATOR
             );
            
             // transform the places
             t.Transform&lt;Place&gt;(
                 places, place => place.Location,
                 (place, p) => place.Location = p
             );
            </code>
            </example>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Transforms a coordinate.
            </summary>
            <param name="xin">Value containing the x-coordinate.</param>
            <param name="yin">Value containing the y-coordinate.</param>
            <param name="xout">On return, contains the transformed x-coordinate.</param>
            <param name="yout">On return, contains the transformed y-coordinate.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Double,System.Double,System.Nullable{System.Double},System.Double@,System.Double@,System.Nullable{System.Double}@)">
            <summary>
            Transforms a coordinate.
            </summary>
            <param name="xin">Value containing the x-coordinate.</param>
            <param name="yin">Value containing the y-coordinate.</param>
            <param name="zin">Value containing the z-coordinate, nullable.</param>
            <param name="xout">On return, contains the transformed x-coordinate.</param>
            <param name="yout">On return, contains the transformed y-coordinate.</param>
            <param name="zout">On return, contains the transformed z-coordinate.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>The returned z-coordinate is set to null if the input z-coordinate was null as well.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="xin">Array containing the x-coordinates to transform.</param>
            <param name="yin">Array containing the y-coordinates to transform.</param>
            <param name="xout">Array in which to store the transformed x-coordinates.</param>
            <param name="yout">Array in which to store the transformed y-coordinates.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>The caller is responsible for allocating memory for the output arrays. It is allowed
            to use the input arrays in <c>xout</c> and <c>yout</c>.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.ICoordinateTransformation.Transform(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="xin">Array containing the x-coordinates to transform.</param>
            <param name="yin">Array containing the y-coordinates to transform.</param>
            <param name="zin">Array containing the z-coordinates to transform.</param>
            <param name="xout">Array in which to store the transformed x-coordinates.</param>
            <param name="yout">Array in which to store the transformed y-coordinates.</param>
            <param name="zout">Array in which to store the transformed z-coordinates.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>The caller is responsible for allocating memory for the output arrays. It is allowed
            to use the input arrays in <c>xout</c>, <c>yout</c> and <c>zout</c>.</remarks>
        </member>
        <member name="T:Ptv.Components.Projections.CoordinateTransformation">
            <summary>
            Provides the core implementation of the coordinate transformation routines and is the root for 
            accessing <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/> implementations, each identified by a pair of 
            coordinate reference systems (namely source and target). 
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Get(System.String,System.String)">
            <summary>
            Gets a coordinate transformation for the specified coordinate reference system identifiers.
            </summary>
            <param name="sourceId">Identifier of the source coordinate reference system.</param>
            <param name="targetId">Identifier of the target coordinate reference system.</param>
            <returns>The coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">A TransformationNotFoundException will be thrown if the 
            coordinate transformation cannot be constructed.</exception>
            <remarks><para><see cref="M:Ptv.Components.Projections.CoordinateTransformation.Get(System.String,System.String)">CoordinateTransformation.Get</see> first tries 
            to get a direct transformation from <see cref="T:Ptv.Components.Projections.Direct.CoordinateTransformation">Direct.CoordinateTransformation</see> 
            before it tries to get a transformation from <see cref="T:Ptv.Components.Projections.Proj4.CoordinateTransformation">Proj4.CoordinateTransformation</see>.
            </para><para>Changing the configuration in <see cref="P:Ptv.Components.Projections.Direct.CoordinateTransformation.Enabled">Direct.CoordinateTransformation.Enabled</see> 
            and / or <see cref="P:Ptv.Components.Projections.Proj4.CoordinateTransformation.Enabled">Proj4.CoordinateTransformation.Enabled</see> may influence this behavior.</para>
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Get(Ptv.Components.Projections.CoordinateReferenceSystem,Ptv.Components.Projections.CoordinateReferenceSystem)">
            <summary>
            Gets a coordinate transformation for the specified coordinate reference systems.
            </summary>
            <param name="source">The source coordinate reference system.</param>
            <param name="target">The target coordinate reference system.</param>
            <returns>The coordinate transformation, provided through <see cref="T:Ptv.Components.Projections.ICoordinateTransformation"/>.</returns>
            <exception cref="T:Ptv.Components.Projections.TransformationNotFoundException">A TransformationNotFoundException will be thrown if the 
            coordinate transformation cannot be constructed.</exception>
            <remarks>See remarks on <see cref="M:Ptv.Components.Projections.CoordinateTransformation.Get(System.String,System.String)">CoordinateTransformation.Get</see>
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.ChkLen(System.Double[],System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Internal helper that checks if the given arrays have a valid number of elements.
            </summary>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <param name="z">Array containing the z-coordinates. This array is considered optional.</param>
            <param name="idx">Index of the first coordinate.</param>
            <param name="length">Number of coordinates.</param>
            <returns>True, if the arrays are valid, false otherwise.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.TransformUnchecked(System.Double[],System.Double[],System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Transforms a set of coordinates.
            </summary>
            <param name="xin">Array containing the x-coordinates to transform.</param>
            <param name="yin">Array containing the y-coordinates to transform.</param>
            <param name="zin">Array containing the z-coordinates to transform.</param>
            <param name="idxin">Specifies the index of the first coordinate to transform.</param>
            <param name="xout">Array in which to store the transformed x-coordinates.</param>
            <param name="yout">Array in which to store the transformed y-coordinates.</param>
            <param name="zout">Array in which to store the transformed z-coordinates.</param>
            <param name="idxout">Specifies the index at which to begin to store transformed coordinates.</param>
            <param name="length">Number of coordinates to transform.</param>
            <remarks>The caller is responsible for allocating memory for the output arrays. It is allowed
            to use the input arrays in <c>xout</c>, <c>yout</c> and <c>zout</c>.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.TransformUnchecked(System.Double,System.Double,System.Nullable{System.Double},System.Double@,System.Double@,System.Nullable{System.Double}@)">
            <summary>
            Transforms a coordinate.
            </summary>
            <param name="xin">Value containing the x-coordinate.</param>
            <param name="yin">Value containing the y-coordinate.</param>
            <param name="zin">Value containing the z-coordinate, nullable.</param>
            <param name="xout">On return, contains the transformed x-coordinate.</param>
            <param name="yout">On return, contains the transformed y-coordinate.</param>
            <param name="zout">On return, contains the transformed z-coordinate.</param>
            <remarks>The returned z-coordinate is set to null if the input z-coordinate was null as well.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.TransformUnchecked(System.Windows.Point[],System.Windows.Point[])">
            <summary>
            Transforms an array of <see cref="T:System.Windows.Point">System.Windows.Point</see>.
            </summary>
            <param name="pointsIn">Array containing the points to transform.</param>
            <param name="pointsOut">Array in which to put the transformed points.</param>
            <remarks>If <c>pointsOut</c> is set to null the transformed locations are written back to 
            the input array. It is also valid to specify the input array in <c>pointsOut</c>, which is 
            the same as setting <c>pointsOut</c> to null.</remarks>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.TransformUnchecked(Ptv.Components.Projections.Location[],Ptv.Components.Projections.Location[])">
            <summary>
            Transforms an array of <see cref="T:Ptv.Components.Projections.Location"/>.
            </summary>
            <param name="locsIn">Array containing the locations to transform.</param>
            <param name="locsOut">Array in which to put the transformed locations.</param>
            <exception cref="T:Ptv.Components.Projections.TransformationException">Thrown in the unlikely event that a coordinate transformation fails.</exception>
            <remarks>
            If <c>locationsOut</c> is set to null the transformed locations are written back to the input array. 
            It is also valid to specify the input array in <c>locationsOut</c>, which is the same as setting 
            <c>locationsOut</c> to null.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Windows.Point)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Windows.Point[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Windows.Point[],System.Windows.Point[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(Ptv.Components.Projections.Location)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(Ptv.Components.Projections.Location[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(Ptv.Components.Projections.Location[],Ptv.Components.Projections.Location[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,Ptv.Components.Projections.Location},System.Action{``0,Ptv.Components.Projections.Location})">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Windows.Point},System.Action{``0,System.Windows.Point})">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Double,System.Double,System.Double@,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Double,System.Double,System.Nullable{System.Double},System.Double@,System.Double@,System.Nullable{System.Double}@)">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Double[],System.Double[],System.Double[],System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:Ptv.Components.Projections.CoordinateTransformation.Transform(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <inheritdoc/>
        </member>
        <member name="P:Ptv.Components.Projections.CoordinateTransformation.Valid">
            <summary> Gets a value indicating whether a transformation is generally possible.  </summary>
            <remarks>
            Invalid parameters and lazy initialization of <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/> 
            may cause <see cref="P:Ptv.Components.Projections.CoordinateTransformation.Valid">CoordinateTransformation.Valid</see> to return false.
            </remarks>
        </member>
        <member name="T:Ptv.Components.Projections.TransformationNotFoundException">
            <summary>
            Exception that is thrown if a certain transformation, given a source and 
            target coordinate reference system, is not available or not possible.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationNotFoundException.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationNotFoundException"/> class. </summary>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationNotFoundException"/> class, setting the provided message string.
            </summary>
            <param name="message">The message to associate with the exception.</param>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationNotFoundException"/> class, setting the provided message string and inner exception.
            </summary>
            <param name="message">The message to associate with the TransformationNotFoundException.</param>
            <param name="innerException">The inner exception to associate with the TransformationNotFoundException.</param>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationNotFoundException"/> class, setting the source and target reference systems.
            </summary>
            <param name="sourceId">The identifier of the source coordinate reference system.</param>
            <param name="targetId">The identifier of the target coordinate reference system.</param>
        </member>
        <member name="T:Ptv.Components.Projections.TransformationException">
            <summary>
            Exception that is thrown in the unlikely event that a coordinate transformation fails.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationException"/> class. 
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationException"/> class. 
            </summary>
            <param name="message">The message to associate with the exception.</param>
        </member>
        <member name="M:Ptv.Components.Projections.TransformationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.TransformationException"/> class. 
            </summary>
            <param name="message">The message to associate with the TransformationException.</param>
            <param name="innerException">The inner exception to associate with the TransformationException.</param>
        </member>
        <member name="T:Ptv.Components.Projections.Extensions">
            <summary>
            Internal extension methods.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Extensions.getId(Ptv.Components.Projections.CoordinateReferenceSystem,System.String)">
            <summary>
            Safely gets the id of the given coordinate reference system.
            </summary>
            <param name="crs">Coordinate reference system to get the id for. May be null.</param>
            <param name="nullString">String to return if <paramref name="crs"/> is null. Defaults to "&lt;null&gt;".</param>
            <returns>The id of the coordinate reference system.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Distance">
            <summary>
            Provides distance calculation routines.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Distance.GetHaversineDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the haversine distance between to points, specified as lon/lat, aka WGS84, aka EPSG:4326.
            </summary>
            <param name="x0">Longitude of first point, in degress</param>
            <param name="y0">Latitude of first point, in degress</param>
            <param name="x1">Longitude of second point, in degress</param>
            <param name="y1">Latitude of second point, in degress</param>
            <returns>Haversine distance in [km].</returns>
            <example><code>
            double d_Karlsruhe_Berlin = GetHaversineDistance(8.40376, 49.00808, 13.4114, 52.5234);
            </code><code>
            double d_Barcelona_Moskau = GetHaversineDistance(2.16992, 41.38793, 37.6177, 55.75586);
            </code></example>
        </member>
        <member name="M:Ptv.Components.Projections.Distance.GetHaversineDistance(Ptv.Components.Projections.CoordinateReferenceSystem,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Extension method that calculates the haversine distance between to 
            points using a specific coordinate reference system.
            </summary>
            <param name="crs">Coordinate reference system</param>
            <param name="x0">X-coordinate of first point</param>
            <param name="y0">Y-coordinate of first point</param>
            <param name="x1">X-coordinate of second point</param>
            <param name="y1">Y-coordinate of second point</param>
            <returns>Haversine distance in [km].</returns>
            <remarks>This extension has been provided for convenience reasons only. It is good enough for single
            coordinates but should be used in batch processing scenarios where performance is an issue. On each 
            call this extension method gets a coordinate transformation for transforming from the specified CRS 
            to EPSG:4326, transforms the specified coordinates to EPSG:4326 and finally uses the transformed 
            coordinates with the default, lon/lat based haversine distance calculation. When it comes to 
            mass-calculations it is recommended to cache and re-use any coordinate transformation necessary by 
            the client thus avoid per coordinate transformation lookups.</remarks>
            <example><code>
            double d_Frankfurt_Berlin = CoordinateReferenceSystem.XServer.PTV_MERCATOR.GetHaversineDistance(965820, 6458402, 1489888, 6883432);
            </code></example>
        </member>
        <member name="T:Ptv.Components.Projections.Custom.NamespaceDoc">
            <summary>
            The <see cref="N:Ptv.Components.Projections.Custom"/> namespace contains classes 
            implementing custom pre- and post-transformations for use with <see cref="T:Ptv.Components.Projections.CoordinateReferenceSystem"/>.
            </summary>
        </member>
        <member name="T:Ptv.Components.Projections.Custom.CustomTransformation">
            <summary>
            Utility class introducing nested pre- and post-transformation routines. 
            </summary>
            <remarks>
            <para>Custom transformations have been introduced to be able to offer special coordinate reference 
            systems such as <c>PTV GeoMinSek</c> or <c>PTV Geodecimal</c>, which are based on <c>WGS84</c> but differ
            in formatting.</para>
            <para>Custom transformations are also used to handle simple RAD/DEG conversions which are mandatory 
            for any coordinate reference systems using latitude/longitude coordinates.</para> 
            </remarks>
        </member>
        <member name="P:Ptv.Components.Projections.Custom.CustomTransformation.InnerTransformation">
            <summary>
            Gets or sets the inner transformation.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.#ctor(System.Collections.Generic.Stack{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> class.
            </summary>
            <param name="args">Parameters of <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/>.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.#ctor(Ptv.Components.Projections.Custom.CustomTransformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> class.
            </summary>
            <param name="innerTransformation">The inner <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> instance, non-null for nested transformations.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Pre(System.Double@,System.Double@)">
            <summary>
            Pre-transformation of the given coordinates. The default implementation 
            just calls the inner <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/>, if valid. 
            </summary>
            <param name="x">Value containing the X-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Post(System.Double@,System.Double@)">
            <summary>
            Post-transformation of the given coordinates. 
            </summary>
            <remarks>The default implementation just calls the inner 
            <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/>, if valid.</remarks>
            <param name="x">Value containing the x-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="P:Ptv.Components.Projections.Custom.CustomTransformation.Transforms">
            <summary>
            Gets a value indicating whether any parameters are set in a way that makes pre- or post-transformation necessary.
            </summary>
            <remarks>The default implementation just calls the inner 
            <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/>, if valid.</remarks>
        </member>
        <member name="P:Ptv.Components.Projections.Custom.CustomTransformation.InnerMost">
            <summary> Gets or sets the innermost <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> instance.  </summary>
            <remarks> Using this property it is possible to nest custom transformations. </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Pre(System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Pre-transforms the given coordinates.
            </summary>
            <param name="length">Specifies the number of coordinates to transform.</param>
            <param name="ofs">Specifies the index of the first coordinate to transform.</param>
            <param name="x">Value containing the x-coordinates.</param>
            <param name="y">Value containing the y-coordinates.</param>
            <remarks>The resulting coordinates are written back to the arrays provided.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Post(System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Post-transforms the given coordinates.
            </summary>
            <param name="length">Specifies the number of coordinates to transform.</param>
            <param name="ofs">Specifies the index of the first coordinates to transform.</param>
            <param name="x">Array containing the x-coordinates.</param>
            <param name="y">Array containing the y-coordinates.</param>
            <remarks>The resulting coordinates are written back to the arrays provided.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.ToString">
            <summary>
            Returns a string describing the custom transformation chain.
            </summary>
            <returns>String describing the custom transformation chain.</returns>
            <remarks>The transformation chain can be recreated using the returned 
            string with <see cref="M:Ptv.Components.Projections.Custom.CustomTransformation.Parse(System.String@,System.String,System.Boolean)">CustomTransformation.Parse</see>.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Parse(System.String@,System.String,System.Boolean)">
            <summary>
            Creates a custom transformation chain out of coordinate reference system description.
            </summary>
            <param name="wkt">The projection parameters, specified as Proj4 well known text.</param>
            <param name="param">The name of the parameter containing the custom transformation description.</param>
            <param name="remove">If set to true, removes the custom transformation description from the well known text after processing it.</param>
            <returns>The <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> matching the description.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Parse(System.Collections.Generic.Stack{System.String})">
            <summary>
            Creates a custom transformation chain out of a textual description.
            </summary>
            <param name="args">The custom transformation description.</param>
            <returns>The <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> matching the description.</returns>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.CustomTransformation.Clone">
            <summary>
            Returns a deep copy of the <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/> object.
            </summary>
            <returns>The <see cref="T:Ptv.Components.Projections.Custom.CustomTransformation"/>'s clone.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation">
            <summary>
            Custom transformation that implements a simple shift and scale transform.
            </summary>
            <remarks>
            <para>Pre-transformation: c' = (c + shift) * scale .</para>
            <para>Post-transformation: c' = c / scale - shift .</para>
            </remarks>
        </member>
        <member name="F:Ptv.Components.Projections.Custom.ShiftScaleTransformation.shx">
            <summary>
            Scale and shift values.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Custom.ShiftScaleTransformation.shy">
            <summary>
            Scale and shift values.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Custom.ShiftScaleTransformation.scx">
            <summary>
            Scale and shift values.
            </summary>
        </member>
        <member name="F:Ptv.Components.Projections.Custom.ShiftScaleTransformation.scy">
            <summary>
            Scale and shift values.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.#ctor(Ptv.Components.Projections.Custom.CustomTransformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/> class.
            </summary>
            <param name="inner">Inner custom transformation (optional).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.#ctor(System.Collections.Generic.Stack{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/> class.
            </summary>
            <param name="args">Parameters of <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/>.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.#ctor(System.Double,System.Double,System.Double,System.Double,Ptv.Components.Projections.Custom.CustomTransformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/> class.
            </summary>
            <param name="shx">Shift value for the x-coordinate.</param>
            <param name="shy">Shift value for the y-coordinate.</param>
            <param name="scx">Scale factor for the x-coordinate.</param>
            <param name="scy">Scale factor for the y-coordinate.</param>
            <param name="inner">Inner custom transformation (optional).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.#ctor(System.Double,System.Double,Ptv.Components.Projections.Custom.CustomTransformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/> class.
            </summary>
            <param name="shift">Shift value for the x- and y-coordinate.</param>
            <param name="scale">Scale factor for the x- and y-coordinate.</param>
            <param name="inner">Inner custom transformation (optional).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.Pre(System.Double@,System.Double@)">
            <summary>
            Pre-transforms the given coordinates.
            </summary>
            <remarks>
            Uses the formula <c>c' = (c + shift) * scale)</c> for the transformation,
            then passes the coordinates on to the inner custom transformation.
            </remarks>
            <param name="x">Value containing the x-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.Post(System.Double@,System.Double@)">
            <summary>
            Post-transforms the given coordinates.
            </summary>
            <remarks>
            Passes the coordinates on to the inner transformation, then  
            transforms the coordinates using the formula <c>c' = c / scale - shift</c>.
            </remarks>
            <param name="x">Value containing the x-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="P:Ptv.Components.Projections.Custom.ShiftScaleTransformation.Transforms">
            <summary> Checks if any parameters are set in a way that makes pre- or post-transformation necessary. </summary>
            <remarks>
            For the <c>ShiftScaleTransform</c> the transformation is unnecessary if the shift values are 
            set to 0 and the scale factors are set to 1.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.ToString">
            <summary>
            Returns a string describing the custom transformation chain.
            </summary>
            <returns>String describing the custom transformation chain.</returns>
            <remarks>The transformation chain can be recreated using the returned 
            string with <see cref="M:Ptv.Components.Projections.Custom.CustomTransformation.Parse(System.String@,System.String,System.Boolean)">CustomTransformation.Parse</see>.</remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.ShiftScaleTransformation.Clone">
            <summary>
            Returns a deep copy of the <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/> object.
            </summary>
            <returns>The <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/>'s clone.</returns>
        </member>
        <member name="T:Ptv.Components.Projections.Custom.GeoMinSekTransformation">
            <summary>
            Custom transformation that handles <c>EPSG:4326</c> to <c>PTV GeoMinSek</c> transformation and vice versa.
            </summary>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.#ctor(Ptv.Components.Projections.Custom.CustomTransformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.GeoMinSekTransformation"/> class.
            </summary>
            <param name="inner">Inner custom transformation (optional).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.#ctor(System.Collections.Generic.Stack{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ptv.Components.Projections.Custom.GeoMinSekTransformation"/> class.
            </summary>
            <param name="args">Parameters of <see cref="T:Ptv.Components.Projections.Custom.ShiftScaleTransformation"/>.</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.Pre(System.Double@,System.Double@)">
            <summary>
            Pre-transforms the given coordinates.
            </summary><remarks>
            Pre-transforms the given coordinates from <c>PTV GeoMinSek</c> to 
            <c>EPSG:4326</c>, then passes them on to the inner custom transformation.
            </remarks>
            <param name="x">Value containing the x-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.Post(System.Double@,System.Double@)">
            <summary>
            Post-transforms the given coordinates.
            </summary><remarks>
            Post-transforms the given coordinates using the inner custom transformation,
            then transforms the coordinate from <c>EPSG:4326</c> to <c>PTV GeoMinSek</c>.
            </remarks>
            <param name="x">Value containing the x-coordinate (in and out).</param>
            <param name="y">Value containing the y-coordinate (in and out).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.Wgs84ToGeoMinSek(System.Double@)">
            <summary>
            Transforms a coordinate from <c>EPSG:4326</c> to <c>PTV GeoMinSek</c>.
            </summary>
            <param name="c">Coordinate to transform (in and out).</param>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.GeoMinSekToWgs84(System.Double@)">
            <summary>
            Transforms a coordinate from <c>PTV GeoMinSek</c> to <c>EPSG:4326</c>.
            </summary>
            <param name="c">Coordinate to transform (in and out).</param>
        </member>
        <member name="P:Ptv.Components.Projections.Custom.GeoMinSekTransformation.Transforms">
            <summary>
            Checks if any parameters are set in a way that makes pre- or post-transformation necessary.
            </summary>
            <remarks>
            For <c>GeoMinSekTransform</c> the transformation is necessary in an case.
            </remarks>
        </member>
        <member name="M:Ptv.Components.Projections.Custom.GeoMinSekTransformation.Clone">
            <summary>
            Returns a deep copy of the <see cref="T:Ptv.Components.Projections.Custom.GeoMinSekTransformation"/> object.
            </summary>
            <returns>The <see cref="T:Ptv.Components.Projections.Custom.GeoMinSekTransformation"/>'s clone.</returns>
        </member>
    </members>
</doc>
